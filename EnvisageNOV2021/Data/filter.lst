GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  *-----------------------------------------------------------------------------------------
       
         Envisage 10 project -- Data preparation modules
       
         GAMS file : LoadData.gms
       
         @purpose  : Loads the data for the filter routine
       
         @author   : Tom Rutherford, with modifications by Wolfgang Britz
                     and adjustments for Env10 by Dominique van der Mensbrugghe
         @date     : 21.10.16
         @since    :
         @refDoc   :
         @seeAlso  :
         @calledBy : AggGTAP.cmd
         @Options  :
       
  20  *-----------------------------------------------------------------------------------------
  21   
  22  *  Read the user-defined options for this run
  23   
INCLUDE    F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\ANX1Flt.gms
  27   
  30   
  31  scalars
  32     ifKeepIntermediateConsumption / 1 /
  33     ifKeepPrivateconsumption      / 1 /
  34     ifKeepGovernmentconsumption   / 1 /
  35     ifKeepInvestments             / 1 /
  36     ifGDPKeep                     / 1 /
  37     ifKeepFactorincomeplusbop     / 1 /
  38     ifAdjDepr                     / 1 /
  39     abstol                        / 1e-10 /
  40     relTol                        / 0.005 /
  41     relTolRed                     / 1e-6  /
  42     nsteps                        / 5 /
  43     minNumTransactions            / 50000 /
  44  ;
  45   
  46  file log / ANX1flt.log / ;
  47  put log ;
  48   
  49  scalars
  50     ifFirstPass    / 1 /
  51     ifAggTrade     / 1 /
  52  ;
  53   
  54  file logfile / ANX1Flt.log / ;
  55  file msglog / msglog / ;
  56   
  57  *  Get the data
  58   
INCLUDE    F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\ANX1Map.gms
  76   
  77  *  Only used to override GTAP parameters for Env model
  78   
  81   
  82  *  Select a labor option
  83  *  Valid options are:
  84  *     noLab  -- ignore employment volumes (all wages are set to 1)
  85  *     agLab  -- calculate ag and non-ag employment (wages uniform within zones)
  86  *     allLab -- assume employment data is correct for each sector (wages differ for each sector)
  87  *     giddLab -- Use the GIDD labor data
  88   
  89  $macro IFLABOR noLab
  90   
INCLUDE    F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\GTAPSets10APOWF.gms
  92   
  93  * ----------------------------------------------------------------------------------------
  94  *
  95  *  Set definitions for standard GTAP database
  96  *
  97  *     Includes water endowment
  98  *
  99  * ----------------------------------------------------------------------------------------
 100   
 101  scalar ver / 10 / ;
 102   
 104   
 105  set REG Set of regions in GTAP /
 106     AUS     "Australia"
 107     NZL     "New Zealand"
 108     XOC     "Rest of Oceania"
 109     CHN     "China"
 110     HKG     "Hong Kong"
 111     JPN     "Japan"
 112     KOR     "Korea"
 113     MNG     "Mongolia"
 114     TWN     "Taiwan"
 115     XEA     "Rest of East Asia"
 116     BRN     "Brunei Darussalam"
 117     KHM     "Cambodia"
 118     IDN     "Indonesia"
 119     LAO     "Laos"
 120     MYS     "Malaysia"
 121     PHL     "Philippines"
 122     SGP     "Singapore"
 123     THA     "Thailand"
 124     VNM     "Viet Nam"
 125     XSE     "Rest of Southeast Asia"
 126     BGD     "Bangladesh"
 127     IND     "India"
 128     NPL     "Nepal"
 129     PAK     "Pakistan"
 130     LKA     "Sri Lanka"
 131     XSA     "Rest of South Asia"
 132     CAN     "Canada"
 133     USA     "United States of America"
 134     MEX     "Mexico"
 135     XNA     "Rest of North America"
 136     ARG     "Argentina"
 137     BOL     "Bolivia"
 138     BRA     "Brazil"
 139     CHL     "Chile"
 140     COL     "Colombia"
 141     ECU     "Ecuador"
 142     PRY     "Paraguay"
 143     PER     "Peru"
 144     URY     "Uruguay"
 145     VEN     "Venezuela"
 146     XSM     "Rest of South America"
 147     CRI     "Costa Rica"
 148     GTM     "Guatemala"
 149     HND     "Honduras"
 150     NIC     "Nicaragua"
 151     PAN     "Panama"
 152     SLV     "El Salvador"
 153     XCA     "Rest of Central America"
 154     DOM     "Dominican Republic"
 155     JAM     "Jamaica"
 156     PRI     "Puerto Rico"
 157     TTO     "Trinidad and Tobago"
 158     XCB     "Rest of Caribbean"
 159     AUT     "Austria"
 160     BEL     "Belgium"
 161     CYP     "Cyprus"
 162     CZE     "Czech Republic"
 163     DNK     "Denmark"
 164     EST     "Estonia"
 165     FIN     "Finland"
 166     FRA     "France"
 167     DEU     "Germany"
 168     GRC     "Greece"
 169     HUN     "Hungary"
 170     IRL     "Ireland"
 171     ITA     "Italy"
 172     LVA     "Latvia"
 173     LTU     "Lithuania"
 174     LUX     "Luxembourg"
 175     MLT     "Malta"
 176     NLD     "Netherlands"
 177     POL     "Poland"
 178     PRT     "Portugal"
 179     SVK     "Slovakia"
 180     SVN     "Slovenia"
 181     ESP     "Spain"
 182     SWE     "Sweden"
 183     GBR     "United Kingdom"
 184     CHE     "Switzerland"
 185     NOR     "Norway"
 186     XEF     "Rest of EFTA"
 187     ALB     "Albania"
 188     BGR     "Bulgaria"
 189     BLR     "Belarus"
 190     HRV     "Croatia"
 191     ROU     "Romania"
 192     RUS     "Russian Federation"
 193     UKR     "Ukraine"
 194     XEE     "Rest of Eastern Europe"
 195     XER     "Rest of Europe"
 196     KAZ     "Kazakhstan"
 197     KGZ     "Kyrgyzstan"
 198     TJK     "Tajikistan"
 199     XSU     "Rest of Former Soviet Union"
 200     ARM     "Armenia"
 201     AZE     "Azerbaijan"
 202     GEO     "Georgia"
 203     BHR     "Bahrain"
 204     IRN     "Iran"
 205     ISR     "Israel"
 206     JOR     "Jordan"
 207     KWT     "Kuwait"
 208     OMN     "Oman"
 209     QAT     "Qatar"
 210     SAU     "Saudi Arabia"
 211     TUR     "Turkey"
 212     ARE     "United Arab Emirates"
 213     XWS     "Rest of Western Asia"
 214     EGY     "Egypt"
 215     MAR     "Morocco"
 216     TUN     "Tunisia"
 217     XNF     "Rest of North Africa"
 218     BEN     "Benin"
 219     BFA     "Burkina Faso"
 220     CMR     "Cameroon"
 221     CIV     "Côte d'Ivoire"
 222     GHA     "Ghana"
 223     GIN     "Guinea"
 224     NGA     "Nigeria"
 225     SEN     "Senegal"
 226     TGO     "Togo"
 227     XWF     "Rest of Western Africa"
 228     XCF     "Central Africa"
 229     XAC     "South-Central Africa"
 230     ETH     "Ethiopia"
 231     KEN     "Kenya"
 232     MDG     "Madagascar"
 233     MWI     "Malawi"
 234     MUS     "Mauritius"
 235     MOZ     "Mozambique"
 236     RWA     "Rwanda"
 237     TZA     "Tanzania"
 238     UGA     "Uganda"
 239     ZMB     "Zambia"
 240     ZWE     "Zimbabwe"
 241     XEC     "Rest of Eastern Africa"
 242     BWA     "Botswana"
 243     NAM     "Namibia"
 244     ZAF     "South Africa"
 245     XSC     "Rest of South African Customs Union"
 246     XTW     "Rest of the World"
 247  / ;
 248   
 249  alias(reg,r0) ; alias(reg,rp0) ;
 250   
 251  set comm "Set of activities in GTAP" /
 252     PDR     "Paddy rice"
 253     WHT     "Wheat"
 254     GRO     "Cereal grains nec"
 255     V_F     "Vegetables, fruit, nuts"
 256     OSD     "Oil seeds"
 257     C_B     "Sugar cane, sugar beet"
 258     PFB     "Plant-based fibers"
 259     OCR     "Crops nec"
 260     CTL     "Bovine cattle, sheep and goats, horses"
 261     OAP     "Animal products nec"
 262     RMK     "Raw milk"
 263     WOL     "Wool, silk-worm cocoons"
 264     FRS     "Forestry"
 265     FSH     "Fishing"
 266     COA     "Coal"
 267     OIL     "Oil"
 268     GAS     "Gas"
 269     OXT     "Other Extraction (formerly omn Minerals nec)"
 270     CMT     "Bovine meat products"
 271     OMT     "Meat products nec"
 272     VOL     "Vegetable oils and fats"
 273     MIL     "Dairy products"
 274     PCR     "Processed rice"
 275     SGR     "Sugar"
 276     OFD     "Food products nec"
 277     B_T     "Beverages and tobacco products"
 278     TEX     "Textiles"
 279     WAP     "Wearing apparel"
 280     LEA     "Leather products"
 281     LUM     "Wood products"
 282     PPP     "Paper products, publishing"
 283     P_C     "Petroleum, coal products"
 284     CHM     "Chemical products"
 285     BPH     "Basic pharmaceutical products"
 286     RPP     "Rubber and plastic products"
 287     NMM     "Mineral products nec"
 288     I_S     "Ferrous metals"
 289     NFM     "Metals nec"
 290     FMP     "Metal products"
 291     ELE     "Computer, electronic and optical products"
 292     EEQ     "Electrical equipment"
 293     OME     "Machinery and equipment nec"
 294     MVH     "Motor vehicles and parts"
 295     OTN     "Transport equipment nec"
 296     OMF     "Manufactures nec"
 297  *  ELY           "Electricity"
 298     TnD           "Electricity transmission and distribution"
 299     NuclearBL     "Nuclear power"
 300     CoalBL        "Coal power baseload"
 301     GasBL         "Gas power baseload"
 302     WindBL        "Wind power"
 303     HydroBL       "Hydro power baseload"
 304     OilBL         "Oil power baseload"
 305     OtherBL       "Other baseload"
 306     GasP          "Gas power peakload"
 307     HydroP        "Hydro power peakload"
 308     OilP          "Oil power peakload"
 309     SolarP        "Solar power"
 310     GDT     "Gas manufacture, distribution"
 311     WTR     "Water"
 312     CNS     "Construction"
 313     TRD     "Trade"
 314     AFS     "Accommodation, Food and service activities"
 315     OTP     "Transport nec"
 316     WTP     "Water transport"
 317     ATP     "Air transport"
 318     WHS     "Warehousing and support activities"
 319     CMN     "Communication"
 320     OFI     "Financial services nec"
 321     INS     "Insurance (formerly isr)"
 322     RSA     "Real estate activities"
 323     OBS     "Business services nec"
 324     ROS     "Recreational and other services"
 325     OSG     "Public Administration and defense"
 326     EDU     "Education"
 327     HHT     "Human health and social work activities"
 328     DWE     "Dwellings"
 329  / ;
 330   
 331  alias(acts,comm) ;
 332   
 333  alias(comm, i0) ;
 334  alias(acts, a0) ;
 335   
 336  SET MARG(comm) /
 337   
 338  otp
 339  wtp
 340  atp
 341   
 342  /;
 343  alias(img0, marg) ;
 344   
 345  set erg(comm) /
 346   
 347     "coa"    "Coal"
 348     "oil"    "Crude oil"
 349     "gas"    "Natural gas"
 350     "p_c"    "Refined oil"
 351  *  ELY           "Electricity"
 352     TnD           "Electricity transmission and distribution"
 353     NuclearBL     "Nuclear power"
 354     CoalBL        "Coal power baseload"
 355     GasBL         "Gas power baseload"
 356     WindBL        "Wind power"
 357     HydroBL       "Hydro power baseload"
 358     OilBL         "Oil power baseload"
 359     OtherBL       "Other baseload"
 360     GasP          "Gas power peakload"
 361     HydroP        "Hydro power peakload"
 362     OilP          "Oil power peakload"
 363     SolarP        "Solar power"
 364     "gdt"    "Gas distribution"
 365  / ;
 366   
 367   
 368  *  !!!! NEEDS REVIEW -- SHOULD PROBABLY MOVE THIS TO A MAP FILE
 369   
 370  parameter scaleXP(a0) ;
 371  scaleXP(a0) = 1 ;
 372   
 373  set fuel(erg) /
 374   
 375     coa   "Coal"
 376     oil   "Oil"
 377     gas   "Gas"
 378     p_c   "Petroleum, coal products"
 379     gdt   "Gas manufacture, distribution"
 380   
 381  / ;
 382   
 383   
 384  *  Calculate the energy content of fossil fuel consumption
 385  *
 386  *  THIS IS A QUICK FIX AND NEEDS REVIEW
 387   
 388  alias(fuel,f0) ;
 389  alias(erg,e0) ;
 390   
 391  set etr0(f0) "Which fuels"      / coa, oil, gas, p_c, gdt / ;
 392  set atr0(a0) "Which activities" / oil, p_c, chm, bph, rpp / ;
 393   
 394  sets
 395      acr0(a0) "Crop activities" /
 396        pdr   "Paddy rice"
 397        wht   "Wheat"
 398        gro   "Cereal grains, n.e.s."
 399        v_f   "Vegetables and fruits"
 400        osd   "Oil seeds"
 401        c_b   "Sugar cane and sugar beet"
 402        pfb   "Plant-based fibers"
 403        ocr   "Crops, n.e.s."
 404        /
 405     alv0(a0) "Livestock activities" /
 406        ctl   "Bovine cattle, sheep and goats, horses"
 407        oap   "Animal products n.e.s."
 408        rmk   "Raw milk"
 409        wol   "Wool, silk-worm cocoons"
 410        /
 411  ;
 412   
 413  set elya0(a0)  "Power activities" /
 414     TnD           "Electricity transmission and distribution"
 415     NuclearBL     "Nuclear power"
 416     CoalBL        "Coal power baseload"
 417     GasBL         "Gas power baseload"
 418     WindBL        "Wind power"
 419     HydroBL       "Hydro power baseload"
 420     OilBL         "Oil power baseload"
 421     OtherBL       "Other baseload"
 422     GasP          "Gas power peakload"
 423     HydroP        "Hydro power peakload"
 424     OilP          "Oil power peakload"
 425     SolarP        "Solar power"
 426  / ;
 427   
 428  set endw Set of endowment factors /
 429     Land           "Land"
 430     tech_aspros    "Technical and professional workers"
 431     clerks         "Clerical workers"
 432     service_shop   "Service shop"
 433     off_mgr_pros   "Management"
 434     ag_othlowsk    "Agriculture and other low-skill workers"
 435     Capital        "Capital"
 436     NatlRes        "Natural resources"
 438  / ;
 439   
 440  set lab(endw) Set of labor factors /
 441     tech_aspros    "Technical and professional workers"
 442     clerks         "Clerical workers"
 443     service_shop   "Service shop"
 444     off_mgr_pros   "Management"
 445     ag_othlowsk    "Agriculture and other low-skill workers"
 446  / ;
 447   
 448  alias(endw, fp0) ;
 449   
 450  set ENDWS(endw) "Sluggish endowments" /
 451     Land     "Land"
 452     NatlRes  "Natural resources"
 453  / ;
 454   
 455  singleton set CAPT(endw) "Capital endowment" /
 456     Capital  "Capital"
 457  / ;
 458   
 459  set LAND(endw) "Land endowment" /
 460     Land     "Land"
 461  / ;
 462   
 463  set NTRS(endw) "Natural resource endowment" /
 464     NatlRes  "Natural resources"
 465  / ;
 466   
 467  set WATER(endw) "Water commodity" /
 469  / ;
 470   
 471  set DIR /
 472     Domestic
 473     Imported
 474  / ;
 475   
 476  set TARTYPE /
 477     ADV      "Ad valorem"
 478     SPE      "Specific"
 479  / ;
 480   
 481  set wbnd0 "Aggregate water markets" /
 482     crp      "Crops"
 483     lvs      "Livestock"
 484     ind      "Industrial use"
 485     mun      "Municipal use"
 486  / ;
 487   
 488  *  Emissions sets
 489   
 490  set em "Emissions" /
 491     co2      "Carbon emissions"
 492     n2o      "N2O emissions"
 493     ch4      "Methane emissions"
 494     fgas     "Emissions of fluoridated gases"
 495   
 496     bc       "Black carbon (Gg)"
 497     co       "Carbon monoxide (Gg)"
 498     nh3      "Ammonia (Gg)"
 499  *  nmvb     "Non-methane volatile organic compounds (Gg)"
 500  *  nmvf     "Non-methane volatile organic compounds (Gg)"
 501     nmvoc    "Non-methane volatile organic compounds (Gg)"
 502     nox      "Nitrogen oxides (Gg)"
 503     oc       "Organic carbon (Gg)"
 504     pm10     "Particulate matter 10 (Gg)"
 505  *  pm2_5b   "Particulate matter 2.5 bio (Gg)"
 506  *  pm2_5f   "Particulate matter 2.5 fossil fuels (Gg)"
 507     pm2_5    "Particulate matter 2.5"
 508     so2      "Sulfur dioxide (Gg)"
 509  / ;
 510   
 511  set ghg(em) "Greenhouse gas emissions" /
 512   
 513     co2      "Carbon emissions"
 514     n2o      "N2O emissions"
 515     ch4      "Methane emissions"
 516     fgas     "Emissions of fluoridated gases"
 517   
 518  / ;
 519   
 520  set nghg(em) "Non-greenhouse gas emissions" /
 521   
 522     bc       "Black carbon (Gg)"
 523     co       "Carbon monoxide (Gg)"
 524     nh3      "Ammonia (Gg)"
 525  *  nmvb     "Non-methane volatile organic compounds (Gg)"
 526  *  nmvf     "Non-methane volatile organic compounds (Gg)"
 527     nmvoc    "Non-methane volatile organic compounds (Gg)"
 528     nox      "Nitrogen oxides (Gg)"
 529     oc       "Organic carbon (Gg)"
 530     pm10     "Particulate matter 10 (Gg)"
 531  *  pm2_5b   "Particulate matter 2.5 bio (Gg)"
 532  *  pm2_5f   "Particulate matter 2.5 fossil fuels (Gg)"
 533     pm2_5    "Particulate matter 2.5"
 534     so2      "Sulfur dioxide (Gg)"
 535   
 536  / ;
 537   
 538  *  Non-CO2 Emissions sets
 539   
 540  set emn(em) "Non-CO2 emissions" /
 541     n2o      "N2O emissions"
 542     ch4      "Methane emissions"
 543     fgas     "Emissions of fluoridated gases"
 544   
 545     bc       "Black carbon (Gg)"
 546     co       "Carbon monoxide (Gg)"
 547     nh3      "Ammonia (Gg)"
 548  *  nmvb     "Non-methane volatile organic compounds (Gg)"
 549  *  nmvf     "Non-methane volatile organic compounds (Gg)"
 550     nmvoc    "Non-methane volatile organic compounds (Gg)"
 551     nox      "Nitrogen oxides (Gg)"
 552     oc       "Organic carbon (Gg)"
 553     pm10     "Particulate matter 10 (Gg)"
 554  *  pm2_5b   "Particulate matter 2.5 bio (Gg)"
 555  *  pm2_5f   "Particulate matter 2.5 fossil fuels (Gg)"
 556     pm2_5    "Particulate matter 2.5"
 557     so2      "Sulfur dioxide (Gg)"
 558  / ;
 559   
 560  alias(emn, nco2) ;
 561   
 562  set mapnco2(nco2,nco2) ; mapnco2(nco2,nco2) = yes ;
 563   
 564  set nco2eq "Labels for NCO2 gases in GWP units" /
 565     co2_co2eq
 566     n2o_co2eq
 567     ch4_co2eq
 568     fgas_co2eq
 569  / ;
 570   
 571  set mapco2eq(em,nco2eq) /
 572     co2 . co2_co2eq
 573     n2o . n2o_co2eq
 574     ch4 . ch4_co2eq
 575     fgas. fgas_co2eq
 576  / ;
 577   
 578  parameters co2_mtoe(f0) "Standard emissions coefficients" /
 579  coa     3.881135
 580  oil     3.03961
 581  gas     2.22606
 582  p_c     2.89167
 583  gdt     2.22606
 584  / ;
 585   
 586  set lg "Labor sets in the GIDD database" /
 587        nsk      "Unskilled labor"
 588        skl      "Skilled labor"
 589  / ;
 590   
 591  set z Zones /
 592     rur   "Agricultural sectors"
 593     urb   "Non-agricultural sectors"
 594     nsg   "Non-segmented labor markets"
 595  / ;
 596   
 597  set rur(z) "Rural zone" /
 598     rur         "Rural zone"
 599  / ;
 600   
 601  set urb(z) "Urban zone" /
 602     urb         "Urban zone"
 603  / ;
 604   
 605  set nsg(z) "Both zones" /
 606     nsg         "Non-segmented labor markets"
 607  / ;
 608   
 609  set stdlab  "Standard SAM labels" /
 610     regY           "Regional household"
 611     hhd            "Household"
 612     gov            "Government"
 614     r_d            "Research and development"
 616     inv            "Investment"
 617     deprY          "Depreciation"
 618     tmg            "Trade margins"
 619     itax           "Indirect tax"
 620     ptax           "Production tax"
 621     mtax           "Import tax"
 622     etax           "Export tax"
 623     vtax           "Taxes on factors of production"
 624     ltax           "Taxes on labor use"
 625     ktax           "Taxes on capital use"
 626     rtax           "Taxes on natural resource use"
 627     vsub           "Subsidies on factors of production"
 628     wtax           "Waste tax"
 629     dtax           "Direct taxation"
 630     ctax           "Carbon tax"
 631     ntmY           "NTM revenues"
 632     trd            "Trade account"
 633     bop            "Balance of payments account"
 634     tot            "Total for row/column sums"
 635  / ;
 636   
 637  set fd(stdlab) "Domestic final demand agents" /
 638   
 639     hhd            "Household"
 640     gov            "Government"
 642     r_d            "Research and development"
 644     inv            "Investment"
 645     tmg            "Trade margins"
 646   
 647  / ;
 648   
 649  set h(fd) "Households" /
 650     hhd            "Household"
 651  / ;
 652   
 653  set gov(fd) "Government" /
 654     gov            "Government"
 655  / ;
 656   
 658  set r_d(fd) "Research and development" /
 659     r_d            "Research and development"
 660  / ;
 662   
 663  set inv(fd) "Investment"/
 664     inv            "Investment"
 665  / ;
 666   
 667  set tmg(fd) "Domestic supply of trade margins services" /
 668     tmg            "Trade margins"
 669  / ;
 670   
 671  * --------------------------------------------------------------------------------------------------
 672  *
 673  *  Mapping of SSP countries to GTAP regions
 674  *
 675  * --------------------------------------------------------------------------------------------------
 676   
 677  set c "Countries" /
 678   
 679     AUS     "Australia"
 680     NZL     "New Zealand"
 681     ASM     "American Samoa"
 682     COK     "Cook Islands, The"
 683     FJI     "Fiji, The Republic of"
 684     PYF     "French Polynesia"
 685     GUM     "Guam"
 686     KIR     "Kiribati, The Republic of"
 687     MHL     "Marshall Islands, The Republic of the"
 688     FSM     "Micronesia, The Federated States of"
 689     NRU     "Nauru, The Republic of"
 690     NCL     "New Caledonia"
 691     NIU     "Niue"
 692     MNP     "Northern Mariana Islands, The Commonwealth of the"
 693     PLW     "Palau, The Republic of"
 694     PNG     "Papua New Guinea, The Independent State of"
 695     WSM     "Samoa, The Independent State of"
 696     SLB     "Solomon Islands"
 697     TKL     "Tokelau"
 698     TON     "Tonga, The Kingdom of"
 699     TUV     "Tuvalu"
 700     VUT     "Vanuatu, The Republic of"
 701     WLF     "Wallis and Futuna Islands"
 702     CHN     "China, The People's Republic of"
 703     HKG     "Hong Kong Special Administrative Region of China, The"
 704     JPN     "Japan"
 705     KOR     "Korea, The Republic of"
 706     MNG     "Mongolia"
 707     TWN     "Taiwan Province of China"
 708     MAC     "Macao Special Administrative Region of China"
 709     PRK     "Korea, The Democratic People's Republic of"
 710     BRN     "Brunei Darussalam"
 711     KHM     "Cambodia, The Kingdom of"
 712     IDN     "Indonesia, The Republic of"
 713     LAO     "Lao People's Democratic Republic, The"
 714     MYS     "Malaysia"
 715     PHL     "Philippines, The Republic of the"
 716     SGP     "Singapore, The Republic of"
 717     THA     "Thailand, The Kingdom of"
 718     VNM     "Viet Nam, The Socialist Republic of"
 719     MMR     "Myanmar, The Republic of the Union of"
 720     TLS     "Timor-Leste, The Democratic Republic of"
 721     BGD     "Bangladesh, The People's Republic of"
 722     IND     "India, The Republic of"
 723     NPL     "Nepal, The Federal Democratic Republic of"
 724     PAK     "Pakistan, The Islamic Republic of"
 725     LKA     "Sri Lanka, The Democratic Socialist Republic of"
 726     AFG     "Afghanistan, The Islamic Republic of"
 727     BTN     "Bhutan, The Kingdom of"
 728     MDV     "Maldives, The Republic of"
 729     CAN     "Canada"
 730     USA     "United States of America, The"
 731     MEX     "United Mexican States, The"
 732     BMU     "Bermuda"
 733     GRL     "Greenland"
 734     SPM     "Saint Pierre and Miquelon"
 735     ARG     "Argentine Republic, The"
 736     BOL     "Bolivia, The Plurinational State of"
 737     BRA     "Brazil, The Federative of Brazil"
 738     CHL     "Chile, The Republic"
 739     COL     "Colombia, The Republic of"
 740     ECU     "Ecuador, The Republic of"
 741     PRY     "Paraguay, The Republic of"
 742     PER     "Peru, The Republic of"
 743     URY     "Uruguay, The Eastern Republic of"
 744     VEN     "Venezuela, The Bolivarian Republic of"
 745     FLK     "Falkland Islands (Malvinas), The"
 746     GUF     "French Guiana"
 747     GUY     "Guyana, The Republic of"
 748     SUR     "Suriname, The Republic of"
 749     CRI     "Costa Rica, The Republic of"
 750     GTM     "Guatemala, The Republic of"
 751     HND     "Honduras, The Republic of"
 752     NIC     "Nicaragua, The Republic of"
 753     PAN     "Panama, The Republic of"
 754     SLV     "El Salvador, The Republic of"
 755     BLZ     "Belize"
 756     DOM     "Dominican Republic, The"
 757     JAM     "Jamaica"
 758     PRI     "Puerto Rico"
 759     TTO     "Trinidad and Tobago, The Republic of"
 760     AIA     "Anguilla"
 761     ATG     "Antigua and Barbuda"
 762     ABW     "Aruba"
 763     ANT     "Netherland Antilles"
 764     BHS     "Bahamas, The Commonwealth of the"
 765     BRB     "Barbados"
 766     VGB     "British Virgin Islands, The"
 767     CYM     "Cayman Islands, The"
 768     CUB     "Cuba, The Republic of"
 769     DMA     "Dominica, The Commonwealth of"
 770     GRD     "Grenada"
 771     HTI     "Haiti, The Republic of"
 772     MSR     "Montserrat"
 773     KNA     "Saint Kitts and Nevis"
 774     LCA     "Saint Lucia"
 775     VCT     "Saint Vincent and the Grenadines"
 776     TCA     "Turks and Caicos Islands, The"
 777     VIR     "Virgin Islands of the United States, The"
 778     AUT     "Austria, The Republic of"
 779     BEL     "Belgium, The Kingdom of"
 780     CYP     "Cyprus, The Republic of"
 781     CZE     "Czech Republic, The"
 782     DNK     "Denmark, The Kingdom of"
 783     EST     "Estonia, The Republic of"
 784     FIN     "Finland, The Republic of"
 785     FRA     "French Republic, The"
 786     GLP     "Guadeloupe"
 787     MTQ     "Martinique"
 788     REU     "Réunion"
 789     DEU     "Germany, The Federal Republic of"
 790     GRC     "Hellenic Republic, The"
 791     HUN     "Hungary"
 792     IRL     "Ireland"
 793     ITA     "Italy, The Republic of"
 794     LVA     "Latvia, The Republic of"
 795     LTU     "Lithuania, The Republic of"
 796     LUX     "Luxembourg, The Grand Duchy of"
 797     MLT     "Malta, The Republic of"
 798     NLD     "Netherlands, The Kingdom of the"
 799     POL     "Poland, The Republic of"
 800     PRT     "Portuguese Republic, The"
 801     SVK     "Slovak Republic, The"
 802     SVN     "Slovenia, The Republic of"
 803     ESP     "Spain, The Kingdom of"
 804     SWE     "Sweden, The Kingdom of"
 805     GBR     "United Kingdom of Great Britain and Northern Ireland, The"
 806     CHE     "Swiss Confederation, The"
 807     NOR     "Norway, The Kingdom of"
 808     ISL     "Iceland, The Republic of"
 809     LIE     "Liechtenstein, The Principality of"
 810     ALB     "Albania, The Republic of"
 811     BGR     "Bulgaria, The Republic of Bulgaria"
 812     BLR     "Belarus, The Republic of"
 813     HRV     "Croatia, The Republic of"
 814     ROU     "Romania"
 815     RUS     "Russian Federation, The"
 816     UKR     "Ukraine"
 817     MDA     "Moldova, The Republic of"
 818     AND     "Andorra, The Principality of"
 819     BIH     "Bosnia and Herzegovina"
 820     CHI     "Channel Islands"
 821     FRO     "Faeroe Islands, The"
 822     GIB     "Gibraltar"
 823     VAT     "Holy See, The"
 824     IMN     "Isle of Man"
 825     MKD     "Macedonia, The Former Yugoslav Republic of"
 826     MCO     "Monaco, The Principality of"
 827     MNE     "Montenegro"
 828     SMR     "San Marino, The Republic of"
 829     SRB     "Serbia, The Republic of"
 830     UVK     "Kosovo"
 831     KAZ     "Kazakhstan, The Republic of"
 832     KGZ     "Kyrgyz Republic,The"
 833     TJK     "Tajikistan, The Republic of"
 834     TKM     "Turkmenistan"
 835     UZB     "Uzbekistan, The Republic of"
 836     ARM     "Armenia, The Republic of"
 837     AZE     "Azerbaijan, The Republic of"
 838     GEO     "Georgia"
 839     BHR     "Bahrain, The Kingdom of"
 840     IRN     "Iran, The Islamic Republic of"
 841     ISR     "Israel, The State of"
 842     JOR     "Jordan, The Hashemite Kingdom of"
 843     KWT     "Kuwait, The State of"
 844     OMN     "Oman, The Sultanate of"
 845     QAT     "Qatar, The State of"
 846     SAU     "Saudi Arabia, The Kingdom of"
 847     TUR     "Turkey, The Republic of"
 848     ARE     "United Arab Emirates, The"
 849     IRQ     "Iraq, The Republic of"
 850     LBN     "Lebanese Republic, The"
 851     PSE     "Palestine, The State of"
 852     SYR     "Syrian Arab Republic, The"
 853     YEM     "Yemen, The Republic of"
 854     EGY     "Egypt, The Arab Republic of"
 855     MAR     "Morocco, The Kingdom of"
 856     TUN     "Tunisia, The Republic of"
 857     DZA     "Algeria, The People's Democratic Republic of"
 858     LBY     "Libya"
 859     ESH     "Western Sahara"
 860     BEN     "Benin, The Republic of"
 861     BFA     "Burkina Faso"
 862     CMR     "Cameroon, The Republic"
 863     CIV     "Côte d'Ivoire, The Republic of"
 864     GHA     "Ghana, The Republic of"
 865     GIN     "Guinea, The Republic of"
 866     NGA     "Nigeria, The Federal Republic of"
 867     SEN     "Senegal, The Republic of"
 868     TGO     "Togolese Republic, The"
 869     CPV     "Cabo Verde, The Republic of"
 870     GMB     "Gambia, The Republic of the"
 871     GNB     "Guinea-Bissau, The Republic of"
 872     LBR     "Liberia, The Republic of"
 873     MLI     "Mali, The Republic of"
 874     MRT     "Mauritania, The Islamic Republic of"
 875     NER     "Niger, The Republic of the"
 876     SHN     "Saint Helena, Ascension and Tristan da Cunha"
 877     SLE     "Sierra Leone, The Republic of"
 878     CAF     "Central African Republic, The"
 879     TCD     "Chad, The Republic of"
 880     COG     "Congo, The Republic of the"
 881     GNQ     "Equatorial Guinea, The Republic of"
 882     GAB     "Gabonese Republic, The"
 883     STP     "Sao Tome and Principe, The Democratic Republic of"
 884     AGO     "Angola, The Republic of"
 885     COD     "Congo, The Democratic Republic of the"
 886     ETH     "Ethiopia, The Federal Democratic Republic of"
 887     KEN     "Kenya, The Republic of"
 888     MDG     "Madagascar, The Republic of"
 889     MWI     "Malawi, The Republic of"
 890     MUS     "Mauritius, The Republic of"
 891     MOZ     "Mozambique, The Republic of"
 892     RWA     "Rwanda, The Republic of"
 893     TZA     "Tanzania, The United Republic of"
 894     UGA     "Uganda, The Republic of"
 895     ZMB     "Zambia, The Republic of"
 896     ZWE     "Zimbabwe, The Republic of"
 897     BDI     "Burundi, The Republic of"
 898     COM     "Comoros, The Union of the"
 899     DJI     "Djibouti, The Republic of"
 900     ERI     "Eritrea, The State of"
 901     MYT     "Mayotte"
 902     SYC     "Seychelles, The Republic of"
 903     SOM     "Somalia, The Federal Republic of"
 904     SDN     "Sudan, The Republic of the"
 905     SSD     "South Sudan"
 906     BWA     "Botswana, The Republic of"
 907     NAM     "Namibia, The Republic of"
 908     ZAF     "South Africa, The Republic of"
 909     LSO     "Lesotho, The Kingdom of"
 910     SWZ     "Swaziland, The Kingdom of"
 911   
 912  / ;
 913   
 914  set mapc(reg,c) "GTAP mapping" /
 915   
 916     AUS.AUS
 917  *  AUS.CXR
 918  *  AUS.CCK
 919  *  AUS.HMD
 920  *  AUS.NFK
 921     NZL.NZL
 922     XOC.ASM
 923     XOC.COK
 924     XOC.FJI
 925     XOC.PYF
 926     XOC.GUM
 927     XOC.KIR
 928     XOC.MHL
 929     XOC.FSM
 930     XOC.NRU
 931     XOC.NCL
 932     XOC.MNP
 933     XOC.NIU
 934     XOC.PLW
 935     XOC.PNG
 936     XOC.WSM
 937     XOC.SLB
 938     XOC.TKL
 939     XOC.TON
 940     XOC.TUV
 941     XOC.VUT
 942     XOC.WLF
 943     CHN.CHN
 944     HKG.HKG
 945     JPN.JPN
 946     KOR.KOR
 947     MNG.MNG
 948     TWN.TWN
 949     XEA.MAC
 950     XEA.PRK
 951     BRN.BRN
 952     KHM.KHM
 953     IDN.IDN
 954     LAO.LAO
 955     MYS.MYS
 956     PHL.PHL
 957     SGP.SGP
 958     THA.THA
 959     VNM.VNM
 960     XSE.MMR
 961     XSE.TLS
 962     BGD.BGD
 963     IND.IND
 964     NPL.NPL
 965     PAK.PAK
 966     LKA.LKA
 967     XSA.AFG
 968     XSA.BTN
 969     XSA.MDV
 970     CAN.CAN
 971     USA.USA
 972     MEX.MEX
 973     XNA.BMU
 974     XNA.GRL
 975     XNA.SPM
 976     ARG.ARG
 977     BOL.BOL
 978     BRA.BRA
 979     CHL.CHL
 980     COL.COL
 981     ECU.ECU
 982     PRY.PRY
 983     PER.PER
 984     URY.URY
 985     VEN.VEN
 986     XSM.FLK
 987     XSM.GUF
 988     XSM.GUY
 989     XSM.SUR
 990     CRI.CRI
 991     GTM.GTM
 992     HND.HND
 993     NIC.NIC
 994     PAN.PAN
 995     SLV.SLV
 996     XCA.BLZ
 997     DOM.DOM
 998     JAM.JAM
 999     PRI.PRI
1000     TTO.TTO
1001     XCB.AIA
1002     XCB.ATG
1003     XCB.ABW
1004     XCB.BHS
1005     XCB.BRB
1006     XCB.CYM
1007     XCB.CUB
1008     XCB.DMA
1009     XCB.GRD
1010     XCB.HTI
1011     XCB.MSR
1012     XCB.ANT
1013     XCB.KNA
1014     XCB.LCA
1015     XCB.VCT
1016     XCB.TCA
1017     XCB.VGB
1018     XCB.VIR
1019     AUT.AUT
1020     BEL.BEL
1021     CYP.CYP
1022     CZE.CZE
1023     DNK.DNK
1024     EST.EST
1025     FIN.FIN
1026     FRA.FRA
1027     FRA.MTQ
1028     FRA.GLP
1029     DEU.DEU
1030     GRC.GRC
1031     HUN.HUN
1032     IRL.IRL
1033     ITA.ITA
1034     LVA.LVA
1035     LTU.LTU
1036     LUX.LUX
1037     MLT.MLT
1038     NLD.NLD
1039     POL.POL
1040     PRT.PRT
1041     SVK.SVK
1042     SVN.SVN
1043     ESP.ESP
1044     SWE.SWE
1045     GBR.GBR
1046     GBR.CHI
1047     GBR.IMN
1048     CHE.CHE
1049     NOR.NOR
1050     XEF.ISL
1051     XEF.LIE
1052     ALB.ALB
1053     BGR.BGR
1054     BLR.BLR
1055     HRV.HRV
1056     ROU.ROU
1057     RUS.RUS
1058     UKR.UKR
1059     XEE.MDA
1060     XER.AND
1061     XER.BIH
1062     XER.FRO
1063     XER.GIB
1064  *  XER.GGY
1065     XER.VAT
1066  *  XER.JEY
1067  *  XER.KSV
1068     XER.MKD
1069     XER.MCO
1070     XER.MNE
1071     XER.SMR
1072     XER.SRB
1073     XER.UVK
1074     KAZ.KAZ
1075     KGZ.KGZ
1076     TJK.TJK
1077     XSU.TKM
1078     XSU.UZB
1079     ARM.ARM
1080     AZE.AZE
1081     GEO.GEO
1082     BHR.BHR
1083     IRN.IRN
1084     ISR.ISR
1085     JOR.JOR
1086     KWT.KWT
1087     OMN.OMN
1088     QAT.QAT
1089     SAU.SAU
1090     TUR.TUR
1091     ARE.ARE
1092     XWS.IRQ
1093     XWS.LBN
1094     XWS.PSE
1095     XWS.SYR
1096     XWS.YEM
1097     EGY.EGY
1098     MAR.MAR
1099     TUN.TUN
1100     XNF.DZA
1101     XNF.LBY
1102     XNF.ESH
1103     BEN.BEN
1104     BFA.BFA
1105     CMR.CMR
1106     CIV.CIV
1107     GHA.GHA
1108     GIN.GIN
1109     NGA.NGA
1110     SEN.SEN
1111     TGO.TGO
1112     XWF.CPV
1113     XWF.GMB
1114     XWF.GNB
1115     XWF.LBR
1116     XWF.MLI
1117     XWF.MRT
1118     XWF.NER
1119     XWF.SHN
1120     XWF.SLE
1121     XCF.CAF
1122     XCF.TCD
1123     XCF.COG
1124     XCF.GNQ
1125     XCF.GAB
1126     XCF.STP
1127     XAC.AGO
1128     XAC.COD
1129     ETH.ETH
1130     KEN.KEN
1131     MDG.MDG
1132     MWI.MWI
1133     MUS.MUS
1134     MOZ.MOZ
1135     TZA.TZA
1136     RWA.RWA
1137     UGA.UGA
1138     ZMB.ZMB
1139     ZWE.ZWE
1140     XEC.BDI
1141     XEC.COM
1142     XEC.DJI
1143     XEC.ERI
1144     XEC.MYT
1145     XEC.REU
1146     XEC.SYC
1147     XEC.SOM
1148     XEC.SDN
1149     XEC.SSD
1150     BWA.BWA
1151     NAM.NAM
1152     ZAF.ZAF
1153     XSC.LSO
1154     XSC.SWZ
1155  *  XTW.ATA
1156  *  XTW.BVT
1157  *  XTW.IOT
1158  *  XTW.ATF
1159  / ;
1161   
1163  * Andre modified this line to use a relative path
1164   
1171   
1173   
1174  sets
1175   
1176     i  "Commodities"   /
1177           AGR          "Agriculture"
1178           FRS          "Forestry"
1179           COA          "Coal"
1180           OIL          "Oil"
1181           GAS          "Gas"
1182           OXT          "Minerals nec"
1183           EIT          "Vegetable oils and fats"
1184           XMN          "Dairy products"
1185           P_C          "Petroleum and coal products"
1186           ETD          "Electricity transmission"
1187           CLP          "Coal-fired power"
1188           OLP          "Oil-fired power"
1189           GSP          "Gas-fired power"
1190           NUC          "Nuclear power"
1191           HYD          "Hydro power"
1192           SOL          "Solar power"
1193           WND          "Wind power"
1194           XEL          "Other power"
1195           SRV          "Services"
1196        /
1197   
1198     r  "Regions" /
1199           USA          "United States"
1200           EUR          "Western Europe"
1201           XOE          "Other HIY OECD"
1202           CHN          "China"
1203           RUS          "Russia"
1204           OPC          "Major oil and gas exporters"
1205           XEA          "Rest of East Asia and Pacific"
1206           SAS          "South Asia"
1207           XLC          "Rest of Latin America & Caribbean"
1208           ROW          "Rest of the World"
1209        /
1210   
1211     fp  "Factors of production"  /
1212        nsk            "Unskilled labor"
1213        skl            "Skilled labor"
1214        cap            "Capital"
1215        lnd            "Land"
1216        nrs            "Natural resource"
1217        /
1218   
1219     l(fp)  "Labor factors" /
1220        nsk            "Unskilled labor"
1221        skl            "Skilled labor"
1222        /
1223     wb "Intermediate labor bundle(s)" /
1224        Single         "Single intermediate labor bundle"
1225     /
1226     maplab1(wb) "Mapping of intermediate labor demand bundle(s) to LAB1" /
1227        Single
1228     /
1229     mapl(wb,l) "Mapping of labor categories to intermedate demand bundle(s)" /
1230        Single.(nsk, skl)
1231     /
1232     lr(l) "Reference labor for skill premium" /
1233        skl            "Skilled labor"
1234        /
1235     cap(fp) "Capital" /
1236        cap            "Capital"
1237        /
1238     lnd(fp) "Land endowment" /
1239        lnd            "Land"
1240        /
1241     nrs(fp) "Natural resource" /
1242        nrs            "Natural resource"
1243        /
1244     wat(fp) "Water resource" / /
1245   
1246     ra "Aggregate regions for emission regimes and model output" /
1247        hic   "High-income countries"
1248        lmy   "Developing countries"
1249        wld   "World Total"
1250        /
1251     ia "Aggregate commodities for model output" /
1252        tagr-c      "Agriculture"
1253        tman-c      "Manufacturing"
1254        tsrv-c      "Services"
1255        toth-c      "Other"
1256        ttot-c      "Total"
1257        /
1258     aga  "Aggregate activities for model output" /
1259        tagr-a      "Agriculture"
1260        tman-a      "Manufacturing"
1261        tsrv-a      "Services"
1262        toth-a      "Other"
1263        ttot-a      "Total"
1264        /
1265     lagg "Aggregate labor for model output" /
1266        tot         "Total labor"
1267        /
1268  ;
1269   
1270  *  !!!! Explicit assumption about diagonality
1271   
1272  alias(i,a) ;
1273   
1274  alias(m,i) ;
1275   
1276  *  User defined parameters (i.e. not aggregated by aggregation facility)
1277  *  NEW -- New region specific
1278   
1279  Parameter
1280     etrae1(fp,r) "CET transformation elasticities for factor allocation"
1281  ;
1282   
1283  parameter etrae0(fp) "CET transformation elasticities for factor allocation" /
1284     nsk       inf
1285     skl       inf
1286     cap       inf
1287     lnd       1.0
1288     nrs      0.001
1289  / ;
1290   
1291  etrae1(fp,r) = etrae0(fp) ;
1292   
1293  *  NEW -- MAKE ELASTICITIES
1294   
1295  Parameter
1296     etraq1(a,r)       "MAKE CET Elasticity"
1297     esubq1(i,r)       "MAKE CES Elasticity"
1298  ;
1299  etraq1(a,r) = 5 ;
1300  esubq1(i,r) = inf ;
1301   
1302  *  NEW -- EXPENDITURE ELASTICITIES
1303   
1304  Parameter
1305     esubg1(r)         "Government expenditure CES elasticity"
1306     esubi1(r)         "Investment expenditure CES elasticity"
1307     esubs1(m)         "Transport margins CES elasticity"
1308  ;
1309   
1310  esubg1(r) = 1 ;
1311  esubi1(r) = 0 ;
1312  esubs1(m) = 1 ;
1313   
1314  *  This zonal mapping is for labor/volume splits between agriculture and other
1315   
1316  set mapz(z,a)  "Mapping of activities to zones" /
1317     rur.(agr)
1318  / ;
1319   
1320  mapz("urb",a) = not mapz("rur",a) ;
1321  mapz("nsg",a) = yes ;
1322   
1323  * >>>> MUST INSERT RESIDUAL REGION (ONLY ONE)
1324   
1325  set rres(r) "Residual region" /
1326   
1327     USA
1328   
1329  / ;
1330   
1331  * >>>> MUST INSERT MUV REGIONS (ONE OR MORE)
1332   
1333  set rmuv(r) "MUV regions" /
1334     USA
1335     EUR
1336     XOE
1337     CHN
1338  / ;
1339   
1340  set mapt(a) "Merge land and capital payments in the following sectors" /
1341   
1342  / ;
1343   
1344  set mapn(a) "Merge natl. res. and capital payments in the following sectors" /
1345     xmn
1346  / ;
1347   
1348  *  MAPPINGS TO GTAP
1349   
1350  set mapa(acts,a) /
1351     PDR.AGR
1352     WHT.AGR
1353     GRO.AGR
1354     V_F.AGR
1355     OSD.AGR
1356     C_B.AGR
1357     PFB.AGR
1358     OCR.AGR
1359     CTL.AGR
1360     OAP.AGR
1361     RMK.AGR
1362     WOL.AGR
1363     FRS.FRS
1364     FSH.XMN
1365     COA.COA
1366     OIL.OIL
1367     GAS.GAS
1368     OXT.OXT
1369     CMT.XMN
1370     OMT.XMN
1371     VOL.XMN
1372     MIL.XMN
1373     PCR.XMN
1374     SGR.XMN
1375     OFD.XMN
1376     B_T.XMN
1377     TEX.XMN
1378     WAP.XMN
1379     LEA.XMN
1380     LUM.XMN
1381     PPP.EIT
1382     P_C.P_C
1383     CHM.EIT
1384     BPH.XMN
1385     RPP.EIT
1386     NMM.EIT
1387     I_S.EIT
1388     NFM.EIT
1389     FMP.XMN
1390     MVH.XMN
1391     OTN.XMN
1392     ELE.XMN
1393     EEQ.XMN
1394     OME.XMN
1395     OMF.XMN
1396     TND.ETD
1397     NUCLEARBL.NUC
1398     COALBL.CLP
1399     GASBL.GSP
1400     WINDBL.WND
1401     HYDROBL.HYD
1402     OILBL.OLP
1403     OTHERBL.XEL
1404     GASP.GSP
1405     HYDROP.HYD
1406     OILP.OLP
1407     SOLARP.SOL
1408     GDT.GAS
1409     WTR.SRV
1410     CNS.SRV
1411     TRD.SRV
1412     AFS.SRV
1413     OTP.SRV
1414     WTP.SRV
1415     ATP.SRV
1416     WHS.SRV
1417     CMN.SRV
1418     OFI.SRV
1419     INS.SRV
1420     RSA.SRV
1421     OBS.SRV
1422     ROS.SRV
1423     OSG.SRV
1424     EDU.SRV
1425     HHT.SRV
1426     DWE.SRV
1427  / ;
1428   
1430     set mapi(comm,i) ;
1431     loop((acts,comm)$sameas(acts,comm),
1432        mapi(comm,i) = mapa(acts,i) ;
1433     ) ;
1435   
1436  set mapr(reg,r) /
1437     AUS.XOE
1438     NZL.XOE
1439     XOC.XEA
1440     CHN.CHN
1441     HKG.XEA
1442     JPN.XOE
1443     KOR.XOE
1444     MNG.XEA
1445     TWN.XEA
1446     XEA.XEA
1447     BRN.XEA
1448     KHM.XEA
1449     IDN.XEA
1450     LAO.XEA
1451     MYS.XEA
1452     PHL.XEA
1453     SGP.XEA
1454     THA.XEA
1455     VNM.XEA
1456     XSE.XEA
1457     BGD.SAS
1458     IND.SAS
1459     NPL.SAS
1460     PAK.SAS
1461     LKA.SAS
1462     XSA.SAS
1463     CAN.XOE
1464     USA.USA
1465     MEX.XLC
1466     XNA.XLC
1467     ARG.XLC
1468     BOL.XLC
1469     BRA.OPC
1470     CHL.XLC
1471     COL.XLC
1472     ECU.XLC
1473     PRY.XLC
1474     PER.XLC
1475     URY.XLC
1476     VEN.OPC
1477     XSM.XLC
1478     CRI.XLC
1479     GTM.XLC
1480     HND.XLC
1481     NIC.XLC
1482     PAN.XLC
1483     SLV.XLC
1484     XCA.XLC
1485     DOM.XLC
1486     JAM.XLC
1487     PRI.XLC
1488     TTO.XLC
1489     XCB.XLC
1490     AUT.EUR
1491     BEL.EUR
1492     CYP.EUR
1493     CZE.EUR
1494     DNK.EUR
1495     EST.EUR
1496     FIN.EUR
1497     FRA.EUR
1498     DEU.EUR
1499     GRC.EUR
1500     HUN.EUR
1501     IRL.EUR
1502     ITA.EUR
1503     LVA.EUR
1504     LTU.EUR
1505     LUX.EUR
1506     MLT.EUR
1507     NLD.EUR
1508     POL.EUR
1509     PRT.EUR
1510     SVK.EUR
1511     SVN.EUR
1512     ESP.EUR
1513     SWE.EUR
1514     GBR.EUR
1515     CHE.EUR
1516     NOR.EUR
1517     XEF.EUR
1518     ALB.ROW
1519     BGR.ROW
1520     BLR.ROW
1521     HRV.ROW
1522     ROU.ROW
1523     RUS.RUS
1524     UKR.ROW
1525     XEE.ROW
1526     XER.ROW
1527     KAZ.OPC
1528     KGZ.ROW
1529     TJK.ROW
1530     XSU.ROW
1531     ARM.ROW
1532     AZE.ROW
1533     GEO.ROW
1534     BHR.OPC
1535     IRN.OPC
1536     ISR.ROW
1537     JOR.ROW
1538     KWT.OPC
1539     OMN.OPC
1540     QAT.OPC
1541     SAU.OPC
1542     TUR.ROW
1543     ARE.OPC
1544     XWS.OPC
1545     EGY.ROW
1546     MAR.ROW
1547     TUN.ROW
1548     XNF.OPC
1549     BEN.ROW
1550     BFA.ROW
1551     CMR.ROW
1552     CIV.ROW
1553     GHA.ROW
1554     GIN.ROW
1555     NGA.OPC
1556     SEN.ROW
1557     TGO.ROW
1558     XWF.ROW
1559     XCF.ROW
1560     XAC.OPC
1561     ETH.ROW
1562     KEN.ROW
1563     MDG.ROW
1564     MWI.ROW
1565     MUS.ROW
1566     MOZ.ROW
1567     RWA.ROW
1568     TZA.ROW
1569     UGA.ROW
1570     ZMB.ROW
1571     ZWE.ROW
1572     XEC.ROW
1573     BWA.ROW
1574     NAM.ROW
1575     ZAF.ROW
1576     XSC.ROW
1577     XTW.ROW
1578  / ;
1579   
1580  set mapf(endw, fp) /
1581     ag_othlowsk  . nsk
1582     service_shop . nsk
1583     clerks       . nsk
1584     tech_aspros  . skl
1585     off_mgr_pros . skl
1586     Capital      . cap
1587     Land         . lnd
1588     NatlRes      . nrs
1589  *  Water        . lnd
1590  / ;
1591   
1592  set maplGIDD(lg, l) "Mapping to GIDD labor database" /
1593     nsk.(nsk)
1594     skl.(skl)
1595  / ;
1596   
1597  * ----------------------------------------------------------------------------------------
1598  *
1599  *     Section dealing with model aggregations (to handle non-diagonal make matrix)
1600  *
1601  * ----------------------------------------------------------------------------------------
1602   
1603  *  Model aggregation(s)
1604   
1605  set actf "Model activities" /
1606           sets.i
1607  / ;
1608   
1609  set commf "Model commodities" /
1610           AGR          "Agriculture"
1611           FRS          "Forestry"
1612           COA          "Coal"
1613           OIL          "Oil"
1614           GAS          "Gas"
1615           OXT          "Minerals nec"
1616           EIT          "Vegetable oils and fats"
1617           XMN          "Dairy products"
1618           P_C          "Petroleum and coal products"
1619           ELY          "Electricity"
1620           SRV          "Services"
1621  / ;
1622   
1623  set mapaf(i, actf) "Mapping from original to modeled activities" /
1624       AGR.AGR
1625       FRS.FRS
1626       COA.COA
1627       OIL.OIL
1628       GAS.GAS
1629       OXT.OXT
1630       EIT.EIT
1631       XMN.XMN
1632       P_C.P_C
1633       ETD.ETD
1634       CLP.CLP
1635       OLP.OLP
1636       GSP.GSP
1637       NUC.NUC
1638       HYD.HYD
1639       SOL.SOL
1640       WND.WND
1641       XEL.XEL
1642       SRV.SRV
1643  / ;
1644   
1645  set mapif(i, commf) "Mapping from original to modeled commodities" /
1646       AGR.AGR
1647       FRS.FRS
1648       COA.COA
1649       OIL.OIL
1650       GAS.GAS
1651       OXT.OXT
1652       EIT.EIT
1653       XMN.XMN
1654       P_C.P_C
1655       ETD.ELY
1656       CLP.ELY
1657       OLP.ELY
1658       GSP.ELY
1659       NUC.ELY
1660       HYD.ELY
1661       SOL.ELY
1662       WND.ELY
1663       XEL.ELY
1664       SRV.SRV
1665  / ;
1666   
1667  * >>>> MUST INSERT MUV COMMODITIES (ONE OR MORE)
1668  *      !!!! Be careful of compatibility with modeled imuv
1669  *           This one is intended for AlterTax
1670   
1671  set imuvf(commf) "MUV commodities" /
1672     eit, xmn
1673  / ;
1674   
1675  *  >>>> Aggregation of modeled sectors and regions
1676   
1677  set mapia(ia,commf)"mapping of individual comm to aggregate comm" /
1678       tagr-c.agr
1679       tagr-c.frs
1680       toth-c.coa
1681       toth-c.oil
1682       toth-c.gas
1683       toth-c.oxt
1684       tman-c.xmn
1685       tman-c.p_c
1686       tman-c.eit
1687       tsrv-c.ely
1688       tsrv-c.srv
1689  / ;
1690  mapia("ttot-c",commf) = yes ;
1691   
1692  set mapaga(aga,actf)"mapping of individual comm to aggregate activities" /
1693       tagr-a.agr
1694       tagr-a.frs
1695       toth-a.coa
1696       toth-a.oil
1697       toth-a.gas
1698       toth-a.oxt
1699       tman-a.xmn
1700       tman-a.p_c
1701       tman-a.eit
1702       tsrv-a.etd
1703       tsrv-a.nuc
1704       tsrv-a.clp
1705       tsrv-a.gsp
1706       tsrv-a.wnd
1707       tsrv-a.hyd
1708       tsrv-a.olp
1709       tsrv-a.xel
1710       tsrv-a.sol
1711       tsrv-a.srv
1712  / ;
1713  mapaga("ttot-a",actf) = yes ;
1714   
1715  set mapra(ra,r) "Mapping of model regions to aggregate regions" /
1716     hic.(USA, EUR, XOE)
1717  / ;
1718  mapra("lmy", r)$(not mapra("hic",r)) = yes ;
1719  mapra("wld", r) = yes ;
1720  mapra(ra,r)$sameas(ra,r) = yes ;
1721   
1722  *  If none, just use 'all'. The mapping for 'All' will be done automatically.
1723  *  Here the user can only input the activity subset of agents as the
1724  *  aggregation facility is unaware of Armington agents
1725   
1726  set
1727     aets "Agent specific ETS definitions" /
1728        All      "ALL agents"
1729     /
1730     aa   "Armington agents" / sets.actf, sets.fd /
1731     mapets(aets,aa)
1732  ;
1733  mapets("all",aa) = yes;
1734   
1735  set maplagg(lagg,l) "Mapping of model labor to aggregate labor" ;
1736  maplagg("Tot",l) = yes ;
1737   
1738  set sortOrder / sort1*sort500 / ;
1739  set mapRegSort(sortOrder,r) /
1740     Sort1  . USA
1741     Sort2  . EUR
1742     Sort3  . XOE
1743     Sort4  . CHN
1744     Sort5  . RUS
1745     Sort6  . OPC
1746     Sort7  . XEA
1747     Sort8  . SAS
1748     Sort9  . XLC
1749     Sort10 . ROW
1750  / ;
1751   
1752  set mapActSort(sortOrder,actf) /
1753     Sort1  . AGR
1754     Sort2  . FRS
1755     Sort3  . COA
1756     Sort4  . OIL
1757     Sort5  . GAS
1758     Sort6  . OXT
1759     Sort7  . EIT
1760     Sort8  . XMN
1761     Sort9  . P_C
1762     Sort10 . ETD
1763     Sort11 . CLP
1764     Sort12 . OLP
1765     Sort13 . GSP
1766     Sort14 . NUC
1767     Sort15 . HYD
1768     Sort16 . SOL
1769     Sort17 . WND
1770     Sort18 . XEL
1771     Sort19 . SRV
1772  / ;
1773   
1774  set mapCommSort(sortOrder,commf) /
1775     Sort1  . AGR
1776     Sort2  . FRS
1777     Sort3  . COA
1778     Sort4  . OIL
1779     Sort5  . GAS
1780     Sort6  . OXT
1781     Sort7  . EIT
1782     Sort8  . XMN
1783     Sort9  . P_C
1784     Sort10 . ELY
1785     Sort11 . SRV
1786  / ;
1787   
1788  * ----------------------------------------------------------------------------------------
1789  *
1790  *     Envisage section
1791  *
1792  * ----------------------------------------------------------------------------------------
1793   
1794  *  >>>> Activity related sets and subsets
1795   
1796  set acr(actf)  "Crop activities" /
1797  / ;
1798   
1799  set alv(actf)  "Livestock activities" /
1800  / ;
1801   
1802  set agr(actf)  "Agricultural activities" /
1803     agr
1804  / ;
1805   
1806  set man(actf)  "Manufacturing activities" /
1807       xmn
1808       eit
1809  / ;
1810   
1811  set aenergy(actf) "Energy activities" /
1812        coa
1813        oil
1814        gas
1815        p_c
1816        clp
1817        olp
1818        gsp
1819        nuc
1820        hyd
1821        wnd
1822        sol
1823        xel
1824        etd
1825  / ;
1826   
1827  set affl(actf) "Fossil fuel activities" /
1828        coa
1829        oil
1830        gas
1831  / ;
1832   
1833  set aw(actf)   "Water services activities" /
1834  / ;
1835   
1836  set elya(actf) "Power activities" /
1837        clp
1838        olp
1839        gsp
1840        nuc
1841        hyd
1842        wnd
1843        sol
1844        xel
1845        etd
1846  / ;
1847   
1848  set etd(actf)  "Electricity transmission and distribution activities" /
1849        etd
1850  / ;
1851   
1852  set primElya(actf) "Primary power activities" /
1853        nuc
1854        hyd
1855        wnd
1856        sol
1857        xel
1858  / ;
1859   
1860  set pb   "Power bundles" /
1861     coap       "Coal bundle"
1862     oilp       "Oil bundle"
1863     gasp       "Gas bundle"
1864     nucp       "Nuclear"
1865     hydp       "Hydro"
1866     renp       "Renewables"
1867  / ;
1868   
1869  set mappow(pb,elya) "Mapping of power activities to power bundles" /
1870     nucp    .NUC
1871     hydp    .HYD
1872     renp    .WND
1873     renp    .SOL
1874     renp    .XEL
1875     coap    .CLP
1876     oilp    .OLP
1877     gasp    .GSP
1878  / ;
1879   
1880  *  >>>> Commodity sets and subsets
1881   
1882  set frt(commf) "Fertilizer commodities" /
1883  / ;
1884   
1885  set feed(commf) "Feed commodities" /
1886  / ;
1887   
1888  set iw(commf) "Water services commodities" /
1889  / ;
1890   
1891  set e(commf) "Energy commodities" /
1892        coa
1893        oil
1894        gas
1895        p_c
1896        ely
1897  / ;
1898   
1899  set elyc(commf) "Electricity commodities" /
1900        ely
1901  / ;
1902   
1903  set f(commf) "Fuel commodities" /
1904        coa
1905        oil
1906        gas
1907        p_c
1908  / ;
1909   
1910  *  This zonal mapping is for labor market segmentation in final model
1911   
1912  set mapzf(z,actf)  "Mapping of activities to zones" /
1913       rur.agr
1914  / ;
1915   
1916  mapzf("urb",actf) = not mapzf("rur",actf) ;
1917  mapzf("nsg",actf) = yes ;
1918   
1919  * >>>> Household commodity section
1920   
1921  set k "Household commodities" /
1922           agr          "Agriculture"
1923           nrg          "Energy"
1924           oxt          "Minerals nec"
1925           xmn          "Other manufacturing"
1926           eit          "Energy intensive goods"
1927           srv          "Services"
1928  / ;
1929   
1930  set fud(k) "Household food commodities" /
1931           agr          "Agriculture"
1932  / ;
1933   
1934  set mapk(commf,k) "Mapping from i to k" /
1935       agr.agr
1936       frs.oxt
1937       coa.nrg
1938       oil.nrg
1939       gas.nrg
1940       oxt.oxt
1941       xmn.xmn
1942       p_c.nrg
1943       eit.eit
1944       ely.nrg
1945       srv.srv
1946  / ;
1947   
1948  set cpindx  "CPI indices to be derived by the model" /
1949     tot      "Total price index"
1950  / ;
1951   
1952  set mapCPI(cpindx,commf)   "Mapping from i to CPI index" ;
1953  mapCPI("tot",commf)              = yes ;
1954   
1955  set lb "Land bundles" /
1956     agr      "Agriculture"
1957  / ;
1958   
1959  set lb1(lb) "First land bundle" /
1960     agr      "Agriculture"
1961  / ;
1962   
1963  set maplb(lb,actf) "Mapping of activities to land bundles" /
1964       agr.agr
1965  / ;
1966   
1967  *  !!!! TO BE REVIEWED
1968   
1969  set lb0   "Default land bundles" / lb1 / ;
1970  set maplb0(lb, lb0) "Mapping of land bundles to original" /
1971     agr.lb1
1972  / ;
1973   
1974  set wbnd "Aggregate water markets" /
1975     N_A         "N_A"
1976  / ;
1977   
1978  set wbnd1(wbnd) "Top level water markets" /
1979  / ;
1980   
1981  set wbnd2(wbnd) "Second level water markets" /
1982  / ;
1983   
1984  set wbndEx(wbnd) "Exogenous water markets" /
1985  / ;
1986   
1987  set mapw1(wbnd,wbnd) "Mapping of first level water bundles" /
1988  / ;
1989   
1990  set mapw2(wbnd,actf) "Mapping of second level water bundle" /
1991  / ;
1992   
1993  set wbnda(wbnd) "Water bundles mapped one-to-one to activities" /
1994  / ;
1995   
1996  set wbndi(wbnd) "Water bundles mapped to aggregate output" /
1997  / ;
1998   
1999  set NRG "Energy bundles used in model" /
2000     coa         "Coal"
2001     oil         "Oil"
2002     gas         "Gas"
2003     ely         "Electricity"
2004  / ;
2005   
2006  set coa(NRG) "Coal bundle used in model" /
2007     coa         "Coal"
2008  / ;
2009   
2010  set oil(NRG) "Oil bundle used in model" /
2011     oil         "Oil"
2012  / ;
2013   
2014  set gas(NRG) "Gas bundle used in model" /
2015     gas         "Gas"
2016  / ;
2017   
2018  set ely(NRG) "Electricity bundle used in model" /
2019     ely         "Electricity"
2020  / ;
2021   
2022  set mape(NRG,e) "Mapping of energy commodities to energy bundles" /
2023     COA.(coa)
2024     OIL.(oil, p_c)
2025     GAS.(gas)
2026     ELY.(ely)
2027  / ;
2028   
2029  *  >>>> Sets required for 'growing' labor by skill
2030   
2031  set skl(l)  "Skill types for labor growth assumptions" /
2032     skl
2033  / ;
2034   
2035  set elev / elev0*elev3 / ;
2036   
2037  set educMap(r,l,elev) "Mapping of skills to education levels" ;
2038   
2039  *  Use GIDD definitions (i.e. "elev3" has no meaning)
2040   
2041  educMap(r,"nsk","elev0")$mapra("lmy",r) = yes ;
2042  educMap(r,"skl","elev1")$mapra("lmy",r)   = yes ;
2043  educMap(r,"skl","elev2")$mapra("lmy",r)   = yes ;
2044   
2045  educMap(r,"nsk","elev0")$mapra("hic",r) = yes ;
2046  educMap(r,"nsk","elev1")$mapra("hic",r) = yes ;
2047  educMap(r,"skl","elev2")$mapra("hic",r)   = yes ;
2048   
2050   
2051   
2053   
2055   
2057   
2058  alias(r,s) ; alias(r,d) ; alias(r,rp) ; alias(i,img) ; alias(i,j) ;
2059   
2060  *  Declare and read the GTAP data
2061   
2062  Parameters
2063  *  From the standard database
2064   
2065     VDFB(i, a, r)              "Firm purchases of domestic goods at basic prices"
2066     VDFP(i, a, r)              "Firm purchases of domestic goods at purchaser prices"
2067     VMFB(i, a, r)              "Firm purchases of imported goods at basic prices"
2068     VMFP(i, a, r)              "Firm purchases of domestic goods at purchaser prices"
2069     VDPB(i, r)                 "Private purchases of domestic goods at basic prices"
2070     VDPP(i, r)                 "Private purchases of domestic goods at purchaser prices"
2071     VMPB(i, r)                 "Private purchases of imported goods at basic prices"
2072     VMPP(i, r)                 "Private purchases of domestic goods at purchaser prices"
2073     VDGB(i, r)                 "Government purchases of domestic goods at basic prices"
2074     VDGP(i, r)                 "Government purchases of domestic goods at purchaser prices"
2075     VMGB(i, r)                 "Government purchases of imported goods at basic prices"
2076     VMGP(i, r)                 "Government purchases of domestic goods at purchaser prices"
2077     VDIB(i, r)                 "Investment purchases of domestic goods at basic prices"
2078     VDIP(i, r)                 "Investment purchases of domestic goods at purchaser prices"
2079     VMIB(i, r)                 "Investment purchases of imported goods at basic prices"
2080     VMIP(i, r)                 "Investment purchases of domestic goods at purchaser prices"
2081   
2082     EVFB(fp, a, r)             "Primary factor purchases at basic prices"
2083     EVFP(fp, a, r)             "Primary factor purchases at purchaser prices"
2084     EVOS(fp, a, r)             "Factor remuneration after income tax"
2085   
2086     VXSB(i, r, r)              "Exports at basic prices"
2087     VFOB(i, r, r)              "Exports at FOB prices"
2088     VCIF(i, r, r)              "Import at CIF prices"
2089     VMSB(i, r, r)              "Imports at basic prices"
2090   
2091     VST(img, r)                "Exports of trade and transport services"
2092     VTWR(img, i, r, r)         "Margins by margin commodity"
2093   
2094     SAVE(r)                    "Net saving, by region"
2095     VDEP(r)                    "Capital depreciation"
2096     VKB(r)                     "Capital stock"
2097     POP(r)                     "Population"
2098   
2099     MAKS(i,a,r)                "Make matrix at supply prices"
2100     MAKB(i,a,r)                "Make matrix at basic prices (incl taxes)"
2101     PTAX(i,a,r)                "Output taxes"
2102   
2103  *  CO2 Emissions
2104   
2105     mdf(i, a, r)      "CO2 emissions from intermediate demand for domestic goods"
2106     mmf(i, a, r)      "CO2 emissions from intermediate demand for imported good"
2107     mdp(i, r)         "CO2 emissions from private demand for domestic goods"
2108     mmp(i, r)         "CO2 emissions from private demand for imported goods"
2109     mdg(i, r)         "CO2 emissions from public demand for domestic goods"
2110     mmg(i, r)         "CO2 emissions from public demand for imported goods"
2111     mdi(i, r)         "CO2 emissions from investment demand for domestic goods"
2112     mmi(i, r)         "CO2 emissions from investment demand for imported goods"
2113   
2114  *  Energy volumes
2115   
2116     edf(i, a, r)      "Usage of domestic products by firm"
2117     emf(i, a, r)      "Usage of imported products by firm"
2118     edp(i, r)         "Private consumption of domestic goods"
2119     emp(i, r)         "Private consumption of imported goods"
2120     edg(i, r)         "Public consumption of domestic goods"
2121     emg(i, r)         "Public consumption of imported goods"
2122     edi(i, r)         "Investment consumption of domestic goods"
2123     emi(i, r)         "Investment consumption of imported goods"
2124     exi(i, s, r)      "Bilateral trade in energy"
2125   
2126  *  Combustion-based emissions
2127   
2128     EMI_IO(EM, i, a, r)           "IO-based emissions"
2129     EMI_IOP(EM, i, a, r)          "IO-based process emissions"
2130     EMI_ENDW(EM, fp, a, r)        "Endowment-based emissions"
2131     EMI_QO(EM, a, r)              "Output-based emissions"
2132     EMI_HH(EM, i, r)              "Private consumption-based emissions"
2133  ;
2134   
2135  execute_load "ANX1/agg/ANX1Dat.gdx",
2136     vdfb, vdfp, vmfb, vmfp,
2137     vdpb, vdpp, vmpb, vmpp,
2138     vdgb, vdgp, vmgb, vmgp,
2139     vdib, vdip, vmib, vmip,
2140     evfb, evfp, evos,
2141     vxsb, vfob, vcif, vmsb,
2142     vst, vtwr,
2143     save, vdep, vkb, pop,
2144     maks, makb, ptax
2145  ;
2146   
INCLUDE    F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter/filter.gms
2148  *-----------------------------------------------------------------------------------------
       
         Envisage 10 project -- Data preparation modules
       
         GAMS file : Filter.gms
       
         @purpose  : Filter out small values from SAMS and trade matrices and
                     rebalance database
       
         @author   : Tom Rutherford, with modifications by Wolfgang Britz
                     and adjustments for Env10 by Dominique van der Mensbrugghe
         @date     : 21.10.16
         @since    :
         @refDoc   :
         @seeAlso  :
         @calledBy : loadData.gms
         @Options  :
       
2168  *-----------------------------------------------------------------------------------------
2169   
2170  *  At this point, we should have read in the aggregated database, so initialize filtering
2171   
2172  *  Save the SAM if requested
2173   
2174  file csv / "ANX1/flt/ANX1Flt.csv" / ;
2175   
2176  *  !!!! check/implement
2177   
2178  option LP=CONOPT ;
2179   
2180  Parameters
2181   
2182  *  Auxiliary matrices
2183   
2184     ftrv(fp, i, r)    "Taxes on factor use"
2185     fbep(fp, i, r)    "Subsidies on factor use"
2186     osep(a,r)         "Output tax"
2187     vdm(i,r)          "Aggregate demand for domestic output",
2188     vom(i,r)          "Total supply at market prices",
2189     voa(i,r)          "Output at producer prices"
2190     vim(i,r)          "Aggregate imports"
2191     vmip0(i,r)        "Investment demand for imported goods at agents' prices"
2192     vdip0(i,r)        "Investment demand for domestic goods at agents' prices"
2193     tvpm(r)           "Aggregate private demand"
2194     tvpmm(r)          "Aggregate private demand for imports"
2195     tvgm(r)           "Aggregate gov demand"
2196     tvgmm(r)          "Aggregate gov demand for imports"
2197     tvim(r)           "Aggregate inv demand"
2198     tvimm(r)          "Aggregate inv demand for imports"
2199     vxt(i)            "Total world trade scaling factor"
2200   
2201     rto(i,r)          "Output (or income) subsidy rates"
2202     rtf(fp,i,r)       "Primary factor and commodity rates taxes"
2203     rtpd(i,r)         "Private domestic consumption taxes"
2204     rtpm(i,r)         "Private import consumption tax rates"
2205     rtgd(i,r)         "Government domestic rates"
2206     rtgm(i,r)         "Government import tax rates"
2207     rtid(i,r)         "Investment domestic rates"
2208     rtim(i,r)         "Investment import tax rates"
2209     rtfd(i,j,r)       "Firms domestic tax rates"
2210     rtfm(i,j,r)       "Firms import tax rates"
2211     rtxs(i,r,s)       "Export subsidy rates"
2212     rtms(i,r,s)       "Import taxes rates"
2213     rtva(fp,r)        "Direct tax rate on factor income"
2214  ;
2215   
2216  *  Initialize the auxiliary matrices
2217   
2218  vdip0(i,r)   = vdip(i,r) ;
2219  vmip0(i,r)   = vmip(i,r) ;
2220   
2221  vdm(i,r)     = sum(j, vdfb(i,j,r)) + vdpb(i,r) + vdgb(i,r) + vdib(i,r) ;
2222  vom(i,r)     = vdm(i,r) + sum(s, vxsb(i,r,s)) + vst(i,r) ;
2223  voa(j,r)     = sum(fp, evfp(fp,j,r)) + sum(i, vdfp(i,j,r) + vmfp(i,j,r)) ;
2224  vim(i,r)     = sum(j, vmfb(i,j,r)) + vmpb(i,r) + vmgb(i,r) + vmib(i,r) ;
2225  *  21-Oct-2016 DvdM  Change from original code -- initialize vdib with investment expenditures
2226  osep(j,r)    = voa(j,r) - vom(j,r) ;
2227  ftrv(fp,j,r) = evfp(fp,j,r) - evfb(fp,j,r) ;
2228  fbep(fp,j,r) = 0 ;
2229   
BATINCLUDE F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\aggsam.gms
2231  if(1,
2232     put csv ;
2233     if(ifFirstPass,
2234        put "SAMLabel,Var,Region,RowLabel,ColLabel,Value" / ;
2235        csv.pc=5 ;
2236        csv.nd=9 ;
2237        ifFirstPass = 0 ;
2238     ) ;
2239   
2240  *  Production accounts
2241   
2242     loop((r,a),
2243        loop(i,
2244           put "BEFORE", "SAM", r.tl, i.tl, a.tl, (vdfb(i,a,r)+vmfb(i,a,r)) / ;
2245        ) ;
2246        put "BEFORE", "SAM", r.tl, "itax", a.tl, (sum(i,vdfp(i,a,r)+vmfp(i,a,r)-vdfb(i,a,r)-vmfb(i,a,r))) / ;
2247   
2248        loop(fp,
2249           put "BEFORE", "SAM", r.tl, fp.tl, a.tl,(evfb(fp,a,r)) / ;
2250        ) ;
2251        put "BEFORE", "SAM", r.tl, "vtax", a.tl, (sum(fp,evfp(fp,a,r) - evfb(fp,a,r))) / ;
2252     ) ;
2253   
2254  *  Commodity supply
2255   
2256     loop((r,i),
2257        put "BEFORE", "SAM", r.tl, "ptax", i.tl, (sum(a, ptax(i,a,r))) / ;
2258        put "BEFORE", "SAM", r.tl, "etax", i.tl, (sum(d, vfob(i,r,d) - vxsb(i,r,d))) / ;
2259        put "BEFORE", "SAM", r.tl, "mtax", i.tl, (sum(s, vmsb(i,s,r) - vcif(i,s,r))) / ;
2260     ) ;
2261   
2262     loop(r,
2263        if(ifAggTrade,
2264           loop(i,
2265              put "BEFORE", "SAM", r.tl, "BoP",  i.tl, (sum(s, vcif(i,s,r))) / ;
2266           ) ;
2267        else
2268           loop(s,
2269              loop(i,
2270                 put "BEFORE", "SAM", r.tl, s.tl,  i.tl, vcif(i,s,r) / ;
2271              ) ;
2272              put "BEFORE", "SAM", r.tl, "BoP",  s.tl, (sum(i, vcif(i,s,r))) / ;
2273           ) ;
2274        ) ;
2275     ) ;
2276   
2277  *  Income distribution
2278   
2279     loop((r,fp),
2280        put "BEFORE", "SAM", r.tl, "dtax", fp.tl, (sum(a, evfb(fp,a,r)-evos(fp,a,r))) / ;
2281        put "BEFORE", "SAM", r.tl, "REGY",   fp.tl, (sum(a, evos(fp,a,r))) / ;
2282     ) ;
2283   
2284     loop(r,
2285        put "BEFORE", "SAM", r.tl, "REGY", "itax", (
2286  *        Production
2287           sum((i,a), vdfp(i,a,r)+vmfp(i,a,r)-vdfb(i,a,r)-vmfb(i,a,r))
2288  *        Private consumption
2289           + sum(i, vdpp(i,r)+vmpp(i,r)-vdpb(i,r)-vmpb(i,r))
2290  *        Public consumption
2291           + sum(i, vdgp(i,r)+vmgp(i,r)-vdgb(i,r)-vmgb(i,r))
2292  *        Investment
2293           + sum(i, vdip(i,r)+vmip(i,r)-vdib(i,r)-vmib(i,r))
2294        ) / ;
2295        put "BEFORE", "SAM", r.tl, "REGY", "vtax", (sum((fp,a), evfp(fp,a,r) - evfb(fp,a,r))) / ;
2296        put "BEFORE", "SAM", r.tl, "REGY", "ptax", (sum((i,a), ptax(i,a,r))) / ;
2297        put "BEFORE", "SAM", r.tl, "REGY", "etax", (sum((i,d), vfob(i,r,d) - vxsb(i,r,d))) / ;
2298        put "BEFORE", "SAM", r.tl, "REGY", "mtax", (sum((i,s), vmsb(i,s,r) - vcif(i,s,r))) / ;
2299        put "BEFORE", "SAM", r.tl, "REGY", "dtax", (sum(fp, sum(a, evfb(fp,a,r) - evos(fp,a,r)))) / ;
2300        put "BEFORE", "SAM", r.tl, "DEPR", "REGY", (vdep(r)) / ;
2301   
2302        put "BEFORE", "SAM", r.tl, "PRIV", "REGY", (sum(i, vdpp(i,r)+vmpp(i,r))) / ;
2303        put "BEFORE", "SAM", r.tl, "GOV",  "REGY", (sum(i, vdgp(i,r)+vmgp(i,r))) / ;
2304        put "BEFORE", "SAM", r.tl, "INV",  "REGY", (save(r)) / ;
2305     ) ;
2306   
2307  *  Domestic absorption
2308   
2309     loop((r,i),
2310        put "BEFORE", "SAM", r.tl, i.tl, "PRIV", (vdpb(i,r)+vmpb(i,r)) / ;
2311        put "BEFORE", "SAM", r.tl, i.tl, "GOV",  (vdgb(i,r)+vmgb(i,r)) / ;
2312        put "BEFORE", "SAM", r.tl, i.tl, "INV",  (vdib(i,r)+vmib(i,r)) / ;
2313     ) ;
2314     loop(r,
2315        put "BEFORE", "SAM", r.tl, "itax", "PRIV", (sum(i, vdpp(i,r)+vmpp(i,r)-vdpb(i,r)-vmpb(i,r))) / ;
2316        put "BEFORE", "SAM", r.tl, "itax", "GOV",  (sum(i, vdgp(i,r)+vmgp(i,r)-vdgb(i,r)-vmgb(i,r))) / ;
2317        put "BEFORE", "SAM", r.tl, "itax", "INV",  (sum(i, vdip(i,r)+vmip(i,r)-vdib(i,r)-vmib(i,r))) / ;
2318     ) ;
2319   
2320  *  Exports
2321   
2322     loop((r,img),
2323        put "BEFORE", "SAM", r.tl, img.tl, "ITT",  (vst(img,r)) / ;
2324     ) ;
2325     if(ifAggTrade,
2326        loop((r,i),
2327           put "BEFORE", "SAM", r.tl, i.tl, "BOP",  (sum(d, vfob(i,r,d))) / ;
2328        ) ;
2329     else
2330        loop((r,i,d),
2331           put "BEFORE", "SAM", r.tl, i.tl, d.tl,  vfob(i,r,d) / ;
2332        ) ;
2333        loop((r,d),
2334           put "BEFORE", "SAM", r.tl, d.tl, "BOP",  (sum(i, vfob(i,r,d))) / ;
2335        ) ;
2336     ) ;
2337   
2338  *  Closure
2339   
2340     loop(r,
2341        put "BEFORE", "SAM", r.tl, "INV", "DEPR",  (vdep(r)) / ;
2342        put "BEFORE", "SAM", r.tl, "ITT", "BOP", (sum(img, vst(img,r))) / ;
2343        put "BEFORE", "SAM", r.tl, "INV", "BOP", (sum((i,s), vcif(i,s,r) - vfob(i,r,s)) - sum(img, vst(img,r))) / ;
2344     ) ;
2345   
2346  *  Miscellaneous
2347   
2348     loop(r,
2349        put "BEFORE", "MACRO", r.tl, "VKB", "", (VKB(r)) / ;
2350        put "BEFORE", "MACRO", r.tl, "POP", "", (POP(r)) / ;
2351     ) ;
2352  ) ;
2353   
2354  put msglog ;
2355   
2356  *
2357  * --- calculate tax rates in starting point
2358  *
2359   
2360  rto(i,r)    $ vom(i,r)     = 1 - voa(i,r)/vom(i,r) ;
2361  rtf(fp,i,r) $ evfb(fp,i,r) = evfp(fp,i,r)/evfb(fp,i,r) - 1 ;
2362  rtpd(i,r)   $ vdpb(i,r)    = vdpp(i,r)/vdpb(i,r) - 1;
2363  rtpm(i,r)   $ vmpb(i,r)    = vmpp(i,r)/vmpb(i,r) - 1;
2364  rtgd(i,r)   $ vdgb(i,r)    = vdgp(i,r)/vdgb(i,r) - 1;
2365  rtgm(i,r)   $ vmgb(i,r)    = vmgp(i,r)/vmgb(i,r) - 1;
2366  rtid(i,r)   $ vdib(i,r)    = vdip(i,r)/vdib(i,r) - 1;
2367  rtim(i,r)   $ vmib(i,r)    = vmip(i,r)/vmib(i,r) - 1;
2368  rtfd(i,j,r) $ vdfb(i,j,r)  = vdfp(i,j,r)/vdfb(i,j,r) - 1;
2369  rtfm(i,j,r) $ vmfb(i,j,r)  = vmfp(i,j,r)/vmfb(i,j,r) - 1;
2370  rtxs(i,r,s) $ vfob(i,r,s)  = 1-vfob(i,r,s)/vxsb(i,r,s);
2371  rtms(i,r,s) $ vcif(i,r,s)  = vmsb(i,r,s)/vcif(i,r,s) - 1;
2372   
2373  *  14-May-2016: DvdM
2374   
2375  *  !!!! DANGEROUS--assumes uniform tax rate across activities
2376  rtva(fp,r)$(sum(a, evfb(fp,a,r))) = (sum(a, evfb(fp,a,r)) - sum(a, evos(fp,a,r)))
2377                                    / (sum(a, evfb(fp,a,r))) ;
2378   
2379  tvpm(r)  = sum(i, vdpb(i,r)*(1+rtpd(i,r))  + vmpb(i,r)*(1+rtpm(i,r)));
2380  tvpmm(r) = sum(i, vmpb(i,r)*(1+rtpm(i,r))) + eps ;
2381   
2382  tvgm(r)  = sum(i, vdgb(i,r)*(1+rtgd(i,r))  + vmgb(i,r)*(1+rtgm(i,r)));
2383  tvgmm(r) = sum(i, vmgb(i,r)*(1+rtgm(i,r))) + eps ;
2384   
2385  tvim(r)  = sum(i, vdib(i,r)*(1+rtid(i,r))  + vmib(i,r)*(1+rtim(i,r)));
2386  tvimm(r) = sum(i, vmib(i,r)*(1+rtim(i,r))) + eps ;
2387   
2388  vxt(i)  = sum((r,s), vxsb(i,r,s)) ;
2389   
2390  *  Declare mirror matrices
2391   
2392  parameters
2393     evfb0(fp, j, r)   "Primary factor purchases, by firms, at market prices"
2394     vdfb0(i, j, r)    "Domestic purchases, by firms, at market prices"
2395     vmfb0(i, j, r)    "Import purchases, by firms, at market prices"
2396     vdpb0(i, r)       "Domestic purchases, by households, at market prices"
2397     vmpb0(i, r)       "Import purchases, by households, at market prices"
2398     vdgb0(i, r)       "Domestic purchases, by government, at market prices"
2399     vmgb0(i, r)       "Import purchases, by government, at market prices"
2400     vdib0(i, r)       "Domestic purchases, by investment, at market prices"
2401     vmib0(i, r)       "Import purchases, by investment, at market prices"
2402     vst0(i, r)        "Margin exports"
2403     vxsb0(i, r, d)    "Non-margin exports, at market prices"
2404     vfob0(i, r, d)    "Non-margin exports at border (FOB) prices"
2405   
2406     vdm0(i,r)         "Aggregate demand for domestic output"
2407     vom0(i,r)         "Aggregate output at market prices"
2408     vim0(i,r)         "Aggregate imports"
2409     vdib0(i,r)        "Aggregate investment demand"
2410     vxm0(i,r)         "Total exports"
2411     vxt0(i)           "Total world trade scaling factor"
2412     evfbTot0(fp,r)    "Aggregate factor remuneration"
2413     rtms0(r)          "Aggregate tariff revenue"
2414     Total
2415  ;
2416   
2417  vim0(i,r) = sum(j, vmfb(i,j,r)) + vmpb(i,r) + vmgb(i,r) + vmib(i,r) ;
2418  vxm0(i,r) = sum(s, vxsb(i,r,s)) + vst(i,r) ;
2419  vxt0(i)   = sum((r,s), vxsb(i,r,s));
2420  vom0(i,r) = vom(i,r) ;
2421   
2422  *
2423  * --- calculate tax income in starting point
2424  *
2425   
2426  rtms0(r) = sum((i,s), vmsb(i,s,r) - vcif(i,s,r)) ;
2427   
2428  vst0(i,r)      = vst(i,r);
2429  vdm0(i,r)      = vdm(i,r);
2430  vdpb0(i,r)     = vdpb(i,r);
2431  vmpb0(i,r)     = vmpb(i,r);
2432  vdgb0(i,r)     = vdgb(i,r);
2433  vmgb0(i,r)     = vmgb(i,r);
2434  vdib0(i,r)     = vdib(i,r);
2435  vmib0(i,r)     = vmib(i,r);
2436  evfb0(fp,i,r)  = evfb(fp,i,r);
2437  evfbTot0(fp,r) = sum(i,evfb(fp,i,r));
2438  vdfb0(i,j,r)   = vdfb(i,j,r);
2439  vmfb0(i,j,r)   = vmfb(i,j,r);
2440  vxsb0(i,r,s)   = vxsb(i,r,s);
2441  vfob0(i,r,s)   = vfob(i,r,s);
2442   
2443  parameter
2444     dirTax(r)   "Tax revenues"
2445     bop0(r)     "Balance of payments"
2446     factY(r)    "Factor remuneration net of taxes"
2447     gdp(r)      "GDP"
2448     gdpTot      "World GDP"
2449  ;
2450   
2451  dirTax(r)
2452  *  Government expenditures
2453     = sum(i, vdgb(i,r)*(1+rtgd(i,r)) + vmgb(i,r) * (1+rtgm(i,r)))
2454  *  Government revenues
2455     - sum(i, sum(fp, ftrv(fp,i,r) - fbep(fp,i,r)) - osep(i,r)
2456     +         vdpb(i,r) * rtpd(i,r) + vmpb(i,r) * rtpm(i,r)
2457     +         vdgb(i,r) * rtgd(i,r) + vmgb(i,r) * rtgm(i,r)
2458     +         vdib(i,r) * rtid(i,r) + vmib(i,r) * rtim(i,r)
2459     +  sum(j, vdfb(i,j,r) * rtfd(i,j,r) + vmfb(i,j,r) * rtfm(i,j,r))
2460     +  sum((s)$vxsb0(i,s,r), vmsb(i,s,r) - vcif(i,s,r))
2461     +  sum((s), vfob(i,r,s) - vxsb(i,r,s)) )
2462     -  sum((fp,i), evfb(fp,i,r)) + sum((fp,a), evos(fp,a,r)) ;
2463   
2464  * !!!! What about VST ????
2465  bop0(r)  = -sum((i,s), vfob(i,r,s)) + sum((i,s), vcif(i,s,r)) ;
2466  factY(r) = sum((fp,a), evfb(fp,a,r)) ;
2467   
2468  *
2469  * --- total gdp
2470  *
2471   
2472  * !!!! NO NET TRADE ????
2473   
2474  gdp(r) = sum(i, vdpb(i,r) + vmpb(i,r) + vdgb(i,r) + vmgb(i,r) + vdib(i,r) + vmib(i,r)) ;
2475  gdpTot = sum(r, gdp(r)) ;
2476   
2477  parameter
2478     vxm(a,r)    "Export volume"
2479     nz          "Count of non-zeros"
2480     trace       "Submatrix totals"
2481     ndropped    "Number of nonzeros dropped"
2482  ;
2483   
2484  ndropped("prod")    = 0 ;
2485  ndropped("imports") = 0 ;
2486   
2487  set
2488     dropexports(i,r)  "Logical flag for set vxm(td,r) to zero"
2489     dropimports(i,r)  "Logical flag for set vim(td,r) to zero"
2490     dropprod(i,r)     "Logical flag for set vom(td,r) to zero"
2491     droptrade(i,r,s)  "Logical flag for set vxsb(td,r) to zero"
2492     rb(r)             "Region to be balanced"
2493  ;
2494   
2495  dropexports(i,r) = no ;
2496  dropimports(i,r) = no ;
2497  dropprod(i,r)    = no ;
2498  droptrade(i,r,s) = no ;
2499   
2500  alias (r,rrr);
2501   
2502  set keepItem / factyBop, evfb, set.fp, GDP, yg, yp, yi, int / ;
2503   
2504  variables
2505     obj                  "Objective function"
2506     vz                   "Value of desired zero values"
2507     keepCor(keepItem,r)  "Difference between factor income plus BOP before and after"
2508  ;
2509   
2510  positive variables
2511     vdm_(i,r)      "Calibrated value of vdm"
2512     vdfb_(i,j,r)   "Calibrated value of vdfb"
2513     vmfb_(i,j,r)   "Calibrated value of vmfb"
2514     vdpb_(i,r)     "Calibrated value of vdpb"
2515     vmpb_(i,r)     "Calibrated value of vmpb"
2516     vdgb_(i,r)     "Calibrated value of vdgb"
2517     vmgb_(i,r)     "Calibrated value of vmgb"
2518     vdib_(i,r)     "Calibrated value of vdib"
2519     vmib_(i,r)     "Calibrated value of vmib"
2520     evfb_(fp,a,r)  "Calibrated value of evfb"
2521  ;
2522   
2523  scalar
2524     lsqr     / 1 /
2525     entropy  / 0 /
2526     bigM     / 1000 /
2527     penalty  / 1000 /
2528     tiny     / 1e-8 /
2529  ;
2530   
2531  equations
2532     objbaleq
2533     vzdefeq
2534     profiteq
2535     vaeq
2536     ndeq
2537     dommkteq
2538     impmkteq
2539     evfbkeepeq
2540     evfbTotKeepeq
2541     factinceq
2542     gdpKeepeq
2543     ypeq
2544     ygeq
2545     yieq
2546     intKeepeq
2547  ;
2548   
2549  objbaleq..
2550     obj =e= sum((r,i)$rb(r), (1/gdp(r))
2551          * ((sqr(vdpb_(i,r)-vdpb0(i,r))/(vdpb0(i,r)+tiny))$(vdpb(i,r) ne 0)
2552          +  (sqr(vmpb_(i,r)-vmpb0(i,r))/(vmpb0(i,r)+tiny))$(vmpb(i,r) ne 0)
2553          +  (sqr(vdgb_(i,r)-vdgb0(i,r))/(vdgb0(i,r)+tiny))$(vdgb(i,r) ne 0)
2554          +  (sqr(vmgb_(i,r)-vmgb0(i,r))/(vmgb0(i,r)+tiny))$(vmgb(i,r) ne 0)
2555          +  (sqr(vdib_(i,r)-vdib0(i,r))/(vdib0(i,r)+tiny))$(vdib(i,r) ne 0)
2556          +  (sqr(vmib_(i,r)-vmib0(i,r))/(vmib0(i,r)+tiny))$(vmib(i,r) ne 0)
2557          +   sum(fp$(evfb(fp,i,r) ne 0), sqr(evfb_(fp,i,r)-evfb0(fp,i,r))/(evfb0(fp,i,r)+tiny))
2558          +   sum(j$(vdfb(i,j,r) ne 0), sqr(vdfb_(i,j,r)-vdfb0(i,j,r))/(vdfb0(i,j,r)+tiny))
2559          +   sum(j$(vmfb(i,j,r) ne 0), sqr(vmfb_(i,j,r)-vmfb0(i,j,r))/(vmfb0(i,j,r)+tiny))))
2560          + penalty * vz
2561          + sum((rb,keepItem), sqr(KeepCor(keepItem,rb)/(10 - 9 $ sameas(keepItem,"GDP"))))
2562          ;
2563   
2564  *  Use linear penalty term to impose sparsity:
2565  *     (sum of items which are desired to be zero)
2566   
2567  vzdefeq..
2568     vz =e= sum((r,i)$rb(r), 1/gdp(r)
2569         *  [vdpb_(i,r)$((vdpb(i,r) eq 0)$vdpb0(i,r))
2570         +   vmpb_(i,r)$((vmpb(i,r) eq 0)$vmpb0(i,r))
2571         +   vdgb_(i,r)$((vdgb(i,r) eq 0)$vdgb0(i,r))
2572         +   vmgb_(i,r)$((vmgb(i,r) eq 0)$vmgb0(i,r))
2573         +   vdib_(i,r)$((vdib(i,r) eq 0)$vdib0(i,r))
2574         +   vmib_(i,r)$((vmib(i,r) eq 0)$vmib0(i,r))
2575         +  sum(fp$evfb0(fp,i,r), evfb_(fp,i,r)$(evfb(fp,i,r) eq 0))
2576         +  sum(j, vdfb_(i,j,r)$((vdfb(i,j,r) eq 0)$vdfb0(i,j,r))
2577         +         vmfb_(i,j,r)$((vmfb(i,j,r) eq 0)$vmfb0(i,j,r)))
2578            ]) ;
2579   
2580  *
2581  *  --- revenue exhaustion (output value = value of inputs)
2582  *
2583  profiteq(j,r)$(rb(r) and (vom(j,r) ne 0))..
2584     (vdm_(j,r) + vxm(j,r)) * (1-rto(j,r))
2585        =e= sum(i, vdfb_(i,j,r)*(1+rtfd(i,j,r))$vdfb0(i,j,r)
2586         +         vmfb_(i,j,r)*(1+rtfm(i,j,r))$vmfb0(i,j,r))
2587         +  sum(fp, evfb_(fp,j,r)*(1+rtf(fp,j,r))$evfb0(fp,j,r)) ;
2588   
2589  *
2590  *  --- "BigM" equations for factor use and intermediate input use
2591  *      (i.e. if production -> va,nd )
2592  *
2593  vaeq(j,fp,r)$(rb(r) and (evfb0(fp,j,r)*bigM*100) > vom(j,r) and (vom(j,r) ne 0)  and bigM)..
2594     (vdm_(j,r) + vxm(j,r)) * (1-rto(j,r)) =L= evfb_(fp,j,r)*(1+rtf(fp,j,r)) * bigM ;
2595   
2596  ndeq(j,r)$(rb(r) and (sum(i, vdfb0(i,j,r) + vmfb0(i,j,r))*bigm*100 > vom(j,r)) and (vom(j,r) ne 0) and bigM)..
2597     (vdm_(j,r) + vxm(j,r)) * (1-rto(j,r))
2598        =L=  sum(i,vdfb_(i,j,r)*(1+rtfd(i,j,r))$vdfb0(i,j,r)
2599         +         vmfb_(i,j,r)*(1+rtfm(i,j,r))$vmfb0(i,j,r)) * bigM ;
2600  *
2601  * --- domestic market
2602  *
2603   
2604  *  ???? DvdM I think there are errors here and double counting...
2605   
2606  dommkteq(i,r)$(rb(r) and (vdm(i,r) ne 0))..
2607     vdm_(i,r) =e= vdpb_(i,r)$vdpb0(i,r)
2608                +  vdgb_(i,r)$vdgb0(i,r)
2609                +  vdib_(i,r)$vdib0(i,r)
2610                +  sum(j$vdfb0(i,j,r), vdfb_(i,j,r)) ;
2611  *
2612  * --- import market
2613  *
2614  impmkteq(i,r)$(rb(r) and (vim(i,r) ne 0))..
2615     vim(i,r) =e= vmpb_(i,r)$vmpb0(i,r)
2616               +  vmgb_(i,r)$vmgb0(i,r)
2617               +  vmib_(i,r)$vmib0(i,r)
2618               +  sum(j$vmfb0(i,j,r), vmfb_(i,j,r)) ;
2619  *
2620  * --- try to maintain benchmark intermediate consumption
2621  *
2622  intKeepeq(r)$(rb(r) and ifKeepIntermediateConsumption)..
2623     sum((i,j)$vom(j,r), vdfb_(i,j,r)$vdfb0(i,j,r) + vmfb_(i,j,r)$vmfb0(i,j,r))
2624        =E= sum((i,j), vdfb0(i,j,r) + vmfb0(i,j,r)) * (1 + keepCor("int",r)/100) ;
2625   
2626  *
2627  * --- try to maintain at least benchmark gpd
2628  *
2629  gdpKeepeq(r)$(rb(r) and ifGDPKeep)..
2630     gdp(r)*(1 + keepCor("gdp",r)/100)
2631        =E= sum(i, vdpb_(i,r) $ vdpb0(i,r)
2632         +         vdgb_(i,r) $ vdgb0(i,r)
2633         +         vdib_(i,r) $ vdib0(i,r)
2634         +         vmpb_(i,r) $ vmpb0(i,r)
2635         +         vmgb_(i,r) $ vmgb0(i,r)
2636         +         vmib_(i,r) $ vmib0(i,r)
2637           ) ;
2638  *
2639  * --- try to maintain  benchmark factor income plus BOP
2640  *
2641  factinceq(r)$(rb(r) and ifKeepFactorincomeplusbop)..
2642     (facty(r) + bop0(r) - sum(i,vst0(i,r))) * (1 +  keepCor("factyBop",r)/100)
2643        =E= sum((fp,i)$evfb0(fp,i,r), evfb_(fp,i,r))
2644         -  sum((i,s)$vxsb0(i,r,s), vxsb(i,r,s)*(1-rtxs(i,r,s)))
2645         +  sum((i,s)$vxsb0(i,s,r), vcif(i,s,r) * vxsb(i,s,r)/vxsb0(i,s,r))
2646         -  sum(i, vst(i,r)) ;
2647  *
2648  * --- try to maintain  benchmark factor income plus BOP
2649  *
2650  evfbKeepeq(fp,r)$(rb(r) and ifKeepFactorincomeplusbop)..
2651     sum(j, evfb0(fp,j,r)*(1+rtf(fp,j,r))) * (1 + sum(sameas(keepItem,fp), keepCor(keepItem,r)/100))
2652        =E= sum(j$evfb0(fp,j,r), evfb_(fp,j,r) * (1+rtf(fp,j,r))) ;
2653   
2654  evfbTotKeepeq(r)$(rb(r) and ifKeepFactorincomeplusbop)..
2655     sum((fp,j), evfb0(fp,j,r)*(1+rtf(fp,j,r))) * (1 + keepCor("evfb",r)/100)
2656        =E= sum((fp,j)$evfb0(fp,j,r), evfb_(fp,j,r) * (1+rtf(fp,j,r))) ;
2657   
2658  *
2659  * --- try to maintain benchmark private consumption total
2660  *
2661  *  !!!! WHY SUM OVER FP ????
2662   
2663  ypeq(r)$(rb(r) and ifKeepPrivateconsumption)..
2664     sum(i, vdpb_(i,r)*(1+rtpd(i,r))$vdpb0(i,r) + vmpb_(i,r)*(1+rtpm(i,r))$vmpb0(i,r))
2665        =E= sum(i, vdpb0(i,r)*(1+rtpd(i,r)) + vmpb0(i,r)*(1+rtpm(i,r))) * (1 + keepCor("yp",r)/100) ;
2666  *
2667  * --- try to maintain benchmark gov consumption total
2668  *
2669  *  !!!! WHY SUM OVER FP ????
2670  ygeq(r)$(rb(r) and ifKeepGovernmentconsumption) ..
2671     sum(i, vdgb_(i,r)*(1+rtgd(i,r))$vdgb0(i,r) + vmgb_(i,r)*(1+rtgm(i,r))$vmgb0(i,r))
2672        =E= sum(i, vdgb0(i,r)*(1+rtgd(i,r)) + vmgb0(i,r)*(1+rtgm(i,r))) * (1 + keepCor("yg",r)/100) ;
2673   
2674  *
2675  * --- try to maintain benchmark investments -- due it at agents' price as in the others????
2676  *
2677  yieq(r)$(rb(r)and ifKeepInvestments)..
2678     sum(i, vdib_(i,r)*(1+rtid(i,r))$vdib0(i,r) + vmib_(i,r)*(1+rtim(i,r))$vmib0(i,r))
2679        =E= sum(i, vdib0(i,r)*(1+rtid(i,r)) + vmib0(i,r)*(1+rtim(i,r))) * (1 + keepCor("yi",r)/100) ;
2680   
2681  *
2682  * --- linear version, only sparsity in objective
2683  *
2684   
2685  model lpfeas / impmkteq, dommkteq, profiteq, vaeq, ndeq, vzdefeq,
2686                 gdpKeepeq, factInceq, evfbKeepeq, evfbTotKeepeq, ypeq, ygeq, yieq, intKeepeq / ;
2687   
2688  *
2689  * --- full calibration model
2690  *
2691   
2692  model calib / lpfeas + objbaleq / ;
2693   
2694  calib.holdfixed = yes ;
2695  calib.solvelink = 5 ;
2696  calib.optfile   = 1 ;
2697  calib.domlim    = 1000 ;
2698  calib.reslim    = 120 ;
2699   
2700  lpfeas.holdfixed = 2 ;
2701  lpfeas.solvelink = 5 ;
2702  lpfeas.optfile   = 1 ;
2703  lpfeas.domlim    = 1000 ;
2704  lpfeas.reslim    = 120 ;
2705   
2707   
2708  set
2709     dummy
2710        / start , absFilt /
2711     itr      "Calibration steps"
2712        / itr1*itr15 /
2713     dsitem   "Data set items to be balanced"
2714        / vom, evfb, vxsb, vtwr, vdfb, vmfb, vdpb, vmpb, vdgb, vmgb, vdib, vmib, gdp, total/
2715  ;
2716   
2717  parameter
2718     itrlog            "Iteration log"
2719     nzcountStart      "Non-zero count"        / 0 /
2720     nzcountEnd        "Non-zero count"        / 0 /
2721     nzcountRep        "Non-zero count"        / 0 /
2722     solvefeas         "Solve the feasibility" / 0 /
2723     bilatTradeScale
2724  ;
2725   
2726  *
2727  * --- remove tiny values before further rebalancing work
2728  *
BATINCLUDE F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter/itrlog.gms
2730  *-------------------------------------------------------------------------------
       
         CAPRI project
       
         GAMS file : ITRLOG.GMS
       
         @purpose  : Track changes during filtering
         @author   : Tom Rutherford
         @date     : 16.06.15
         @since    :
         @refDoc   :
         @seeAlso  :
         @calledBy : build\filter.gms
       
2746  *-------------------------------------------------------------------------------
2747   
2749   
2750     trace("vom",r,"before")  = sum(i, vom(i,r));
2751     trace("vdm",r,"before")  = sum(i, vdm(i,r));
2752     trace("evfb",r,"before") = sum((fp,j), evfb(fp,j,r));
2753     trace("vdfb",r,"before") = sum((i,j), vdfb(i,j,r));
2754     trace("vmfb",r,"before") = sum((i,j), vmfb(i,j,r));
2755     trace("vdpb",r,"before") = sum(i, vdpb(i,r));
2756     trace("vmpb",r,"before") = sum(i, vmpb(i,r));
2757     trace("vdgb",r,"before") = sum(i, vdgb(i,r));
2758     trace("vmgb",r,"before") = sum(i, vmgb(i,r));
2759     trace("vdib",r,"before") = sum(i, vdib(i,r));
2760     trace("vmib",r,"before") = sum(i, vmib(i,r));
2761     trace("vxsb",r,"before") = sum((i,s), vxsb(i,r,s));
2762     trace("vtwr",r,"before") = sum((j,i,s), vtwr(j,i,r,s));
2763     trace("gdp",r,"before")  = trace("vdpb",r,"before") + trace("vmpb",r,"before")
2764                              + trace("vdgb",r,"before") + trace("vmgb",r,"before")
2765                              + trace("vdib",r,"before") + trace("vmib",r,"before")
2766                              ;
2767   
BATINCLUDE F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter/itrlog.gms
2770  *-------------------------------------------------------------------------------
       
         CAPRI project
       
         GAMS file : ITRLOG.GMS
       
         @purpose  : Track changes during filtering
         @author   : Tom Rutherford
         @date     : 16.06.15
         @since    :
         @refDoc   :
         @seeAlso  :
         @calledBy : build\filter.gms
       
2786  *-------------------------------------------------------------------------------
2787   
2789   
2790     nz("vom","count")  = card(vom);
2791     nz("evfb","count") = card(evfb);
2792     nz("vxsb","count") = card(vxsb);
2793     nz("vtwr","count") = card(vtwr);
2794     nz("vdfb","count") = card(vdfb);
2795     nz("vmfb","count") = card(vmfb);
2796     nz("vdpb","count") = card(vdpb);
2797     nz("vmpb","count") = card(vmpb);
2798     nz("vdgb","count") = card(vdgb);
2799     nz("vmgb","count") = card(vmgb);
2800     nz("vdib","count") = card(vdib);
2801     nz("vmib","count") = card(vmib);
2802   
2803     nz(r,"count") = sum(i $ vom(i,r),1)
2804                   + sum(i $ vdm(i,r),1)
2805                   + sum(i $ vdpb(i,r),1)
2806                   + sum(i $ vdgb(i,r),1)
2807                   + sum(i $ vdib(i,r),1)
2808                   + sum(i $ vmpb(i,r),1)
2809                   + sum(i $ vmgb(i,r),1)
2810                   + sum(i $ vmib(i,r),1)
2811                   + sum((fp,j) $ evfb(fp,j,r),1)
2812                   + sum((i,s)  $ vxsb(i,r,s),1)
2813                   + sum((i,s)  $ vxsb(i,s,r),1)
2814                   + sum((i,j)  $ vdfb(i,j,r),1)
2815                   + sum((i,j)  $ vmfb(i,j,r),1)
2816                   + sum((j,i,s) $ vtwr(j,i,r,s),1)
2817                   + sum((j,i,s) $ vtwr(j,i,s,r),1) ;
2818   
2819     nz(i,"count") = sum(r $ vom(i,r),1)
2820                   + sum(r $ vdm(i,r),1)
2821                   + sum(r $ vdpb(i,r),1)
2822                   + sum(r $ vdgb(i,r),1)
2823                   + sum(r $ vdib(i,r),1)
2824                   + sum(r $ vmpb(i,r),1)
2825                   + sum(r $ vmgb(i,r),1)
2826                   + sum(r $ vmib(i,r),1)
2827                   + sum((fp,r) $ evfb(fp,i,r),1)
2828                   + sum((r,s)  $ vxsb(i,r,s),1)
2829                   + sum((j,r)  $ vdfb(i,j,r),1)
2830                   + sum((j,r)  $ vmfb(i,j,r),1)
2831                   + sum((j,r,s) $ vtwr(j,i,r,s),1) ;
2832   
2834   
2835  itrlog("nonzeros","start",dsitem) = nz(dsitem,"count");
2836  itrlog("nonzeros","start",r)      = nz(r,"count");
2837  itrlog("nonzeros","start",i)      = nz(i,"count");
2838   
INCLUDE    F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter/remTinyValues.gms
2840  *-------------------------------------------------------------------------------
       
         CAPRI project
       
         GAMS file : REMTINYVALUES.GMS
       
         @purpose  : Remove values from transaction matrixes below absolute
                     Threshold
         @author   : Dominique VDM
         @date     : 15.06.15
         @since    :
         @refDoc   :
         @seeAlso  :
         @calledBy : loadGtapAgg.gms
       
2857  *-------------------------------------------------------------------------------
2858   
2859  $macro chkTol2(var,d1,d2)        var(d1,d2)$(abs(var(d1,d2)) lt absTol) = 0
2860  $macro chkTol3(var,d1,d2,d3)     var(d1,d2,d3)$(abs(var(d1,d2,d3)) lt absTol) = 0
2861  $macro chkTol4(var,d1,d2,d3,d4)  var(d1,d2,d3,d4)$(abs(var(d1,d2,d3,d4)) lt absTol) = 0
2862   
2863  * The original had fp0, i0, r0 (but these have been aliased)
2864   
2865  if (absTol ne 1.E-10,
2866   
2867     evfp(fp,j,r)$(abs(evfp(fp,j,r)) lt absTol) = 0 ;
2868     evfb(fp,j,r)$(abs(evfb(fp,j,r)) lt absTol) = 0 ;
2869     evos(fp,a,r)$(abs(evos(fp,a,r)) lt absTol) = 0 ;
2870     ftrv(fp,j,r)$(abs(ftrv(fp,j,r)) lt absTol) = 0 ;
2871     fbep(fp,j,r)$(abs(fbep(fp,j,r)) lt absTol) = 0 ;
2872     osep(i,r)$(abs(osep(i,r)) lt absTol) = 0 ;
2873     vdfb(i,j,r)$(abs(vdfb(i,j,r)) lt absTol) = 0 ;
2874     vdfp(i,j,r)$(abs(vdfp(i,j,r)) lt absTol) = 0 ;
2875     vmfb(i,j,r)$(abs(vmfb(i,j,r)) lt absTol) = 0 ;
2876     vmfp(i,j,r)$(abs(vmfp(i,j,r)) lt absTol) = 0 ;
2877     vdpb(i,r)$(abs(vdpb(i,r)) lt absTol) = 0 ;
2878     vdpp(i,r)$(abs(vdpp(i,r)) lt absTol) = 0 ;
2879     vmpb(i,r)$(abs(vmpb(i,r)) lt absTol) = 0 ;
2880     vmpp(i,r)$(abs(vmpp(i,r)) lt absTol) = 0 ;
2881     vdgb(i,r)$(abs(vdgb(i,r)) lt absTol) = 0 ;
2882     vdgp(i,r)$(abs(vdgp(i,r)) lt absTol) = 0 ;
2883     vmgb(i,r)$(abs(vmgb(i,r)) lt absTol) = 0 ;
2884     vmgp(i,r)$(abs(vmgp(i,r)) lt absTol) = 0 ;
2885     vdib(i,r)$(abs(vdib(i,r)) lt absTol) = 0 ;
2886     vdip(i,r)$(abs(vdip(i,r)) lt absTol) = 0 ;
2887     vmib(i,r)$(abs(vmib(i,r)) lt absTol) = 0 ;
2888     vmip(i,r)$(abs(vmip(i,r)) lt absTol) = 0 ;
2889     vxsb(i,r,d)$(abs(vxsb(i,r,d)) lt absTol) = 0 ;
2890     vfob(i,r,d)$(abs(vfob(i,r,d)) lt absTol) = 0 ;
2891     vcif(i,r,d)$(abs(vcif(i,r,d)) lt absTol) = 0 ;
2892     vmsb(i,r,d)$(abs(vmsb(i,r,d)) lt absTol) = 0 ;
2893     VTWR(i,j,r,d)$(abs(VTWR(i,j,r,d)) lt absTol) = 0 ;
2894   
2895  *  ???? Does not include vdim
2896   
2897  );
2898   
BATINCLUDE F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter/itrlog.gms
2900  *-------------------------------------------------------------------------------
       
         CAPRI project
       
         GAMS file : ITRLOG.GMS
       
         @purpose  : Track changes during filtering
         @author   : Tom Rutherford
         @date     : 16.06.15
         @since    :
         @refDoc   :
         @seeAlso  :
         @calledBy : build\filter.gms
       
2916  *-------------------------------------------------------------------------------
2917   
2919   
2920     trace("vom",r,"after")  = sum(j, vom(j,r));
2921     trace("vdm",r,"after")  = sum(j, vdm(j,r));
2922     trace("evfb",r,"after") = sum((fp,j), evfb(fp,j,r));
2923     trace("vdfb",r,"after") = sum((i,j), vdfb(i,j,r));
2924     trace("vmfb",r,"after") = sum((i,j), vmfb(i,j,r));
2925     trace("vdpb",r,"after") = sum(i, vdpb(i,r));
2926     trace("vdgb",r,"after") = sum(i, vdgb(i,r));
2927     trace("vdib",r,"after") = sum(i, vdib(i,r));
2928     trace("vmpb",r,"after") = sum(i, vmpb(i,r));
2929     trace("vmgb",r,"after") = sum(i, vmgb(i,r));
2930     trace("vmib",r,"after") = sum(i, vmib(i,r));
2931     trace("vxsb",r,"after") = sum((i,s), vxsb(i,r,s));
2932     trace("vtwr",r,"after") = sum((j,i,s), vtwr(j,i,r,s));
2933     trace("gdp",r,"after")  = trace("vdpb",r,"after") + trace("vmpb",r,"after")
2934                             + trace("vdgb",r,"after") + trace("vmgb",r,"after")
2935                             + trace("vdib",r,"after") + trace("vmib",r,"after")
2936                             ;
2937   
2938     nz("vom","change")  = card(vom)  - nz("vom","count");
2939     nz("evfb","change") = card(evfb) - nz("evfb","count");
2940     nz("vxsb","change") = card(vxsb) - nz("vxsb","count");
2941     nz("vtwr","change") = card(vtwr) - nz("vtwr","count");
2942     nz("vdfb","change") = card(vdfb) - nz("vdfb","count");
2943     nz("vmfb","change") = card(vmfb) - nz("vmfb","count");
2944     nz("vdpb","change") = card(vdpb) - nz("vdpb","count");
2945     nz("vdgb","change") = card(vdgb) - nz("vdgb","count");
2946     nz("vdib","change") = card(vdib) - nz("vdib","count");
2947     nz("vmpb","change") = card(vmpb) - nz("vmpb","count");
2948     nz("vmgb","change") = card(vmgb) - nz("vmgb","count");
2949     nz("vmib","change") = card(vmib) - nz("vmib","count");
2950   
2952   
2953  itrlog("nonzeros","absFilt",dsitem) = nz(dsitem,"count");
2954  itrlog("change","absFilt",dsitem)   = nz(dsitem,"change");
2955  itrlog("trace","absFilt",dsitem)    = sum(r,trace(dsitem,r,"before"));
2956  itrlog("trace","start",dsitem)      = sum(r,trace(dsitem,r,"before"));
2957  itrlog(r,"absFilt",dsitem)          = trace(dsitem,r,"before");
2958  itrlog(r,"start",dsitem)            = trace(dsitem,r,"before");
2959   
2960  *
2961  * --- start with 10% of the desired final tolerance,
2962  *     will be stepwise increased
2963  *
2964  parameters
2965     curRelTol(a,r)
2966     curAbsTol
2967     startRelTol(i,r)
2968  ;
2969  curRelTol(i,r) = relTol;
2970  curAbsTol = absTol / nSteps ;
2971   
2973   
2975  set excRegs(r) / /;
2977  set excSecs(i) / sol, wnd, xel/;
2978   
2980   
2981  *  !!!! NEED TO DISCUSS HOW THESE FLAGS ARE USED AND WHAT ARE REASONABLE TOLERANCE LEVELS
2982   
2984   
2985     curRelTol(excSecs,r) = relTolRed ;
2986     curRelTol(a,excRegs) = relTolRed ;
2987   
2989   
2990  startRelTol(i,r) = curRelTol(i,r) ;
2991  curRelTol(i,r)   = curRelTol(i,r) / nSteps ;
2992   
2993  *
2994  * --- ensure some minimum for the totals to be kept
2995  *
2996  keepCor.lo(keepItem,r)    = -50;
2997  keepCor.lo(keepItem,r) $ sum(sameas(keepItem,fp),1)  = -100;
2998  keepCor.lo(KeepItem,r) $ sum(sameas(keepItem,cap),1) = -50;
2999  *
3000  * --- small corridor around factor income. GDP works not well as
3001  *     some countries such a XNA have an enormous trade deficit
3002  *     which might be strongly affected by filtering out small trade flows
3003  *
3004  keepCor.lo("evfb",r)    = -2;
3005  keepCor.up("evfb",r)    = +2;
3006  option kill=vdm_;
3007   
3008  Parameter
3009     rcount   "Keep count of treated regions"
3010  ;
3011   
3012  loop(itr$(
3013  *
3014  *  --- continue with iteration as long as:
3015  *
3016  *  if there is a change in total non-zero transaction > 0.1%
3017        ((abs(nzcountStart-nzCountEnd)>0.001*nzcountStart)
3018  *  or not yet the final tolerance reached
3019           or(smax((i,r), curRelTol(i,r)) < relTol))
3020  *
3021  *      --- and the desired minium number of transaction is not undercut
3022  *
3023           and ((nzCountEnd > minNumTransactions) or (not nzCountEnd)) ),
3024   
3025  *
3026  *  count non zeros
3027  *
3028     nzcountStart = card(vxsb) + card(vtwr) + card(vdfb) + card(vmfb)
3029                  + card(vdpb) + card(vdgb) + card(vdib) + card(vmpb) + card(vmgb) + card(vmib) + card(evfb) ;
3030   
3031  *  Aggregate value of imports:
3032   
3033     vim(i,r) = sum(s,(vxsb(i,s,r)*(1-rtxs(i,s,r))+sum(j,vtwr(j,i,s,r)))*(1+rtms(i,s,r))) ;
3034   
3035  *  Rescale transport demand:
3036   
3037     vst(i,r) $ sum(s, vst(i,s)) = vst(i,r) * sum((j,s,rrr), vtwr(i,j,s,rrr)) / sum(s, vst(i,s)) ;
3038   
3039  *  Value of exports:
3040   
3041     vxm(i,r) =  sum(s, vxsb(i,r,s)) + vst(i,r) ;
3042   
3043  *  Production for the domestic market:
3044   
3045     vdm(i,r) = vdpb(i,r) + vdgb(i,r) + sum(j, vdfb(i,j,r)) + vdib(i,r) ;
3046   
3047  *  Aggregate production:
3048   
3049     vom(i,r) = vdm(i,r) + vxm(i,r) ;
3050   
3051  *  Record nonzero counts:
3052   
BATINCLUDE F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter/itrlog.gms
3054  *-------------------------------------------------------------------------------
       
         CAPRI project
       
         GAMS file : ITRLOG.GMS
       
         @purpose  : Track changes during filtering
         @author   : Tom Rutherford
         @date     : 16.06.15
         @since    :
         @refDoc   :
         @seeAlso  :
         @calledBy : build\filter.gms
       
3070  *-------------------------------------------------------------------------------
3071   
3073   
3074     nz("vom","count")  = card(vom);
3075     nz("evfb","count") = card(evfb);
3076     nz("vxsb","count") = card(vxsb);
3077     nz("vtwr","count") = card(vtwr);
3078     nz("vdfb","count") = card(vdfb);
3079     nz("vmfb","count") = card(vmfb);
3080     nz("vdpb","count") = card(vdpb);
3081     nz("vmpb","count") = card(vmpb);
3082     nz("vdgb","count") = card(vdgb);
3083     nz("vmgb","count") = card(vmgb);
3084     nz("vdib","count") = card(vdib);
3085     nz("vmib","count") = card(vmib);
3086   
3087     nz(r,"count") = sum(i $ vom(i,r),1)
3088                   + sum(i $ vdm(i,r),1)
3089                   + sum(i $ vdpb(i,r),1)
3090                   + sum(i $ vdgb(i,r),1)
3091                   + sum(i $ vdib(i,r),1)
3092                   + sum(i $ vmpb(i,r),1)
3093                   + sum(i $ vmgb(i,r),1)
3094                   + sum(i $ vmib(i,r),1)
3095                   + sum((fp,j) $ evfb(fp,j,r),1)
3096                   + sum((i,s)  $ vxsb(i,r,s),1)
3097                   + sum((i,s)  $ vxsb(i,s,r),1)
3098                   + sum((i,j)  $ vdfb(i,j,r),1)
3099                   + sum((i,j)  $ vmfb(i,j,r),1)
3100                   + sum((j,i,s) $ vtwr(j,i,r,s),1)
3101                   + sum((j,i,s) $ vtwr(j,i,s,r),1) ;
3102   
3103     nz(i,"count") = sum(r $ vom(i,r),1)
3104                   + sum(r $ vdm(i,r),1)
3105                   + sum(r $ vdpb(i,r),1)
3106                   + sum(r $ vdgb(i,r),1)
3107                   + sum(r $ vdib(i,r),1)
3108                   + sum(r $ vmpb(i,r),1)
3109                   + sum(r $ vmgb(i,r),1)
3110                   + sum(r $ vmib(i,r),1)
3111                   + sum((fp,r) $ evfb(fp,i,r),1)
3112                   + sum((r,s)  $ vxsb(i,r,s),1)
3113                   + sum((j,r)  $ vdfb(i,j,r),1)
3114                   + sum((j,r)  $ vmfb(i,j,r),1)
3115                   + sum((j,r,s) $ vtwr(j,i,r,s),1) ;
3116   
3118   
3119  *
3120  *  --- delete very small trade margins / trade flows
3121  *      (absolute tolerance)
3122  *
3123     if(abstol ne 1.E-10,
3124        vtwr(j,i,r,s) $ (vtwr(j,i,r,s) le curAbsTol) = 0;
3125        vxsb(i,r,s)   $ (vxsb(i,r,s)   le curAbsTol) = 0;
3126   
3127        vtwr(j,i,r,s) $ (not vxsb(i,r,s)) = 0;
3128        rtxs(i,r,s)   $ (not vxsb(i,r,s)) = 0;
3129        rtms(i,r,s)   $ (not vxsb(i,r,s)) = 0;
3130     ) ;
3131   
3132  *  Filter small values here, commodity specific demand on total
3133   
3134  *
3135  *  --- aggregate total import and domestic demand per product
3136  *
3137     vim(i,r) = sum(j,vmfb(i,j,r)) + vmpb(i,r) + vmgb(i,r) + vmib(i,r) ;
3138     vdm(i,r) = sum(j,vdfb(i,j,r)) + vdpb(i,r) + vdgb(i,r) + vdib(i,r) ;
3139  *
3140     if(relTol > 1.E-10,
3141  *
3142  *     --- delete intermediate demands if cost share (approx) is
3143  *         below tolerance times total output values
3144  *
3145        vdfb(i,j,r) $ ((vdfb(i,j,r) < min(curRelTol(i,r),curRelTol(i,r))/100 * (vom(j,r)-sum(fp,evfb(fp,j,r)))) $ vdfb(i,j,r)) =
       0 ;
3146        vmfb(i,j,r) $ ((vmfb(i,j,r) < min(curRelTol(i,r),curRelTol(i,r))/100 * (vom(j,r)-sum(fp,evfb(fp,j,r)))) $ vmfb(i,j,r)) =
       0 ;
3147  *
3148  *     --- delete import and domestic private demand for products
3149  *         if below tolerance times total private demand
3150  *
3151        vmpb(i,r)   $ ((vmpb(i,r) < curRelTol(i,r)/100 * tvpm(r)  *  tvpmm(r)/tvpm(r)   ) $ vmpb(i,r)) = 0;
3152        vdpb(i,r)   $ ((vdpb(i,r) < curRelTol(i,r)/100 * tvpm(r)  * (1-tvpmm(r)/tvpm(r))) $ vdpb(i,r)) = 0;
3153  *
3154  *     --- delete import and domestic gov demand for products
3155  *         if below tolerance times total gov demand
3156  *
3157        vmgb(i,r)   $ ((vmgb(i,r) < curRelTol(i,r)/100 * tvgm(r) *  tvgmm(r)/tvgm(r)   ) $ vmgb(i,r))   = 0;
3158        vdgb(i,r)   $ ((vdgb(i,r) < curRelTol(i,r)/100 * tvgm(r) * (1-tvgmm(r)/tvgm(r))) $ vdgb(i,r))   = 0;
3159  *
3160  *     --- delete import and domestic inv demand for products
3161  *         if below tolerance times total inv demand
3162  *
3163        vmib(i,r)   $ ((vmib(i,r) < curRelTol(i,r)/100 * tvim(r) *  tvimm(r)/tvim(r)   ) $ vmib(i,r))   = 0;
3164        vdib(i,r)   $ ((vdib(i,r) < curRelTol(i,r)/100 * tvim(r) * (1-tvimm(r)/tvim(r))) $ vdib(i,r))   = 0;
3165     );
3166   
3167  *  Decide whether to drop trade and production:
3168   
3169  *
3170  *  --- aggregate total import and domestic demand per product
3171  *
3172     vim(i,r) = sum(j,vmfb(i,j,r)) + vmpb(i,r) + vmgb(i,r) + vmib(i,r) ;
3173     vdm(i,r) = sum(j,vdfb(i,j,r)) + vdpb(i,r) + vdgb(i,r) + vdib(i,r) ;
3174   
3175  *
3176  *  --- drop export of product if share on total exports and
3177  *      max. import share on total import demand of product at destination is below threshold
3178  *
3179     if (relTol > 1.E-10,
3180        dropexports(i,r)$(vxm(i,r) < curRelTol(i,r)/100*sum(j,vxm(j,r)) and
3181                  (sum(s $
3182                     (  ( ((vxsb(i,r,s)*(1-rtxs(i,r,s))+sum(j,vtwr(j,i,r,s)))*(1+rtms(i,r,s)) /
3183                               vim(i,s)) < curRelTol(i,s)/100) $ vim(i,s)),1) eq sum(s $ vim(i,s),1)) and vxm(i,r)) = YES;
3184     ) ;
3185   
3186     vxsb(i,r,s)     $ dropexports(i,r) = 0 ;
3187     vtwr(j,i,r,s)   $ dropexports(i,r) = 0 ;
3188     rtxs(i,r,s)     $ dropexports(i,r) = 0 ;
3189     rtms(i,r,s)     $ dropexports(i,r) = 0 ;
3190   
3191  *
3192  *        --- drop import of product if share on total imports and
3193  *            max. export share on output at destination is below threshold
3194  *
3195     if (relTol > 1.E-10,
3196        dropimports(i,r)$((vim(i,r) < curRelTol(i,r)/100*sum(j,vim(j,r))) and
3197                     (sum(s$(( (vxsb(i,s,r)/vom(i,s)) < curRelTol(i,s)/100) $ vom(i,s)),1) eq sum(s $ vom(i,s),1)) and vim(i,r))
       = yes;
3198     ) ;
3199  *
3200  *  --- drop imports if no import demand
3201  *
3202     dropimports(i,r) $ (vmpb(i,r)+vmgb(i,r)+vmib(i,r)+sum(j,vmfb(i,j,r)) eq 0) = yes;
3203     dropimports(i,r) $ (not vdm_.range(i,r))= no;
3204   
3205     vim(i,r) $ dropimports(i,r) = 0;
3206  *
3207  *  --- drop production if share of output net of own intermediate consumption
3208  *      is below threshold on total output net of own intermediate consumption
3209  *      and share on total factor use is below threshold
3210  *
3211     if (relTol > 1.E-10,
3212        dropprod(i,r) $ ((vom(i,r)-vdfb(i,i,r)<curRelTol(i,r)/100*sum(j,vom(j,r)-vdfb(j,j,r)))
3213                              $ vom(i,r))= yes;
3214     );
3215  *
3216  *  --- drop producion if no domestic and export demand
3217  *
3218     dropprod(i,r) $ (vxm(i,r)+vdpb(i,r)+vdgb(i,r)+vdib(i,r)
3219                       + sum(j$(not sameas(i,j)),vdfb(i,j,r)) eq 0) = yes;
3220   
3221     while((ndropped("prod")    <> card(dropprod)) and
3222           (ndropped("imports") <> card(dropimports)),
3223   
3224        ndropped("prod")    = card(dropprod);
3225        ndropped("imports") = card(dropimports);
3226   
3227        vdm(i,r)        $ dropprod(i,r) = 0;
3228        vdpb(i,r)       $ dropprod(i,r) = 0;
3229        vdgb(i,r)       $ dropprod(i,r) = 0;
3230        vdib(i,r)       $ dropprod(i,r) = 0;
3231        vxsb(i,r,s)     $ dropprod(i,r) = 0;
3232        vtwr(j,i,r,s)   $ dropprod(i,r) = 0;
3233        rtxs(i,r,s)     $ dropprod(i,r) = 0;
3234        rtms(i,r,s)     $ dropprod(i,r) = 0;
3235        vst(i,r)        $ dropprod(i,r) = 0;
3236        evfb(fp,i,r)    $ dropprod(i,r) = 0;
3237        vdfb(j,i,r)     $ dropprod(i,r) = 0;
3238        vmfb(j,i,r)     $ dropprod(i,r) = 0;
3239        vdfb(i,j,r)     $ dropprod(i,r) = 0;
3240  *
3241  *     --- drop total imports if no use of import good
3242  *
3243        dropimports(i,r) $ (not dropimports(i,r))
3244                       = yes $ (vmpb(i,r)+vmgb(i,r)+vmib(i,r)+sum(j,vmfb(i,j,r)) eq 0);
3245   
3246        vxm(i,r) = sum(s, vxsb(i,r,s)) + vst(i,r);
3247        vxsb(i,s,r)      $ dropimports(i,r) = 0;
3248        vtwr(j,i,s,r)    $ dropimports(i,r) = 0;
3249        rtxs(i,s,r)      $ dropimports(i,r) = 0;
3250        rtms(i,s,r)      $ dropimports(i,r) = 0;
3251        vmpb(i,r)        $ dropimports(i,r) = 0;
3252        vmgb(i,r)        $ dropimports(i,r) = 0;
3253        vmib(i,r)        $ dropimports(i,r) = 0;
3254        vmfb(i,a,r)      $ dropimports(i,r) = 0;
3255  *
3256  *     --- drop production if no use of domestically produced good and no exports
3257  *
3258        dropprod(i,r) $ (not dropprod(i,r))
3259                 = yes $ (vxm(i,r)+vdgb(i,r)+vdpb(i,r)+vdib(i,r)
3260                          +sum(j $ (not sameas(j,i)),vdfb(i,j,r)) eq 0);
3261     );
3262   
3263     if(calib.solprint eq 1, display ndropped ; ) ;
3264   
3265  *
3266  *  --- aggregate exports, domestic use and imports (including trade magrins)
3267  *
3268  *  !!!! WHAT ABOUT VDIM????
3269   
3270     vxm(i,r) = sum(s, vxsb(i,r,s)) + vst(i,r) ;
3271     vdm(i,r) = vdpb(i,r) + vdgb(i,r) + vdib(i,r) + sum(j,vdfb(i,j,r)) ;
3272     vim(i,r) = sum(s,(vxsb(i,s,r)*(1-rtxs(i,s,r))+sum(j,vtwr(j,i,s,r)))*(1+rtms(i,s,r))) ;
3273  *
3274  *  --- drop bilateral trade flow if value net of trade margins and taxes is below
3275  *         thresholds both of exports and imports
3276   
3277     if (relTol > 1.E-10,
3278        droptrade(i,r,s) $ vxsb(i,r,s) = yes $ (vxsb(i,r,s)<min(curRelTol(i,s),curRelTol(i,r))/100 * min( vxm(i,r), vim(i,s)));
3279     ) ;
3280   
3281  *
3282  *  --- if dropped, also delete related trade margin and export/import taxes
3283  *
3284     vxsb(i,r,s)     $ droptrade(i,r,s) = 0;
3285     vtwr(j,i,r,s)   $ droptrade(i,r,s) = 0;
3286     rtxs(i,r,s)     $ droptrade(i,r,s) = 0;
3287     rtms(i,r,s)     $ droptrade(i,r,s) = 0;
3288  *
3289  *  --- aggregate value of imports and exports after dropping trade
3290  *
3291     vxm(i,r) = sum(s, vxsb(i,r,s)) + vst(i,r);
3292     vim(i,r) = sum(s,(vxsb(i,s,r)*(1-rtxs(i,s,r))+sum(j,vtwr(j,i,s,r)))*(1+rtms(i,s,r)));
3293  *
3294  *  --- rescale vxsb to match approx. old exports of exporter and imports of importer
3295  *
3296     bilatTradeScale(r,s) = (sum(j,vxm0(j,r))/sum(j,vxm(j,r))
3297                          +  sum(j,vim0(j,s))/sum(j,vim(j,s)))/2;
3298     vxsb(i,r,s)   $ vxsb(i,r,s)   = vxsb(i,r,s)     * bilatTradeScale(r,s);
3299     vtwr(j,i,r,s) $ vtwr(j,i,r,s) = vtwr(j,i,r,s) * bilatTradeScale(r,s);
3300  *
3301  *  --- rescale global trade (up to 20%)
3302  *
3303     vxt(i)        = sum((r,s), vxsb(i,r,s));
3304     vxt(i)$vxt(i) = min(1.2,vxt0(i)/vxt(i));
3305     vxsb(i,r,s) $ vxsb(i,r,s) = vxsb(i,r,s) * vxt(i);
3306  *
3307  *  --- apply same scalar to trade margins
3308  *
3309     vtwr(j,i,r,s) $ vtwr(j,i,r,s) = vtwr(j,i,r,s) * vxt(i);
3310  *
3311  *  --- rescale import and tax revenuves
3312  *
3313     total(r,"new") = sum((i,s), (vxsb(i,s,r)*(1-rtxs(i,s,r))+sum(j,vtwr(j,i,s,r)))*(rtms(i,s,r)));
3314     rtms(i,s,r) $ rtms(i,s,r) = rtms(i,s,r) * rtms0(r) / total(r,"new");
3315   
3316     vim(i,r) = sum(s,(vxsb(i,s,r)*(1-rtxs(i,s,r))+sum(j,vtwr(j,i,s,r)))*(1+rtms(i,s,r)));
3317     vim(i,r) $ (sum(s,vxsb(i,s,r)) eq 0) = 0;
3318     vmpb(i,r)     $ (vim(i,r) eq 0) = 0;
3319     vmgb(i,r)     $ (vim(i,r) eq 0) = 0;
3320     vmib(i,r)     $ (vim(i,r) eq 0) = 0;
3321     vmfb(i,j,r)   $ (vim(i,r) eq 0) = 0;
3322   
3323  *  Rescale transport demand:
3324   
3325     vst(i,r) $ vst(i,r) = vst(i,r) * sum((j,s,rrr), vtwr(i,j,s,rrr)) / sum(s, vst(i,s));
3326     vxm(i,r) =  sum(s, vxsb(i,r,s)) + vst(i,r);
3327   
3328  *  Aggregate production:
3329   
3330     vom(j,r) = vdm(j,r) + vxm(j,r);
3331   
3332  *  Record current value of aggregate transactions
BATINCLUDE F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter/itrlog.gms
3334  *-------------------------------------------------------------------------------
       
         CAPRI project
       
         GAMS file : ITRLOG.GMS
       
         @purpose  : Track changes during filtering
         @author   : Tom Rutherford
         @date     : 16.06.15
         @since    :
         @refDoc   :
         @seeAlso  :
         @calledBy : build\filter.gms
       
3350  *-------------------------------------------------------------------------------
3351   
3353   
3354     trace("vom",r,"before")  = sum(i, vom(i,r));
3355     trace("vdm",r,"before")  = sum(i, vdm(i,r));
3356     trace("evfb",r,"before") = sum((fp,j), evfb(fp,j,r));
3357     trace("vdfb",r,"before") = sum((i,j), vdfb(i,j,r));
3358     trace("vmfb",r,"before") = sum((i,j), vmfb(i,j,r));
3359     trace("vdpb",r,"before") = sum(i, vdpb(i,r));
3360     trace("vmpb",r,"before") = sum(i, vmpb(i,r));
3361     trace("vdgb",r,"before") = sum(i, vdgb(i,r));
3362     trace("vmgb",r,"before") = sum(i, vmgb(i,r));
3363     trace("vdib",r,"before") = sum(i, vdib(i,r));
3364     trace("vmib",r,"before") = sum(i, vmib(i,r));
3365     trace("vxsb",r,"before") = sum((i,s), vxsb(i,r,s));
3366     trace("vtwr",r,"before") = sum((j,i,s), vtwr(j,i,r,s));
3367     trace("gdp",r,"before")  = trace("vdpb",r,"before") + trace("vmpb",r,"before")
3368                              + trace("vdgb",r,"before") + trace("vmgb",r,"before")
3369                              + trace("vdib",r,"before") + trace("vmib",r,"before")
3370                              ;
3371   
3373   
3374     vdm_.l(i,r)      = vdm(i,r);
3375     evfb_.l(fp,i,r)  = evfb(fp,i,r);
3376     vdfb_.l(i,j,r)   = vdfb(i,j,r);
3377     vmfb_.l(i,j,r)   = vmfb(i,j,r);
3378     vdpb_.l(i,r)     = vdpb(i,r);
3379     vdgb_.l(i,r)     = vdgb(i,r);
3380     vdib_.l(i,r)     = vdib(i,r);
3381     vmpb_.l(i,r)     = vmpb(i,r);
3382     vmgb_.l(i,r)     = vmgb(i,r);
3383     vmib_.l(i,r)     = vmib(i,r);
3384   
3385  *  Set some bounds to avoid numerical problems (Arne keeps us on a short leash):
3386   
3387     vdm_.lo(i,r)      $ vdm_.range(i,r)      = 0;      vdm_.up(i,r)      $ vdm_.range(i,r)      = 10*gdp(r);
3388     evfb_.lo(fp,i,r)  $ evfb_.range(fp,i,r)  = 0;      evfb_.up(fp,i,r)  $ evfb_.range(fp,i,r)  = 10*gdp(r);
3389     vdfb_.lo(i,j,r)   $ vdfb_.range(i,j,r)   = 0;      vdfb_.up(i,j,r)   $ vdfb_.range(i,j,r)   = 10*gdp(r);
3390     vmfb_.lo(i,j,r)   $ vmfb_.range(i,j,r)   = 0;      vmfb_.up(i,j,r)   $ vmfb_.range(i,j,r)   = 10*gdp(r);
3391     vdpb_.lo(i,r)     $ vdpb_.range(i,r)     = 0;      vdpb_.up(i,r)     $ vdpb_.range(i,r)     = 10*gdp(r);
3392     vdgb_.lo(i,r)     $ vdgb_.range(i,r)     = 0;      vdgb_.up(i,r)     $ vdgb_.range(i,r)     = 10*gdp(r);
3393     vdib_.lo(i,r)     $ vdib_.range(i,r)     = 0;      vdib_.up(i,r)     $ vdib_.range(i,r)     = 10*gdp(r);
3394     vmpb_.lo(i,r)     $ vmpb_.range(i,r)     = 0;      vmpb_.up(i,r)     $ vmpb_.range(i,r)     = 10*gdp(r);
3395     vmgb_.lo(i,r)     $ vmgb_.range(i,r)     = 0;      vmgb_.up(i,r)     $ vmgb_.range(i,r)     = 10*gdp(r);
3396     vmib_.lo(i,r)     $ vmib_.range(i,r)     = 0;      vmib_.up(i,r)     $ vmib_.range(i,r)     = 10*gdp(r);
3397   
3398  *  Fix to zero any flows associated with omitted markets:
3399   
3400     vdm_.fx(i,r)      $ (vdm(i,r)  eq 0) = 0;
3401     vdfb_.fx(i,j,r)   $ (vdm(i,r)  eq 0) = 0;
3402     vdpb_.fx(i,r)     $ (vdm(i,r)  eq 0) = 0;
3403     vdgb_.fx(i,r)     $ (vdm(i,r)  eq 0) = 0;
3404     vdib_.fx(i,r)     $ (vdm(i,r)  eq 0) = 0;
3405   
3406     vdm_.fx(i,r)      $ (vom(i,r)  eq 0) = 0;
3407     evfb_.fx(fp,i,r)  $ (vom(i,r)  eq 0) = 0;
3408     vdfb_.fx(i,j,r)   $ (vom(j,r)  eq 0) = 0;
3409     vmfb_.fx(i,j,r)   $ (vom(j,r)  eq 0) = 0;
3410     vdfb_.fx(i,j,r)   $ (vom(i,r)  eq 0) = 0;
3411   
3412     vmfb_.fx(i,j,r)   $ (vim(i,r)  eq 0) = 0;
3413     vmpb_.fx(i,r)     $ (vim(i,r)  eq 0) = 0;
3414     vmgb_.fx(i,r)     $ (vim(i,r)  eq 0) = 0;
3415     vmib_.fx(i,r)     $ (vim(i,r)  eq 0) = 0;
3416   
3417     rcount = 0 ;
3418     loop(rrr,
3419   
3420        rb(rrr) = yes;
3421        rcount  = rcount + 1 ;
3422   
3423  *     Update the title bar with the status prior to the solve:
3424        nzcountRep = card(vxsb) + card(vtwr) + card(vdfb) + card(vmfb)
3425                   + card(vdpb) + card(vdgb) + card(vdib) + card(vmpb) + card(vmgb) + card(vmib) + card(evfb) ;
3426   
BATINCLUDE F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter/title.gms
3428  *-----------------------------------------------------------------------------------------
       
         GTAP8 in GAMS project
       
         GAMS file : TITLE.GMS
       
         @purpose  : Write a block of strings to the console
         @author   : W.Britz
         @date     : 16.02.11
         @since    :
         @refDoc   :
         @seeAlso  : util\title1.gms
         @calledBy :
       
3444  *-----------------------------------------------------------------------------------------
3446   
3447   put logfile ; put 'title' ' FILTER : ' 'Filtering iteration : ' itr.pos:0:0 ' (' card(itr):0:0 '), region ' rrr.tl:0 ' (' (ro
      und(100*(rcount-1)/card(rrr))):0:0 ' % of regions), # of non-zeros: ' nzCountRep:0:0 ', cur rel. tolerance % ' smax((a,r),curR
      elTol(a,r)):0 / ;
3448   
3450   
3451  *     If necessary, we can begin at a feasible point:
3452   
3453        bigM = 1000;
3454   
3455        if(1,
3456           options limcol=0,limrow=0, solprint=off ;
3457        else
3458           options limcol=300,limrow=300, solprint=on ;
3459        ) ;
3460        solve lpfeas using lp minimizing vz;
3461        execerror = 0 ;
3462        while (((lpfeas.solvestat<>1) or (lpfeas.modelstat>2)) and (bigM < 1.E+5),
3463           bigM = bigM * 10;
3464           solve lpfeas using lp minimizing vz;
3465           execerror = 0 ;
3466        ) ;
3467        if((lpfeas.solvestat<>1) or
3468           (lpfeas.modelstat>2),
3469           lpfeas.solprint = 1;
3470           solve lpfeas using lp minimizing vz;
3471           put_utility 'log' / "Feasibility model fails for region: ",rrr.tl," you might have used to aggressive thresholds";
3472           abort "Feasibility model fails:", rb, bigM, facty, bop0, gdp ;
3473        );
3474        solve calib using nlp minimizing obj ;
3475        if((calib.suminfes ne 0) or (calib.numinfes > 0),
3476           calib.solprint = 1;
3477           solve calib using nlp minimizing obj;
3478           put_utility 'log' / "Calibration model fails for region: ",rrr.tl," you might have used to aggressive thresholds";
3479           abort "Calibration model fails:", rb, facty, bop0, gdp ;
3480        ) ;
3481        if((calib.solvestat <> 1) or (calib.modelstat > 2),
3482           solve calib using nlp minimizing obj ;
3483           execerror = 0 ;
3484        );
3485   
3486        vdm(i,rb)      = vdpb_.l(i,rb) + vdgb_.l(i,rb) + vdib_.l(i,rb) + sum(j,vdfb_.l(i,j,rb)) ;
3487        evfb(fp,i,rb)  = evfb_.l(fp,i,rb);
3488        vdfb(i,j,rb)   = vdfb_.l(i,j,rb);
3489        vmfb(i,j,rb)   = vmfb_.l(i,j,rb);
3490        vdpb(i,rb)     = vdpb_.l(i,rb);
3491        vdgb(i,rb)     = vdgb_.l(i,rb);
3492        vdib(i,rb)     = vdib_.l(i,rb);
3493        vmpb(i,rb)     = vmpb_.l(i,rb);
3494        vmgb(i,rb)     = vmgb_.l(i,rb);
3495        vmib(i,rb)     = vmib_.l(i,rb);
3496        vom(i,rb)      = vdm(i,rb) + sum(s, vxsb(i,rb,s)) + vst(i,rb);
3497        vxm(i,rb)      = sum(s, vxsb(i,rb,s)) + vst(i,rb);
3498   
3499        if(sum((fp,i,rb), evfb(fp,i,rb)) eq 0,
3500           calib.solprint = 1;
3501           solve calib using nlp minimizing obj ;
3502           abort "No factor income left" ;
3503        );
3504   
3505        rb(rrr) = no;
3506     );
3507   
3508  *  Record resulting value of aggregate transactions and change in non-zeros
BATINCLUDE F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter/itrlog.gms
3510  *-------------------------------------------------------------------------------
       
         CAPRI project
       
         GAMS file : ITRLOG.GMS
       
         @purpose  : Track changes during filtering
         @author   : Tom Rutherford
         @date     : 16.06.15
         @since    :
         @refDoc   :
         @seeAlso  :
         @calledBy : build\filter.gms
       
3526  *-------------------------------------------------------------------------------
3527   
3529   
3530     trace("vom",r,"after")  = sum(j, vom(j,r));
3531     trace("vdm",r,"after")  = sum(j, vdm(j,r));
3532     trace("evfb",r,"after") = sum((fp,j), evfb(fp,j,r));
3533     trace("vdfb",r,"after") = sum((i,j), vdfb(i,j,r));
3534     trace("vmfb",r,"after") = sum((i,j), vmfb(i,j,r));
3535     trace("vdpb",r,"after") = sum(i, vdpb(i,r));
3536     trace("vdgb",r,"after") = sum(i, vdgb(i,r));
3537     trace("vdib",r,"after") = sum(i, vdib(i,r));
3538     trace("vmpb",r,"after") = sum(i, vmpb(i,r));
3539     trace("vmgb",r,"after") = sum(i, vmgb(i,r));
3540     trace("vmib",r,"after") = sum(i, vmib(i,r));
3541     trace("vxsb",r,"after") = sum((i,s), vxsb(i,r,s));
3542     trace("vtwr",r,"after") = sum((j,i,s), vtwr(j,i,r,s));
3543     trace("gdp",r,"after")  = trace("vdpb",r,"after") + trace("vmpb",r,"after")
3544                             + trace("vdgb",r,"after") + trace("vmgb",r,"after")
3545                             + trace("vdib",r,"after") + trace("vmib",r,"after")
3546                             ;
3547   
3548     nz("vom","change")  = card(vom)  - nz("vom","count");
3549     nz("evfb","change") = card(evfb) - nz("evfb","count");
3550     nz("vxsb","change") = card(vxsb) - nz("vxsb","count");
3551     nz("vtwr","change") = card(vtwr) - nz("vtwr","count");
3552     nz("vdfb","change") = card(vdfb) - nz("vdfb","count");
3553     nz("vmfb","change") = card(vmfb) - nz("vmfb","count");
3554     nz("vdpb","change") = card(vdpb) - nz("vdpb","count");
3555     nz("vdgb","change") = card(vdgb) - nz("vdgb","count");
3556     nz("vdib","change") = card(vdib) - nz("vdib","count");
3557     nz("vmpb","change") = card(vmpb) - nz("vmpb","count");
3558     nz("vmgb","change") = card(vmgb) - nz("vmgb","count");
3559     nz("vmib","change") = card(vmib) - nz("vmib","count");
3560   
3562   
3563     option nz:0;
3564     if (calib.solprint eq 1, display nz) ;
3565   
3566     option trace:3:1:1;
3567     if(calib.solprint eq 1, display trace ; ) ;
3568   
3569     itrlog("nonzeros",itr,dsitem)       = nz(dsitem,"count");
3570     itrlog("nonzeros",itr,r)            = nz(r,"count");
3571     itrlog("nonzeros",itr,i)            = nz(i,"count");
3572     itrlog("nonzeros",itr,"curRelTol")  = smax((i,r), curRelTol(i,r));
3573     itrlog("nonzeros",itr,"curAbsTol")  = curAbsTol;
3574     itrlog("change",itr,dsitem)         = nz(dsitem,"change");
3575     itrlog("change",itr,"curRelTol")    = smax((i,r),curRelTol(i,r));
3576     itrlog("change",itr,"curAbsTol")    = curAbsTol;
3577     itrlog("trace",itr,dsitem)          = sum(r,trace(dsitem,r,"before"));
3578     itrlog("trace",itr,"curRelTol")     = smax((i,r),curRelTol(i,r));
3579     itrlog("trace",itr,"curAbsTol")     = curAbsTol;
3580     itrlog(r,itr,dsitem)                = trace(dsitem,r,"before");
3581   
3582     if (curAbsTol < absTol*0.999, curAbsTol = curAbsTol + absTol/nSteps);
3583     if (smax((i,r), curRelTol(i,r)) < relTol*0.999, curRelTol(i,r) = curRelTol(i,r) + startRelTol(i,r)/nSteps) ;
3584   
3585     curRelTol(i,r) = round(curRelTol(i,r),8);
3586   
3587     if (relTol eq 1.E-10, curRelTol(i,r) = 1.E-10);
3588   
3589     nzcountEnd = card(vxsb) + card(vtwr) + card(vdfb) + card(vmfb)
3590                + card(vdpb) + card(vdgb) + card(vdib) + card(vmpb) + card(vmgb) + card(vmib) + card(evfb) ;
3591  *  End of iteration (itr)
3592  );
3593   
3594  itrlog(r,"done",dsitem)          = trace(dsitem,r,"after");
3595  itrlog("trace","done",dsitem)    = sum(r,trace(dsitem,r,"after"));
BATINCLUDE F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter/itrlog.gms
3597  *-------------------------------------------------------------------------------
       
         CAPRI project
       
         GAMS file : ITRLOG.GMS
       
         @purpose  : Track changes during filtering
         @author   : Tom Rutherford
         @date     : 16.06.15
         @since    :
         @refDoc   :
         @seeAlso  :
         @calledBy : build\filter.gms
       
3613  *-------------------------------------------------------------------------------
3614   
3616   
3617     nz("vom","count")  = card(vom);
3618     nz("evfb","count") = card(evfb);
3619     nz("vxsb","count") = card(vxsb);
3620     nz("vtwr","count") = card(vtwr);
3621     nz("vdfb","count") = card(vdfb);
3622     nz("vmfb","count") = card(vmfb);
3623     nz("vdpb","count") = card(vdpb);
3624     nz("vmpb","count") = card(vmpb);
3625     nz("vdgb","count") = card(vdgb);
3626     nz("vmgb","count") = card(vmgb);
3627     nz("vdib","count") = card(vdib);
3628     nz("vmib","count") = card(vmib);
3629   
3630     nz(r,"count") = sum(i $ vom(i,r),1)
3631                   + sum(i $ vdm(i,r),1)
3632                   + sum(i $ vdpb(i,r),1)
3633                   + sum(i $ vdgb(i,r),1)
3634                   + sum(i $ vdib(i,r),1)
3635                   + sum(i $ vmpb(i,r),1)
3636                   + sum(i $ vmgb(i,r),1)
3637                   + sum(i $ vmib(i,r),1)
3638                   + sum((fp,j) $ evfb(fp,j,r),1)
3639                   + sum((i,s)  $ vxsb(i,r,s),1)
3640                   + sum((i,s)  $ vxsb(i,s,r),1)
3641                   + sum((i,j)  $ vdfb(i,j,r),1)
3642                   + sum((i,j)  $ vmfb(i,j,r),1)
3643                   + sum((j,i,s) $ vtwr(j,i,r,s),1)
3644                   + sum((j,i,s) $ vtwr(j,i,s,r),1) ;
3645   
3646     nz(i,"count") = sum(r $ vom(i,r),1)
3647                   + sum(r $ vdm(i,r),1)
3648                   + sum(r $ vdpb(i,r),1)
3649                   + sum(r $ vdgb(i,r),1)
3650                   + sum(r $ vdib(i,r),1)
3651                   + sum(r $ vmpb(i,r),1)
3652                   + sum(r $ vmgb(i,r),1)
3653                   + sum(r $ vmib(i,r),1)
3654                   + sum((fp,r) $ evfb(fp,i,r),1)
3655                   + sum((r,s)  $ vxsb(i,r,s),1)
3656                   + sum((j,r)  $ vdfb(i,j,r),1)
3657                   + sum((j,r)  $ vmfb(i,j,r),1)
3658                   + sum((j,r,s) $ vtwr(j,i,r,s),1) ;
3659   
3661  itrlog("nonZeros","done",dsitem) = nz(dsitem,"count");
3662  itrlog("nonZeros","done",r)      = nz(r,"count");
3663  itrlog("nonZeros","done",i)      = nz(i,"count");
3664   
3665  set aggItr / set.itr, start, absFilt, done / ;
3666  itrLog("nonZeros",aggItr,"total") = sum(dsItem, itrLog("nonZeros",aggItr,dsItem)) ;
3667   
3668  dsItem(r) = YES;
3669  dsItem(i) = YES;
3670  itrLog("nonZeros","delta",dsItem) = itrlog("nonZeros","done",dsitem) - itrlog("nonzeros","start",dsitem);
3671  itrLog("nonZeros","delta (%)",dsItem) $ itrlog("nonZeros","Start",dsitem)
3672       = itrLog("nonZeros","delta",dsItem) / itrlog("nonZeros","start",dsitem) * 100;
3673  dsItem(r) = no ;
3674  dsItem(i) = no ;
3675   
3676  itrLog("trace","delta",dsItem) = itrlog("trace","done",dsitem) - itrlog("trace","start",dsitem);
3677  itrLog("trace","delta (%)",dsItem) $ itrlog("trace","start",dsitem)
3678     = itrLog("trace","delta",dsItem) / itrlog("trace","start",dsitem) * 100;
3679   
3680  itrLog(r,"delta",dsItem) = itrlog(r,"done",dsitem) - itrlog(r,"start",dsitem);
3681  itrLog(r,"delta (%)",dsItem) $ itrlog(r,"start",dsitem)
3682      = itrLog(r,"delta",dsItem) / itrlog(r,"start",dsitem) * 100;
3683   
3684  put logfile ; put / ;
3685  put  " " / ;
3686  put  "* --- value of transactions " / ;
3687  put  " " / ;
3688  put  "item":25,"start":10,"end":10,"abs diff ":10,"rel diff":10 / ;
3689  loop(dsitem $ itrLog("trace","start",dsitem),
3690     put  dsItem.tl:20,
3691        itrLog("trace","start",dsitem):10:0," ",
3692        itrLog("trace","done",dsitem):10:0," ",
3693        itrLog("trace","delta",dsitem):10:0," ",
3694        itrLog("trace","delta (%)",dsitem):10," %" / ;
3695  );
3696  put  " " / ;
3697  put  "* --- non-zero items " / ;
3698  put  " " / ;
3699  dsItem(r) = YES ;
3700  dsItem(i) = YES ;
3701  put  "item":25,"start":10,"end":10,"abs diff ":10,"rel diff":10 / ;
3702  loop(dsitem $ itrLog("nonZeros","start",dsitem),
3703     put  dsItem.tl:20,
3704        itrLog("nonZeros","start",dsitem):10:0," ",
3705        itrLog("nonZeros","done",dsitem):10:0," ",
3706        itrLog("nonZeros","delta",dsitem):10:0," ",
3707        itrLog("nonZeros","delta (%)",dsitem):10," %" / ;
3708  );
3709  dsItem(r) = NO;
3710  dsItem(i) = NO;
3711  put  " " / ;
3712   
3713  parameter
3714     checkDim
3715     check
3716  ;
3717  checkDim(r,"vdib","before")  = sum(i, vdib(i,r))  ;
3718  checkDim(r,"vmib","before")  = sum(i, vmib(i,r))  ;
3719  checkDim(r,"vdep","before")  = vdep(r);
3720  checkDim(r,"vkb","before")   = vkb(r);
3721  checkDim(r,"fdepr","before") = vdep(r)/vkb(r);
3722  checkDim(r,"save","before")  = save(r);
3723  checkDim(r,"fsav","before")  = -sum((i,s), vfob(i,r,s)) + sum( (i,s), vcif(i,s,r)) - sum(i, vst(i,r));
3724  checkDim(r,"xft","before")   = sum((cap,i), evfb0(cap,i,r));
3725   
3726  *
3727  * ---- update vmsb and vcif
3728  *
3729   
3730  vcif(i,r,s) $ vcif(i,r,s) = vcif(i,r,s) * vxsb(i,r,s)/vxsb0(i,r,s);
3731  vmsb(i,r,s) $ vmsb(i,r,s) = vcif(i,r,s) * (1+rtms(i,r,s)) ;
3732  vfob(i,r,s) $ vfob(i,r,s) = vxsb(i,r,s) * (1-rtxs(i,r,s));
3733   
3734  check(r,"evfp","before") = sum((fp,a), evfp(fp,a,r)) ;
3735   
3736  *
3737  * --- update transaction at agent prices, using tax rates
3738  *
3739   
3740  evfp(fp,j,r) = evfb(fp,j,r)  * (1+rtf(fp,j,r));
3741  check(r,"evfp","after")  = sum((fp,j), evfp(fp,j,r));
3742  check(r,"ftrv","before") = sum((fp,j), ftrv(fp,j,r));
3743  ftrv(fp,j,r) $ evfb0(fp,j,r) = ftrv(fp,j,r) * evfb(fp,j,r)/evfb0(fp,j,r);
3744  ftrv(fp,j,r) $ (not evfb0(fp,j,r)) = 0;
3745  check(r,"ftrv","after") = sum((fp,j), ftrv(fp,j,r));
3746   
3747  *
3748  * --- update tax income flows
3749  *
3750  check(r,"fbep","before") = sum((fp,j), fbep(fp,j,r));
3751  fbep(fp,j,r) $ evfb0(fp,j,r) = -evfp(fp,j,r) + evfb(fp,j,r) + ftrv(fp,j,r) ;
3752  fbep(fp,j,r) $ (not evfb0(fp,j,r)) = 0;
3753  check(r,"fbep","after")  = sum((fp,j), fbep(fp,j,r));
3754   
3755  check(r,"osep","before") = sum(j, osep(j,r));
3756  osep(j,r) = -rto(j,r) * (vdm(j,r)  + vxm(j,r) ) $ vom(j,r);
3757  check(r,"osep","after") = sum(j, osep(j,r));
3758   
3759  vdpp(i,r)     = vdpb(i,r)   * (1+rtpd(i,r));
3760  vmpp(i,r)     = vmpb(i,r)   * (1+rtpm(i,r));
3761  vdgp(i,r)     = vdgb(i,r)   * (1+rtgd(i,r));
3762  vmgp(i,r)     = vmgb(i,r)   * (1+rtgm(i,r));
3763  vdip(i,r)     = vdib(i,r)   * (1+rtid(i,r));
3764  vmip(i,r)     = vmib(i,r)   * (1+rtim(i,r));
3765  vdfp(i,j,r)   = vdfb(i,j,r) * (1+rtfd(i,j,r));
3766  vmfp(i,j,r)   = vmfb(i,j,r) * (1+rtfm(i,j,r));
3767   
3768  *
3769  * --- update depreciation and initial capital stock
3770  *     (not necessary for consistency, but might keep depreciation rates etc.
3771  *      in more plausbile ranges)
3772  *
3773  *  14-May-2016: DvdM--I don't believe this adjustment belongs here as it changes the macro SAM and
3774  *                     is not part of the filtering process.
3775  *
3776  parameter
3777     scaleCap
3778  ;
3779   
3780  *  Agents' prices????
3781  if(ifAdjDepr,
3782     scaleCap(r) = sqrt(sum((fp,cap,j) $ sameas(fp,cap), evfb(fp,j,r))/sum((fp,cap,j) $ sameas(fp,cap), evfb0(fp,j,r))
3783                 *      sum(i, vdip(i,r)+vmip(i,r))/sum(i, vdip0(i,r)+vmip0(i,r))) ;
3784   
3785     vdep(r) =  vdep(r) * scaleCap(r);
3786     vkb(r)  =  vkb(r)  * scaleCap(r);
3787   
3788  *
3789  *  --- calculate saving residually -- should be at agents' prices
3790  *
3791     SAVE(r) = sum(i, vdip(i,r)+vmip(i,r))
3792             - [-sum((i,s), vfob(i,r,s)) + sum((i,s), vcif(i,s,r)) - sum(i, vst(i,r))]
3793             - vdep(r) ;
3794   
3795  *
3796  *  ---- increase capital stock (to dampen effect of changes in foreign saving on return to capital)
3797  *         if share of savings on investment expenditures < 50%
3798  *
3799  *  vkb(r) $ (  (save(r) / sum(i, vdip(i,r)+vdip(i,r))) < 0.2)
3800  *     = vkb(r) * 1/max(0.2,save(r) / sum(i, vdib(i,r)+vdip(i,r)));
3801  *
3802  *  ---- ensure at least 20% savings on total investment expenditures
3803  *
3804     SAVE(r)$((save(r)/sum(i, vdip(i,r)+vmip(i,r))) < 0.20) = 0.20 * sum(i, vdip(i,r)+vmip(i,r)) ;
3805  *
3806  *  --- calculate depreciation residually (only necessary if 20% threshold kicked in)
3807  *        but maintain 50% of original level
3808  *
3809     vdep(r) = max(0.5 * vdep(r),
3810                 sum(i, vdip(i,r)+vmip(i,r))
3811             -  [-sum((i,s), vfob(i,r,s)) + sum((i,s), vcif(i,s,r)) - sum(i, vst(i,r))]
3812             -  save(r)) ;
3813  *
3814  *  --- recalculate savings
3815  *
3816     SAVE(r) = sum(i, vdip(i,r)+vmip(i,r))
3817             -   [-sum((i,s), vfob(i,r,s)) + sum((i,s), vcif(i,s,r)) - sum(i, vst(i,r))]
3818             -   vdep(r) ;
3819   
3820     if(sum(r $ (vdep(r) < 0),1),
3821   
3822        put logfile ;
3823        put   "Implied changes so large that depreciation became negative after corrections, please reduce thresholds" / ;
3824        abort "Implied changes so large that depreciation became negative after corrections, please reduce thresholds", vdep ;
3825     ) ;
3826  ) ;
3827   
3828  alias(fp,fp1); alias(a,a1) ;
3829   
3830  checkDim(r,"vdib","after")   = sum(i, vdib(i,r)) ;
3831  checkDim(r,"vmib","after")   = sum(i, vmib(i,r)) ;
3832  checkDim(r,"vdep","after")  = vdep(r) ;
3833  checkDim(r,"vkb","after")   = vkb(r) ;
3834  checkDim(r,"fdepr","after") = vdep(r)/vkb(r) ;
3835  checkDim(r,"save","after")  = save(r) ;
3836  checkDim(r,"fsav","after")  = -sum((i,s), vfob(i,r,s)) + sum((i,s), vcif(i,s,r)) - sum(i, vst(i,r)) ;
3837  checkDim(r,"xft","after")   = sum((fp,cap,a) $ sameas(fp,cap), evfb(fp,a,r)) ;
3838   
3839  set dimCheck / vdib, vmib, vdep, save, fsav, xft, vkb, fdepr / ;
3840  checkDim(r,dimCheck,"delta") = checkDim(r,dimCheck,"after") - checkDim(r,dimCheck,"before");
3841  checkDim(r,dimCheck,"% delta") $ checkDim(r,dimCheck,"before") = checkDim(r,dimCheck,"delta")/checkDim(r,dimCheck,"before")*10
      0;
3842  display checkDim;
3843   
3844  *
3845  * --- update direct taxes on factors
3846  * !!!! May want to re-visit with new evos matrix
3847  *
3848  parameter
3849     evosNew(r)
3850  ;
3851   
3852  check(r,"evos","before") = sum((fp,a), evos(fp,a,r));
3853   
3854  *  14-May-2016: DvdM
3855   
3856  * $ontext
3857  evosNew(r) = dirtax(r)
3858             - [sum(i, vdgb(i,r)*(1+rtgd(i,r)) + vmgb(i,r)*(1+rtgm(i,r)))
3859             -  sum(j, sum(fp, ftrv(fp,j,r) - fbep(fp,j,r)) -  osep(j,r))
3860             -  sum(i,
3861             +   vdpb(i,r) * rtpd(i,r) + vmpb(i,r) * rtpm(i,r)
3862             +   vdgb(i,r) * rtgd(i,r) + vmgb(i,r) * rtgm(i,r)
3863             +   vdib(i,r) * rtid(i,r) + vmib(i,r) * rtim(i,r)
3864             +   sum(j, vdfb(i,j,r) * rtfd(i,j,r) + vmfb(i,j,r) * rtfm(i,j,r))
3865             +   sum(s, vmsb(i,s,r) - vcif(i,s,r))
3866             +   sum(s, vfob(i,r,s) - vxsb(i,r,s)))
3867             -   sum ((fp,cap,j) $ sameas(fp,cap), evfb(fp,j,r)) ] ;
3868   
3869  check(r,"evos","after") = sum((fp,a), evos(fp,a,r)) ;
3870   
3871  evos(fp,a,r) $ evos(fp,a,r) = evos(fp,a,r) * evosNew(r) / sum((fp1,a1), evos(fp1,a1,r)) ;
3872   
3873  *$offtext
3874   
3875  evos(fp,a,r) = (1 - rtva(fp,r))*evfb(fp,a,r) ;
3876  check(r,"evos","after") = sum((fp,a), evos(fp,a,r)) ;
3877  set checkItems / evos, fbep, osep, evfp, ftrv / ;
3878  check(r,checkItems,"delta") = check(r,checkItems,"after")  - check(r,checkItems,"before") ;
3879  check(r,checkItems,"%") $  check(r,checkItems,"before")
3880     = check(r,checkItems,"delta")/check(r,checkItems,"before") * 100;
3881   
3882  display check, keepCor.l;
3883   
BATINCLUDE F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\aggsam.gms
3885  if(1,
3886     put csv ;
3887     if(ifFirstPass,
3888        put "SAMLabel,Var,Region,RowLabel,ColLabel,Value" / ;
3889        csv.pc=5 ;
3890        csv.nd=9 ;
3891        ifFirstPass = 0 ;
3892     ) ;
3893   
3894  *  Production accounts
3895   
3896     loop((r,a),
3897        loop(i,
3898           put "AFTER", "SAM", r.tl, i.tl, a.tl, (vdfb(i,a,r)+vmfb(i,a,r)) / ;
3899        ) ;
3900        put "AFTER", "SAM", r.tl, "itax", a.tl, (sum(i,vdfp(i,a,r)+vmfp(i,a,r)-vdfb(i,a,r)-vmfb(i,a,r))) / ;
3901   
3902        loop(fp,
3903           put "AFTER", "SAM", r.tl, fp.tl, a.tl,(evfb(fp,a,r)) / ;
3904        ) ;
3905        put "AFTER", "SAM", r.tl, "vtax", a.tl, (sum(fp,evfp(fp,a,r) - evfb(fp,a,r))) / ;
3906     ) ;
3907   
3908  *  Commodity supply
3909   
3910     loop((r,i),
3911        put "AFTER", "SAM", r.tl, "ptax", i.tl, (sum(a, ptax(i,a,r))) / ;
3912        put "AFTER", "SAM", r.tl, "etax", i.tl, (sum(d, vfob(i,r,d) - vxsb(i,r,d))) / ;
3913        put "AFTER", "SAM", r.tl, "mtax", i.tl, (sum(s, vmsb(i,s,r) - vcif(i,s,r))) / ;
3914     ) ;
3915   
3916     loop(r,
3917        if(ifAggTrade,
3918           loop(i,
3919              put "AFTER", "SAM", r.tl, "BoP",  i.tl, (sum(s, vcif(i,s,r))) / ;
3920           ) ;
3921        else
3922           loop(s,
3923              loop(i,
3924                 put "AFTER", "SAM", r.tl, s.tl,  i.tl, vcif(i,s,r) / ;
3925              ) ;
3926              put "AFTER", "SAM", r.tl, "BoP",  s.tl, (sum(i, vcif(i,s,r))) / ;
3927           ) ;
3928        ) ;
3929     ) ;
3930   
3931  *  Income distribution
3932   
3933     loop((r,fp),
3934        put "AFTER", "SAM", r.tl, "dtax", fp.tl, (sum(a, evfb(fp,a,r)-evos(fp,a,r))) / ;
3935        put "AFTER", "SAM", r.tl, "REGY",   fp.tl, (sum(a, evos(fp,a,r))) / ;
3936     ) ;
3937   
3938     loop(r,
3939        put "AFTER", "SAM", r.tl, "REGY", "itax", (
3940  *        Production
3941           sum((i,a), vdfp(i,a,r)+vmfp(i,a,r)-vdfb(i,a,r)-vmfb(i,a,r))
3942  *        Private consumption
3943           + sum(i, vdpp(i,r)+vmpp(i,r)-vdpb(i,r)-vmpb(i,r))
3944  *        Public consumption
3945           + sum(i, vdgp(i,r)+vmgp(i,r)-vdgb(i,r)-vmgb(i,r))
3946  *        Investment
3947           + sum(i, vdip(i,r)+vmip(i,r)-vdib(i,r)-vmib(i,r))
3948        ) / ;
3949        put "AFTER", "SAM", r.tl, "REGY", "vtax", (sum((fp,a), evfp(fp,a,r) - evfb(fp,a,r))) / ;
3950        put "AFTER", "SAM", r.tl, "REGY", "ptax", (sum((i,a), ptax(i,a,r))) / ;
3951        put "AFTER", "SAM", r.tl, "REGY", "etax", (sum((i,d), vfob(i,r,d) - vxsb(i,r,d))) / ;
3952        put "AFTER", "SAM", r.tl, "REGY", "mtax", (sum((i,s), vmsb(i,s,r) - vcif(i,s,r))) / ;
3953        put "AFTER", "SAM", r.tl, "REGY", "dtax", (sum(fp, sum(a, evfb(fp,a,r) - evos(fp,a,r)))) / ;
3954        put "AFTER", "SAM", r.tl, "DEPR", "REGY", (vdep(r)) / ;
3955   
3956        put "AFTER", "SAM", r.tl, "PRIV", "REGY", (sum(i, vdpp(i,r)+vmpp(i,r))) / ;
3957        put "AFTER", "SAM", r.tl, "GOV",  "REGY", (sum(i, vdgp(i,r)+vmgp(i,r))) / ;
3958        put "AFTER", "SAM", r.tl, "INV",  "REGY", (save(r)) / ;
3959     ) ;
3960   
3961  *  Domestic absorption
3962   
3963     loop((r,i),
3964        put "AFTER", "SAM", r.tl, i.tl, "PRIV", (vdpb(i,r)+vmpb(i,r)) / ;
3965        put "AFTER", "SAM", r.tl, i.tl, "GOV",  (vdgb(i,r)+vmgb(i,r)) / ;
3966        put "AFTER", "SAM", r.tl, i.tl, "INV",  (vdib(i,r)+vmib(i,r)) / ;
3967     ) ;
3968     loop(r,
3969        put "AFTER", "SAM", r.tl, "itax", "PRIV", (sum(i, vdpp(i,r)+vmpp(i,r)-vdpb(i,r)-vmpb(i,r))) / ;
3970        put "AFTER", "SAM", r.tl, "itax", "GOV",  (sum(i, vdgp(i,r)+vmgp(i,r)-vdgb(i,r)-vmgb(i,r))) / ;
3971        put "AFTER", "SAM", r.tl, "itax", "INV",  (sum(i, vdip(i,r)+vmip(i,r)-vdib(i,r)-vmib(i,r))) / ;
3972     ) ;
3973   
3974  *  Exports
3975   
3976     loop((r,img),
3977        put "AFTER", "SAM", r.tl, img.tl, "ITT",  (vst(img,r)) / ;
3978     ) ;
3979     if(ifAggTrade,
3980        loop((r,i),
3981           put "AFTER", "SAM", r.tl, i.tl, "BOP",  (sum(d, vfob(i,r,d))) / ;
3982        ) ;
3983     else
3984        loop((r,i,d),
3985           put "AFTER", "SAM", r.tl, i.tl, d.tl,  vfob(i,r,d) / ;
3986        ) ;
3987        loop((r,d),
3988           put "AFTER", "SAM", r.tl, d.tl, "BOP",  (sum(i, vfob(i,r,d))) / ;
3989        ) ;
3990     ) ;
3991   
3992  *  Closure
3993   
3994     loop(r,
3995        put "AFTER", "SAM", r.tl, "INV", "DEPR",  (vdep(r)) / ;
3996        put "AFTER", "SAM", r.tl, "ITT", "BOP", (sum(img, vst(img,r))) / ;
3997        put "AFTER", "SAM", r.tl, "INV", "BOP", (sum((i,s), vcif(i,s,r) - vfob(i,r,s)) - sum(img, vst(img,r))) / ;
3998     ) ;
3999   
4000  *  Miscellaneous
4001   
4002     loop(r,
4003        put "AFTER", "MACRO", r.tl, "VKB", "", (VKB(r)) / ;
4004        put "AFTER", "MACRO", r.tl, "POP", "", (POP(r)) / ;
4005     ) ;
4006  ) ;
4007   
4008  *  Re-initialize make matrices
4009   
4010  vdm(i,r)     = sum(j, vdfb(i,j,r)) + vdpb(i,r) + vdgb(i,r) + vdib(i,r) ;
4011  vom(i,r)     = vdm(i,r) + sum(s, vxsb(i,r,s)) + vst(i,r) ;
4012  voa(j,r)     = sum(fp, evfp(fp,j,r)) + sum(i, vdfp(i,j,r) + vmfp(i,j,r)) ;
4013  osep(j,r)    = voa(j,r) - vom(j,r) ;
4014   
4015  maks(i,i,r)  = voa(i,r) ;
4016  makb(i,i,r)  = vom(i,r) ;
4017  ptax(i,i,r)  = vom(i,r) - voa(i,r) ;
4018   
4019  execute_unload "ANX1/flt/ANX1Dat.gdx",
4020     vdfb, vdfp, vmfb, vmfp,
4021     vdpb, vdpp, vmpb, vmpp,
4022     vdgb, vdgp, vmgb, vmgp,
4023     vdib, vdip, vmib, vmip,
4024     evfb, evfp, evos,
4025     vxsb, vfob, vcif, vmsb,
4026     vst,  vtwr,
4027     save, vdep,
4028     vkb,  pop,
4029     maks, makb, ptax
4030  ;
4031   
4032  scalar emiCount / 0 / ;
4033   
4035     execute_load "ANX1/agg/ANX1Emiss.gdx",
4036        mdf, mmf, mdp, mmp, mdg, mmg, mdi, mmi ;
4037   
4038     emiCount = emiCount + 1 ;
4040   
4042     execute_load  "ANX1/agg/ANX1Vole.gdx",
4043        EDF, EMF, EDP, EMP, EDG, EMG, EDI, EMI, EXI ;
4044   
4045     emiCount = emiCount + 1 ;
4047   
4050   
4051        sets
4052           AR       "IPPC Reports"
4053           LU       "Land use categories"
4054           LUType   "Land use sub-categories"
4055        ;
4056        Parameter
4057           EMI_LU(GHG,LU,LUType,r)    "Land-use based emissions"
4058           GWP(GHG, r, ar)
4059        ;
4060   
GDXIN   F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\ANX1/agg/ANX1NCO2.gdx
--- LOAD  AR = 1:AR
--- LOAD  LU = 10:LU
--- LOAD  LUType = 11:LUType
4063   
4064        execute_loaddc  "ANX1/agg/ANX1NCO2.gdx",
4065           GWP, EMI_IO, EMI_IOP, EMI_ENDW, EMI_QO, EMI_HH, EMI_LU ;
4066   
4067        emiCount = emiCount + 1 ;
4068   
4071   
4072  if(emiCount ge 2,
BATINCLUDE F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\aggNRG.gms
4074  if(1,
4075     put csv ;
4076   
4077  *  Production
4078   
4079     loop((r,a),
4080        loop(i$(edf(i,a,r) + emf(i,a,r)),
4081           put "BEFORE", "NRG", r.tl, i.tl, a.tl, (edf(i,a,r) + emf(i,a,r)) / ;
4082        ) ;
4083        loop(i$(mdf(i,a,r) + mmf(i,a,r)),
4084           put "BEFORE", "CO2", r.tl, i.tl, a.tl, (mdf(i,a,r) + mmf(i,a,r)) / ;
4085        ) ;
4086        loop(i$(mdf(i,a,r) + mmf(i,a,r)),
4087           put "BEFORE", "CO2_CEQ", r.tl, i.tl, a.tl, (GWP("CO2",r,"AR5")*(mdf(i,a,r) + mmf(i,a,r))) / ;
4088        ) ;
4089   
4091           loop(em,
4092              loop(i$(EMI_IO(EM, i, a, r)),
4093                 put "BEFORE", em.tl, r.tl, i.tl, a.tl, (EMI_IO(EM, i, a, r)) / ;
4094              ) ;
4095              loop(i$(EMI_IOP(EM, i, a, r)),
4096                 csv.pc=2 ; put '"BEFORE","', em.tl:card(em.tl),'_PR"' ; csv.pc=5 ;
4097                 put r.tl, i.tl, a.tl, (EMI_IOP(EM, i, a, r)) / ;
4098              ) ;
4099              loop(fp$(EMI_ENDW(EM, fp, a, r)),
4100                 put "BEFORE", em.tl, r.tl, fp.tl, a.tl, (EMI_ENDW(EM, fp, a, r)) / ;
4101              ) ;
4102              put$(EMI_QO(EM, a, r)) "BEFORE", em.tl, r.tl, "qo", a.tl, (EMI_QO(EM, a, r)) / ;
4103           ) ;
4104   
4105  *        Output same in CO2eq
4106   
4107           loop(GHG,
4108              loop(i$(EMI_IO(GHG, i, a, r)),
4109                 csv.pc=2 ; put '"BEFORE","', GHG.tl:card(ghg.tl),'_CEQ"' ; csv.pc=5 ;
4110                 put r.tl, i.tl, a.tl, (GWP(GHG,r,"AR5")*EMI_IO(GHG, i, a, r)) / ;
4111              ) ;
4112              loop(i$(EMI_IOP(GHG, i, a, r)),
4113                 csv.pc=2 ; put '"BEFORE","', GHG.tl:card(ghg.tl),'_PR_CEQ"' ; csv.pc=5 ;
4114                 put r.tl, i.tl, a.tl, (GWP(GHG,r,"AR5")*EMI_IOP(GHG, i, a, r)) / ;
4115              ) ;
4116              loop(fp$(EMI_ENDW(GHG, fp, a, r)),
4117                 csv.pc=2 ; put '"BEFORE","', GHG.tl:card(ghg.tl),'_CEQ"' ; csv.pc=5 ;
4118                 put r.tl, fp.tl, a.tl, (GWP(GHG,r,"AR5")*EMI_ENDW(GHG, fp, a, r)) / ;
4119              ) ;
4120              csv.pc=2 ; put '"BEFORE","', GHG.tl:card(ghg.tl),'_CEQ"' ; csv.pc=5 ;
4121              put r.tl, "qo", a.tl, (GWP(GHG,r,"AR5")*EMI_QO(GHG, a, r)) / ;
4122           ) ;
4124     ) ;
4125   
4126  *  Final demand
4127   
4128     loop(r,
4129        loop(i$(edp(i,r) + emp(i,r)),
4130           put "BEFORE", "NRG", r.tl, i.tl, "PRIV", (edp(i,r) + emp(i,r)) / ;
4131        ) ;
4132        loop(i$(mdp(i,r) + mmp(i,r)),
4133           put "BEFORE", "CO2", r.tl, i.tl, "PRIV", (mdp(i,r) + mmp(i,r)) / ;
4134        ) ;
4135        loop(i$(mdp(i,r) + mmp(i,r)),
4136           put "BEFORE", "CO2_CEQ", r.tl, i.tl, "PRIV", (GWP("CO2",r,"AR5")*(mdp(i,r) + mmp(i,r))) / ;
4137        ) ;
4138   
4140           loop(em,
4141              loop(i$EMI_HH(em, i, r),
4142                 put "BEFORE", em.tl, r.tl, i.tl, "PRIV", (EMI_HH(em, i, r)) / ;
4143              ) ;
4144           ) ;
4145   
4146  *        Output same in CO2eq
4147   
4148           loop(ghg,
4149              loop(i$EMI_HH(GHG, i, r),
4150                 csv.pc=2 ; put '"BEFORE","', GHG.tl:card(ghg.tl),'_CEQ"' ; csv.pc=5 ;
4151                 put r.tl, i.tl, "PRIV", (GWP(GHG,r,"AR5")*EMI_HH(GHG, i, r)) / ;
4152              ) ;
4153           ) ;
4155   
4156        loop(i$(edg(i,r) + emg(i,r)),
4157           put "BEFORE", "NRG", r.tl, i.tl, "GOV", (edg(i,r) + emg(i,r)) / ;
4158        ) ;
4159        loop(i$(mdg(i,r) + mmg(i,r)),
4160           put "BEFORE", "CO2", r.tl, i.tl, "GOV", (mdg(i,r) + mmg(i,r)) / ;
4161        ) ;
4162        loop(i$(edi(i,r) + emi(i,r)),
4163           put "BEFORE", "NRG", r.tl, i.tl, "INV", (edi(i,r) + emi(i,r)) / ;
4164        ) ;
4165        loop(i$(mdi(i,r) + mmi(i,r)),
4166           put "BEFORE", "CO2", r.tl, i.tl, "INV", (mdi(i,r) + mmi(i,r)) / ;
4167        ) ;
4168   
4169     ) ;
4170   
4171  *  Exports
4172   
4173     if(ifAggTrade,
4174        loop((r,i)$(sum(rp, EXI(i,r,rp))),
4175           put "BEFORE", "NRG", r.tl, i.tl, "BOP",  (sum(rp, EXI(i,r,rp))) / ;
4176        ) ;
4177     else
4178        loop((r,i,rp)$(EXI(i,r,rp)),
4179           put "BEFORE", "NRG", r.tl, i.tl, rp.tl,  EXI(i,r,rp) / ;
4180        ) ;
4181     ) ;
4182  ) ;
4183  ) ;
4184   
4186   
4187  Parameters
4188     mdp0(i,r), mmp0(i,r), mdg0(i,r), mmg0(i,r), mdi0(i,r), mmi0(i,r), mdf0(i,a,r), mmf0(i,a,r) ;
4189     mdp0(i,r) = mdp(i,r) ;
4190     mmp0(i,r) = mmp(i,r) ;
4191     mdg0(i,r) = mdg(i,r) ;
4192     mmg0(i,r) = mmg(i,r) ;
4193     mdi0(i,r) = mdi(i,r) ;
4194     mmi0(i,r) = mmi(i,r) ;
4195     mdf0(i,a,r) = mdf(i,a,r) ;
4196     mmf0(i,a,r) = mmf(i,a,r) ;
4197   
4198  *
4199  * --- scale emissions commodity specific emissions to recover totals
4200  *
4201   
4202     if(1,
4203   
4204  *     Scale individual cells first
4205   
4206        mdp(i,r)$vdpb0(i,r) = (mdp0(i,r)/vdpb0(i,r))*vdpb(i,r) ;
4207        mmp(i,r)$vmpb0(i,r) = (mmp0(i,r)/vmpb0(i,r))*vmpb(i,r) ;
4208        mdg(i,r)$vdgb0(i,r) = (mdg0(i,r)/vdgb0(i,r))*vdgb(i,r) ;
4209        mmg(i,r)$vmgb0(i,r) = (mmg0(i,r)/vmgb0(i,r))*vmgb(i,r) ;
4210        mdi(i,r)$vdib0(i,r) = (mdi0(i,r)/vdib0(i,r))*vdib(i,r) ;
4211        mmi(i,r)$vmib0(i,r) = (mmi0(i,r)/vmib0(i,r))*vmib(i,r) ;
4212        mdf(i,j,r)$vdfb0(i,j,r) = (mdf0(i,j,r)/vdfb0(i,j,r))*vdfb(i,j,r) ;
4213        mmf(i,j,r)$vmfb0(i,j,r) = (mmf0(i,j,r)/vmfb0(i,j,r))*vmfb(i,j,r) ;
4214   
4215     ) ;
4216   
4217     if(1,
4218        total("old",r) = sum(i, mdp0(i,r)) ;
4219        total("new",r) = sum(i $ vdpb(i,r), mdp(i,r)) ;
4220        mdp(i,r) $ total("new",r) = (mdp(i,r) * total("old",r)/total("new",r)) $ vdpb(i,r);
4221   
4222        total("old",r) = sum(i, mmp0(i,r));
4223        total("new",r) = sum(i $ vmpb(i,r), mmp(i,r));
4224        mmp(i,r) $ total("new",r) = (mmp(i,r) * total("old",r)/total("new",r)) $ vmpb(i,r);
4225   
4226        total("old",r) = sum(i, mdg0(i,r));
4227        total("new",r) = sum(i $ vdgb(i,r), mdg(i,r));
4228        mdg(i,r) $ total("new",r) = (mdg(i,r) * total("old",r)/total("new",r)) $ vdgb(i,r);
4229   
4230        total("old",r) = sum(i, mmg0(i,r));
4231        total("new",r) = sum(i $ vmgb(i,r), mmg(i,r));
4232        mmg(i,r) $ total("new",r) = (mmg(i,r) * total("old",r)/total("new",r)) $ vmgb(i,r);
4233   
4234        total("old",r) = sum(i, mdi0(i,r));
4235        total("new",r) = sum(i $ vdib(i,r), mdi(i,r));
4236        mdi(i,r) $ total("new",r) = (mdi(i,r) * total("old",r)/total("new",r)) $ vdib(i,r);
4237   
4238        total("old",r) = sum(i, mmi0(i,r));
4239        total("new",r) = sum(i $ vmib(i,r), mmi(i,r));
4240        mmi(i,r) $ total("new",r) = (mmi(i,r) * total("old",r)/total("new",r)) $ vmib(i,r);
4241   
4242        total("old",r) = sum((i,a), mdf0(i,a,r));
4243        total("new",r) = sum((i,a) $ vdfb(i,a,r), mdf(i,a,r));
4244        mdf(i,a,r)$ total("new",r) = (mdf(i,a,r) * total("old",r)/total("new",r)) $ vdfb(i,a,r);
4245   
4246        total("old",r) = sum((i,a), mmf0(i,a,r));
4247        total("new",r) = sum((i,a) $ vmfb(i,a,r), mmf(i,a,r) );
4248        mmf(i,a,r) $ total("new",r) = (mmf(i,a,r) * total("old",r)/total("new",r)) $ vmfb(i,a,r);
4249     ) ;
4250   
4251     execute_unload "ANX1/flt/ANX1Emiss.gdx",
4252        mdf, mmf, mdp, mmp, mdg, mmg, mdi, mmi ;
4253   
4255   
4257   
4258  Parameters
4259     edp0(i,r), emp0(i,r), edg0(i,r), emg0(i,r), edi0(i,r), emi0(i,r), edf0(i,a,r), emf0(i,a,r), exi0(i,r,d) ;
4260     edp0(i,r) = edp(i,r) ;
4261     emp0(i,r) = emp(i,r) ;
4262     edg0(i,r) = edg(i,r) ;
4263     emg0(i,r) = emg(i,r) ;
4264     edi0(i,r) = edi(i,r) ;
4265     emi0(i,r) = emi(i,r) ;
4266     edf0(i,a,r) = edf(i,a,r) ;
4267     emf0(i,a,r) = emf(i,a,r) ;
4268     exi0(i,r,d) = exi(i,r,d) ;
4269   
4270     if(1,
4271   
4272  *     Scale individual cells first
4273   
4274        edp(i,r)$vdpb0(i,r) = (edp0(i,r)/vdpb0(i,r))*vdpb(i,r) ;
4275        emp(i,r)$vmpb0(i,r) = (emp0(i,r)/vmpb0(i,r))*vmpb(i,r) ;
4276        edg(i,r)$vdgb0(i,r) = (edg0(i,r)/vdgb0(i,r))*vdgb(i,r) ;
4277        emg(i,r)$vmgb0(i,r) = (emg0(i,r)/vmgb0(i,r))*vmgb(i,r) ;
4278        edi(i,r)$vdib0(i,r) = (edi0(i,r)/vdib0(i,r))*vdib(i,r) ;
4279        emi(i,r)$vmib0(i,r) = (emi0(i,r)/vmib0(i,r))*vmib(i,r) ;
4280        edf(i,j,r)$vdfb0(i,j,r) = (edf0(i,j,r)/vdfb0(i,j,r))*vdfb(i,j,r) ;
4281        emf(i,j,r)$vmfb0(i,j,r) = (emf0(i,j,r)/vmfb0(i,j,r))*vmfb(i,j,r) ;
4282        exi(i,r,d)$vfob0(i,r,d) = (exi0(i,r,d)/vfob0(i,r,d))*vfob(i,r,d) ;
4283     ) ;
4284   
4285  *
4286  * --- scale energy volumes to recover totals
4287  *
4288     total("old",r) = sum(i, edp0(i,r)) ;
4289     total("new",r) = sum(i $ vdpb(i,r), edp(i,r)) ;
4290     edp(i,r) $ total("new",r) = (edp(i,r) * total("old",r)/total("new",r)) $ vdpb(i,r);
4291   
4292     total("old",r) = sum(i, emp0(i,r));
4293     total("new",r) = sum(i $ vmpb(i,r), emp(i,r));
4294     emp(i,r) $ total("new",r) = (emp(i,r) * total("old",r)/total("new",r)) $ vmpb(i,r);
4295   
4296     total("old",r) = sum(i, edg0(i,r));
4297     total("new",r) = sum(i $ vdgb(i,r), edg(i,r));
4298     edg(i,r) $ total("new",r) = (edg(i,r) * total("old",r)/total("new",r)) $ vdgb(i,r);
4299   
4300     total("old",r) = sum(i, emg0(i,r));
4301     total("new",r) = sum(i $ vmgb(i,r), emg(i,r));
4302     emg(i,r) $ total("new",r) = (emg(i,r) *total("old",r)/total("new",r)) $ vmgb(i,r);
4303   
4304     total("old",r) = sum(i, edi0(i,r));
4305     total("new",r) = sum(i $ vdib(i,r), edi(i,r));
4306     edi(i,r) $ total("new",r) = (edi(i,r) * total("old",r)/total("new",r)) $ vdib(i,r);
4307   
4308     total("old",r) = sum(i, emi0(i,r));
4309     total("new",r) = sum(i $ vmib(i,r), emi(i,r));
4310     emi(i,r) $ total("new",r) = (emi(i,r) *total("old",r)/total("new",r)) $ vmib(i,r);
4311   
4312     total("old",r) = sum((i,a), edf0(i,a,r));
4313     total("new",r) = sum((i,a) $ vdfb(i,a,r), edf(i,a,r));
4314     edf(i,a,r)$ total("new",r) = (edf(i,a,r) * total("old",r)/total("new",r)) $ vdfb(i,a,r);
4315   
4316     total("old",r) = sum((i,a), emf0(i,a,r));
4317     total("new",r) = sum((i,a) $ vmfb(i,a,r), emf(i,a,r));
4318     emf(i,a,r) $ total("new",r) = (emf(i,a,r) * total("old",r)/total("new",r)) $ vmfb(i,a,r);
4319   
4320     loop(i,
4321        total("old",r) = sum(rp, exi0(i,r,rp));
4322        total("new",r) = sum(rp $ vfob(i,r,rp), exi(i,r,rp));
4323        exi(i,r,rp) $ total("new",r) = (exi(i,r,rp) * total("old",r)/total("new",r)) $ vfob(i,r,rp) ;
4324     ) ;
4325   
4326     execute_unload "ANX1/flt/ANX1Vole.gdx",
4327        EDF, EMF, EDP, EMP, EDG, EMG, EDI, EMI, EXI ;
4328   
4330   
4333   
4334  *     Save original emissions data for scaling purposes
4335   
4336        Parameters
4337           EMI_HH0(em,i,r), EMI_IO0(em,i,a,r), EMI_IOP0(em,i,a,r)
4338              EMI_ENDW0(em,fp,a,r), EMI_QO0(em,j,r) ;
4339   
4340        EMI_HH0(em,i,r)           = EMI_HH(em,i,r) ;
4341        EMI_IO0(em,i,a,r)         = EMI_IO(em,i,a,r) ;
4342        EMI_IOP0(em,i,a,r)        = EMI_IOP(em,i,a,r) ;
4343        EMI_ENDW0(em,fp,j,r)      = EMI_ENDW(em,fp,j,r) ;
4344        EMI_QO0(em,j,r)           = EMI_QO(em,j,r) ;
4345   
4346        if(1,
4347  *        Scale individual cells first
4348   
4349           EMI_HH(em,i,r)$(vdpb0(i,r) + vmpb0(i,r))
4350              = (EMI_HH0(em,i,r)/(vdpb0(i,r) + vmpb0(i,r)))*(vdpb(i,r) + vmpb(i,r)) ;
4351   
4352           EMI_IO(em,i,j,r)$(vdfb0(i,j,r) + vmfb0(i,j,r))
4353              = (EMI_IO0(em,i,j,r)/(vdfb0(i,j,r) + vmfb0(i,j,r)))*(vdfb(i,j,r) + vmfb(i,j,r)) ;
4354   
4355           EMI_IOP(em,i,j,r)$(vdfb0(i,j,r) + vmfb0(i,j,r))
4356              = (EMI_IOP0(em,i,j,r)/(vdfb0(i,j,r) + vmfb0(i,j,r)))*(vdfb(i,j,r) + vmfb(i,j,r)) ;
4357   
4358           EMI_ENDW(em,fp,j,r)$(evfb0(fp,j,r))
4359              = (EMI_ENDW0(em,fp,j,r)/evfb0(fp,j,r))*evfb(fp,j,r) ;
4360   
4361           EMI_QO(em,j,r)$(vom0(j,r))
4362              = (EMI_QO0(em,j,r)/vom0(j,r))*vom(j,r) ;
4363        ) ;
4364   
4365  *
4366  * --- scale emission levels to recover totals
4367   
4368        loop(em,
4369   
4370  *        Households
4371   
4372           total("old",r) = sum(i, EMI_HH0(em,i,r)) ;
4373           total("new",r) = sum(i $ (vdpb(i,r) + vmpb(i,r)), EMI_HH(em,i,r)) ;
4374           EMI_HH(em,i,r) $ total("new",r)
4375              = (EMI_HH(em,i,r) * total("old",r)/total("new",r)) $ (vdpb(i,r) + vmpb(i,r)) ;
4376   
4377  *        Firms
4378   
4379           total("old",r) = sum((i,a), EMI_IO0(em,i,a,r));
4380           total("new",r) = sum((i,a) $ (vdfb(i,a,r) + vmfb(i,a,r)), EMI_IO(em,i,a,r));
4381           EMI_IO(em,i,a,r)$ total("new",r)
4382              = (EMI_IO(em,i,a,r) * total("old",r)/total("new",r)) $ (vdfb(i,a,r) + vmfb(i,a,r)) ;
4383   
4384           total("old",r) = sum((i,a), EMI_IOP0(em,i,a,r));
4385           total("new",r) = sum((i,a) $ (vdfb(i,a,r) + vmfb(i,a,r)), EMI_IOP(em,i,a,r));
4386           EMI_IOP(em,i,a,r)$ total("new",r)
4387              = (EMI_IOP(em,i,a,r) * total("old",r)/total("new",r)) $ (vdfb(i,a,r) + vmfb(i,a,r)) ;
4388   
4389  *        Endowments
4390   
4391           total("old",r) = sum((fp,a), EMI_ENDW0(em,fp,a,r));
4392           total("new",r) = sum((fp,a) $ (evfb(fp,a,r)), EMI_ENDW(em,fp,a,r));
4393           EMI_ENDW(em,fp,a,r)$ total("new",r) = (EMI_ENDW(em,fp,a,r) * total("old",r)/total("new",r)) $ (evfb(fp,a,r)) ;
4394   
4395  *        Output
4396   
4397           total("old",r) = sum(j, EMI_QO0(em,j,r)) ;
4398           total("new",r) = sum(j $ vom(j,r), EMI_QO(em,j,r)) ;
4399           EMI_QO(em,j,r) $ total("new",r) = (EMI_QO(em,j,r) * total("old",r)/total("new",r)) $ vom(j,r) ;
4400   
4401        ) ;
4402   
4403        execute_unload "ANX1/flt/ANX1NCO2.gdx",
4404           ar, i=comm, fp=endw, a=acts, r=reg, em, emn, ghg, nghg, lu, luType,
4405           GWP, emi_IO, emi_IOP, emi_ENDW, emi_QO, emi_HH, emi_LU ;
4406   
4408   
4410   
4411  *  Re-scale labor volumes
4412   
4414   
4415     Parameters
4416        q(l,a,r)       "Initial labor volumes"
4417        wage(l,a,r)    "Initial wage"
4418        q0(l,a,r)      "Adjusted labor volume"
4419        wage0(l,a,r)   "Adusted wage"
4420     ;
4421   
4422     execute_load "ANX1/agg/ANX1Wages.gdx",
4423        q, wage ;
4424   
4425     q0(l,a,r)    = q(l,a,r) ;
4426     wage0(l,a,r) = wage(l,a,r) ;
4427   
4428  *
4429  * --- scale labor volume--keeping wage the same
4430  *
4431   
4432     if(1,
4433   
4434        q(l,a,r)$wage(l,a,r) = evfb(l,a,r)/wage(l,a,r) ;
4435   
4436     ) ;
4437   
4438     execute_unload "ANX1/flt/ANX1Wages.gdx",
4439        q, wage ;
4440   
4442   
4443  *  Re-scale MRIO matrices
4444   
4446   
4447  if(0, execute_unload "filter.gdx" ; ) ;
---- Begin of Active File List
Level Type         Line  Filename
---------------------------------
    1 INCLUDE      1595  F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter/filter.gms
    0 INPUT         128  F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter.gms
---- End of Active File List

---- Begin of Compile-time Variable List
Level SetVal                          Type       Text
-----------------------------------------------------
    1 maxiter                         SCOPED     15
    0 BaseName                        SCOPED     ANX1
*   0 ifCSV                           SCOPED     1
    0 ifAggTrade                      SCOPED     1
*   0 Macro                           SCOPED     OFF
    0 PGMName                         GLOBAL     FILTER
    0 excCombined                     GLOBAL     0
    0 excSecs                         GLOBAL     sol, wnd, xel
    0 excRegs                         GLOBAL     
    0 DIAG                            GLOBAL     ON
    0 DYN                             GLOBAL     ON
    0 MACRO                           GLOBAL     ON
    0 ifPower                         GLOBAL     ON
    0 ifBKSTOP                        GLOBAL     OFF
    0 ifWater                         GLOBAL     OFF
    0 NCO2                            GLOBAL     ON
    0 ELAST                           GLOBAL     OFF
    0 LAB                             GLOBAL     ON
    0 BoP                             GLOBAL     ON
    0 LU                              GLOBAL     OFF
    0 SAVEMAP                         GLOBAL     TXT
    0 ifMRIO                          GLOBAL     OFF
    0 ifR_D                           GLOBAL     ON
    0 DEPL                            GLOBAL     ON
    0 ifGENDER                        GLOBAL     OFF
    0 OVRRIDEGTAPARM                  GLOBAL     1
    0 OVRRIDEGTAPINC                  GLOBAL     1
    0 gtpDir                          GLOBAL     ../GTAP10POW
    0 GTAPBASE                        GLOBAL     GSDF
    0 SSPFile                         GLOBAL     ../SatAcct/sspScenV9_2.gdx
    0 DEPLFile                        GLOBAL     ../SatAcct/RystadGTAP2014.gdx
    0 giddLab                         GLOBAL     ../SatAcct/giddLab.gdx
    0 giddProj                        GLOBAL     ../SatAcct/giddProj.gdx
    0 EnvElast                        GLOBAL     ../SatAcct/EnvLinkElast10APOW.gdx
---- End of Compile-time Variable List

---- Begin of Macro List
$macro IFLABOR  noLab
$macro chkTol2(var,d1,d2)  var(d1,d2)$(abs(var(d1,d2)) lt absTol) = 0
$macro chkTol3(var,d1,d2,d3)  var(d1,d2,d3)$(abs(var(d1,d2,d3)) lt absTol) = 0
$macro chkTol4(var,d1,d2,d3,d4)  var(d1,d2,d3,d4)$(abs(var(d1,d2,d3,d4)) lt absTol) = 0
---- End of Macro List
4449   
4450  if(emiCount eq 3,
BATINCLUDE F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\aggNRG.gms
4452  if(1,
4453     put csv ;
4454   
4455  *  Production
4456   
4457     loop((r,a),
4458        loop(i$(edf(i,a,r) + emf(i,a,r)),
4459           put "AFTER", "NRG", r.tl, i.tl, a.tl, (edf(i,a,r) + emf(i,a,r)) / ;
4460        ) ;
4461        loop(i$(mdf(i,a,r) + mmf(i,a,r)),
4462           put "AFTER", "CO2", r.tl, i.tl, a.tl, (mdf(i,a,r) + mmf(i,a,r)) / ;
4463        ) ;
4464        loop(i$(mdf(i,a,r) + mmf(i,a,r)),
4465           put "AFTER", "CO2_CEQ", r.tl, i.tl, a.tl, (GWP("CO2",r,"AR5")*(mdf(i,a,r) + mmf(i,a,r))) / ;
4466        ) ;
4467   
4469           loop(em,
4470              loop(i$(EMI_IO(EM, i, a, r)),
4471                 put "AFTER", em.tl, r.tl, i.tl, a.tl, (EMI_IO(EM, i, a, r)) / ;
4472              ) ;
4473              loop(i$(EMI_IOP(EM, i, a, r)),
4474                 csv.pc=2 ; put '"AFTER","', em.tl:card(em.tl),'_PR"' ; csv.pc=5 ;
4475                 put r.tl, i.tl, a.tl, (EMI_IOP(EM, i, a, r)) / ;
4476              ) ;
4477              loop(fp$(EMI_ENDW(EM, fp, a, r)),
4478                 put "AFTER", em.tl, r.tl, fp.tl, a.tl, (EMI_ENDW(EM, fp, a, r)) / ;
4479              ) ;
4480              put$(EMI_QO(EM, a, r)) "AFTER", em.tl, r.tl, "qo", a.tl, (EMI_QO(EM, a, r)) / ;
4481           ) ;
4482   
4483  *        Output same in CO2eq
4484   
4485           loop(GHG,
4486              loop(i$(EMI_IO(GHG, i, a, r)),
4487                 csv.pc=2 ; put '"AFTER","', GHG.tl:card(ghg.tl),'_CEQ"' ; csv.pc=5 ;
4488                 put r.tl, i.tl, a.tl, (GWP(GHG,r,"AR5")*EMI_IO(GHG, i, a, r)) / ;
4489              ) ;
4490              loop(i$(EMI_IOP(GHG, i, a, r)),
4491                 csv.pc=2 ; put '"AFTER","', GHG.tl:card(ghg.tl),'_PR_CEQ"' ; csv.pc=5 ;
4492                 put r.tl, i.tl, a.tl, (GWP(GHG,r,"AR5")*EMI_IOP(GHG, i, a, r)) / ;
4493              ) ;
4494              loop(fp$(EMI_ENDW(GHG, fp, a, r)),
4495                 csv.pc=2 ; put '"AFTER","', GHG.tl:card(ghg.tl),'_CEQ"' ; csv.pc=5 ;
4496                 put r.tl, fp.tl, a.tl, (GWP(GHG,r,"AR5")*EMI_ENDW(GHG, fp, a, r)) / ;
4497              ) ;
4498              csv.pc=2 ; put '"AFTER","', GHG.tl:card(ghg.tl),'_CEQ"' ; csv.pc=5 ;
4499              put r.tl, "qo", a.tl, (GWP(GHG,r,"AR5")*EMI_QO(GHG, a, r)) / ;
4500           ) ;
4502     ) ;
4503   
4504  *  Final demand
4505   
4506     loop(r,
4507        loop(i$(edp(i,r) + emp(i,r)),
4508           put "AFTER", "NRG", r.tl, i.tl, "PRIV", (edp(i,r) + emp(i,r)) / ;
4509        ) ;
4510        loop(i$(mdp(i,r) + mmp(i,r)),
4511           put "AFTER", "CO2", r.tl, i.tl, "PRIV", (mdp(i,r) + mmp(i,r)) / ;
4512        ) ;
4513        loop(i$(mdp(i,r) + mmp(i,r)),
4514           put "AFTER", "CO2_CEQ", r.tl, i.tl, "PRIV", (GWP("CO2",r,"AR5")*(mdp(i,r) + mmp(i,r))) / ;
4515        ) ;
4516   
4518           loop(em,
4519              loop(i$EMI_HH(em, i, r),
4520                 put "AFTER", em.tl, r.tl, i.tl, "PRIV", (EMI_HH(em, i, r)) / ;
4521              ) ;
4522           ) ;
4523   
4524  *        Output same in CO2eq
4525   
4526           loop(ghg,
4527              loop(i$EMI_HH(GHG, i, r),
4528                 csv.pc=2 ; put '"AFTER","', GHG.tl:card(ghg.tl),'_CEQ"' ; csv.pc=5 ;
4529                 put r.tl, i.tl, "PRIV", (GWP(GHG,r,"AR5")*EMI_HH(GHG, i, r)) / ;
4530              ) ;
4531           ) ;
4533   
4534        loop(i$(edg(i,r) + emg(i,r)),
4535           put "AFTER", "NRG", r.tl, i.tl, "GOV", (edg(i,r) + emg(i,r)) / ;
4536        ) ;
4537        loop(i$(mdg(i,r) + mmg(i,r)),
4538           put "AFTER", "CO2", r.tl, i.tl, "GOV", (mdg(i,r) + mmg(i,r)) / ;
4539        ) ;
4540        loop(i$(edi(i,r) + emi(i,r)),
4541           put "AFTER", "NRG", r.tl, i.tl, "INV", (edi(i,r) + emi(i,r)) / ;
4542        ) ;
4543        loop(i$(mdi(i,r) + mmi(i,r)),
4544           put "AFTER", "CO2", r.tl, i.tl, "INV", (mdi(i,r) + mmi(i,r)) / ;
4545        ) ;
4546   
4547     ) ;
4548   
4549  *  Exports
4550   
4551     if(ifAggTrade,
4552        loop((r,i)$(sum(rp, EXI(i,r,rp))),
4553           put "AFTER", "NRG", r.tl, i.tl, "BOP",  (sum(rp, EXI(i,r,rp))) / ;
4554        ) ;
4555     else
4556        loop((r,i,rp)$(EXI(i,r,rp)),
4557           put "AFTER", "NRG", r.tl, i.tl, rp.tl,  EXI(i,r,rp) / ;
4558        ) ;
4559     ) ;
4560  ) ;
4561  ) ;
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter.gms
     2       25 INCLUDE        1      25  .F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\ANX1Flt.gms
     3       59 INCLUDE        1      37  .F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\ANX1Map.gms
     4       91 INCLUDE        3      32  ..F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\GTAPSets10APOWF.gms
     5     2147 INCLUDE        1     128  .F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter/filter.gms
     6     2230 BATINCLUDE     5      83  ..F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\aggsam.gms
     7     2729 BATINCLUDE     5     460  ..F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter/itrlog.gms
     8     2769 BATINCLUDE     5     461  ..F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter/itrlog.gms
     9     2839 INCLUDE        5     467  ..F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter/remTinyValues.gms
    10     2899 BATINCLUDE     5     469  ..F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter/itrlog.gms
    11     3053 BATINCLUDE     5     575  ..F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter/itrlog.gms
    12     3333 BATINCLUDE     5     791  ..F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter/itrlog.gms
    13     3427 BATINCLUDE     5     846  ..F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter/title.gms
    14     3509 BATINCLUDE     5     906  ..F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter/itrlog.gms
    15     3596 BATINCLUDE     5     941  ..F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter/itrlog.gms
    16     3884 BATINCLUDE     5    1165  ..F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\aggsam.gms
    17     4034 IF EXIST       5    1193  .F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\ANX1/agg/ANX1Emiss.gdx
    18     4041 IF EXIST       5    1200  .F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\ANX1/agg/ANX1Vole.gdx
    19     4049 IF EXIST       5    1208  .F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\ANX1/agg/ANX1NCO2.gdx
    20     4061 GDXIN          5    1220  .F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\ANX1/agg/ANX1NCO2.gdx
    21     4073 BATINCLUDE     5    1236  ..F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\aggNRG.gms
    22     4185 IF EXIST       5    1239  .F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\ANX1/agg/ANX1Emiss.gdx
    23     4256 IF EXIST       5    1310  .F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\ANX1/agg/ANX1Vole.gdx
    24     4332 IF EXIST       5    1386  .F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\ANX1/agg/ANX1NCO2.gdx
    25     4413 IF EXIST       5    1467  .F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\ANX1\agg\ANX1Wages.gdx
    26     4445 IF EXIST       5    1499  .F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\ANX1\agg\ANX1MRIO.gdx
    27     4451 BATINCLUDE     5    1598  ..F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\aggNRG.gms


COMPILATION TIME     =        0.094 SECONDS      3 MB  36.1.0 r2c0a44a WEX-WEI
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE lpfeas Using LP From line 3460


LOOPS                                  itr   itr1
                                       rrr   CHN


MODEL STATISTICS

BLOCKS OF EQUATIONS          14     SINGLE EQUATIONS          152
BLOCKS OF VARIABLES          12     SINGLE VARIABLES          823
NON ZERO ELEMENTS         3,421


GENERATION TIME      =        0.015 SECONDS      7 MB  36.1.0 r2c0a44a WEX-WEI
               L O O P S                itr itr1
                                        rrr CHN

GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE lpfeas Using LP From line 3460


               S O L V E      S U M M A R Y

     MODEL   lpfeas              OBJECTIVE  vz
     TYPE    LP                  DIRECTION  MINIMIZE
     SOLVER  CONOPT              FROM LINE  3460

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      1 Optimal
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.047       120.000
 ITERATION COUNT, LIMIT         5    2147483647

Reading parameter(s) from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"
>>  * -------------------------------------------------
>>  *   General Option file for CONOPT3
>>  * -------------------------------------------------
>>  * Maximum and minimum jacobian element
>>  rtmaxj = 1.00e+30
>>  rtmaxv = 1.00e+30
>>  * iteration log frequency
>>  lfilos =  1
>>  lfilog =  1
>>  lsismp = t
>>  lspost = false
>>  rtpiva = 1.E-15
>>  *rtnwmi = 4.E-11
>>  *rtnwma = 5.E-7
>>  Lmmxsf = 1
Finished reading from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"

 
 
    C O N O P T 3   version 3.17K
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
 ** Warning **  The value of LFITER is out of range.
                LFITER is decreased from 2147483647 to 1000000000.
 
                   Pre-triangular equations:   0
                   Post-triangular equations:  0
 
 
 ** Optimal solution. Reduced gradient less than tolerance.
 
 
 CONOPT time Total                            0.031 seconds
   of which: Function evaluations             0.000 =  0.0%
             1st Derivative evaluations       0.000 =  0.0%
 


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


**** EXECERROR AT LINE 3461 CLEARED (EXECERROR=0)
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE calib Using NLP From line 3474


LOOPS                                  itr   itr1
                                       rrr   CHN


MODEL STATISTICS

BLOCKS OF EQUATIONS          15     SINGLE EQUATIONS          153
BLOCKS OF VARIABLES          13     SINGLE VARIABLES          824
NON ZERO ELEMENTS         4,103     NON LINEAR N-Z            680
CODE LENGTH               3,391     CONSTANT POOL           1,353


GENERATION TIME      =        0.032 SECONDS      7 MB  36.1.0 r2c0a44a WEX-WEI
               L O O P S                itr itr1
                                        rrr CHN

GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 7
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE calib Using NLP From line 3474


               S O L V E      S U M M A R Y

     MODEL   calib               OBJECTIVE  obj
     TYPE    NLP                 DIRECTION  MINIMIZE
     SOLVER  CONOPT              FROM LINE  3474

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      2 Locally Optimal
**** OBJECTIVE VALUE                0.0003

 RESOURCE USAGE, LIMIT          0.078       120.000
 ITERATION COUNT, LIMIT        14    2147483647
 EVALUATION ERRORS              0          1000

Reading parameter(s) from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"
>>  * -------------------------------------------------
>>  *   General Option file for CONOPT3
>>  * -------------------------------------------------
>>  * Maximum and minimum jacobian element
>>  rtmaxj = 1.00e+30
>>  rtmaxv = 1.00e+30
>>  * iteration log frequency
>>  lfilos =  1
>>  lfilog =  1
>>  lsismp = t
>>  lspost = false
>>  rtpiva = 1.E-15
>>  *rtnwmi = 4.E-11
>>  *rtnwma = 5.E-7
>>  Lmmxsf = 1
Finished reading from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"

 
 
    C O N O P T 3   version 3.17K
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
    The model has 824 variables and 153 constraints
    with 4103 Jacobian elements, 680 of which are nonlinear.
    The Hessian of the Lagrangian has 680 elements on the diagonal,
    0 elements below the diagonal, and 680 nonlinear variables.
 
 ** Warning **  The value of LFITER is out of range.
                LFITER is decreased from 2147483647 to 1000000000.
 
                   Pre-triangular equations:   0
                   Post-triangular equations:  0
 
 
 ** Optimal solution. Reduced gradient less than tolerance.
 
 
 CONOPT time Total                            0.046 seconds
   of which: Function evaluations             0.000 =  0.0%
             1st Derivative evaluations       0.000 =  0.0%
             2nd Derivative evaluations       0.000 =  0.0%
             Directional 2nd Derivative       0.000 =  0.0%
 


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 8
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE lpfeas Using LP From line 3460


LOOPS                                  itr   itr1
                                       rrr   XEA


MODEL STATISTICS

BLOCKS OF EQUATIONS          14     SINGLE EQUATIONS          152
BLOCKS OF VARIABLES          12     SINGLE VARIABLES          831
NON ZERO ELEMENTS         3,428


GENERATION TIME      =        0.016 SECONDS      7 MB  36.1.0 r2c0a44a WEX-WEI
               L O O P S                itr itr1
                                        rrr XEA

GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 9
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE lpfeas Using LP From line 3460


               S O L V E      S U M M A R Y

     MODEL   lpfeas              OBJECTIVE  vz
     TYPE    LP                  DIRECTION  MINIMIZE
     SOLVER  CONOPT              FROM LINE  3460

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      1 Optimal
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.062       120.000
 ITERATION COUNT, LIMIT         7    2147483647

Reading parameter(s) from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"
>>  * -------------------------------------------------
>>  *   General Option file for CONOPT3
>>  * -------------------------------------------------
>>  * Maximum and minimum jacobian element
>>  rtmaxj = 1.00e+30
>>  rtmaxv = 1.00e+30
>>  * iteration log frequency
>>  lfilos =  1
>>  lfilog =  1
>>  lsismp = t
>>  lspost = false
>>  rtpiva = 1.E-15
>>  *rtnwmi = 4.E-11
>>  *rtnwma = 5.E-7
>>  Lmmxsf = 1
Finished reading from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"

 
 
    C O N O P T 3   version 3.17K
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
 ** Warning **  The value of LFITER is out of range.
                LFITER is decreased from 2147483647 to 1000000000.
 
                   Pre-triangular equations:   0
                   Post-triangular equations:  0
 
 
 ** Optimal solution. Reduced gradient less than tolerance.
 
 
 CONOPT time Total                            0.031 seconds
   of which: Function evaluations             0.000 =  0.0%
             1st Derivative evaluations       0.000 =  0.0%
 


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 10
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


**** EXECERROR AT LINE 3461 CLEARED (EXECERROR=0)
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 11
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE calib Using NLP From line 3474


LOOPS                                  itr   itr1
                                       rrr   XEA


MODEL STATISTICS

BLOCKS OF EQUATIONS          15     SINGLE EQUATIONS          153
BLOCKS OF VARIABLES          13     SINGLE VARIABLES          832
NON ZERO ELEMENTS         4,143     NON LINEAR N-Z            713
CODE LENGTH               3,556     CONSTANT POOL           1,419


GENERATION TIME      =        0.015 SECONDS      7 MB  36.1.0 r2c0a44a WEX-WEI
               L O O P S                itr itr1
                                        rrr XEA

GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 12
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE calib Using NLP From line 3474


               S O L V E      S U M M A R Y

     MODEL   calib               OBJECTIVE  obj
     TYPE    NLP                 DIRECTION  MINIMIZE
     SOLVER  CONOPT              FROM LINE  3474

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      2 Locally Optimal
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.078       120.000
 ITERATION COUNT, LIMIT        13    2147483647
 EVALUATION ERRORS              0          1000

Reading parameter(s) from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"
>>  * -------------------------------------------------
>>  *   General Option file for CONOPT3
>>  * -------------------------------------------------
>>  * Maximum and minimum jacobian element
>>  rtmaxj = 1.00e+30
>>  rtmaxv = 1.00e+30
>>  * iteration log frequency
>>  lfilos =  1
>>  lfilog =  1
>>  lsismp = t
>>  lspost = false
>>  rtpiva = 1.E-15
>>  *rtnwmi = 4.E-11
>>  *rtnwma = 5.E-7
>>  Lmmxsf = 1
Finished reading from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"

 
 
    C O N O P T 3   version 3.17K
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
    The model has 832 variables and 153 constraints
    with 4143 Jacobian elements, 713 of which are nonlinear.
    The Hessian of the Lagrangian has 713 elements on the diagonal,
    0 elements below the diagonal, and 713 nonlinear variables.
 
 ** Warning **  The value of LFITER is out of range.
                LFITER is decreased from 2147483647 to 1000000000.
 
                   Pre-triangular equations:   0
                   Post-triangular equations:  0
 
 
 ** Optimal solution. Reduced gradient less than tolerance.
 
 
 CONOPT time Total                            0.047 seconds
   of which: Function evaluations             0.000 =  0.0%
             1st Derivative evaluations       0.000 =  0.0%
             2nd Derivative evaluations       0.000 =  0.0%
             Directional 2nd Derivative       0.000 =  0.0%
 


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 13
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE lpfeas Using LP From line 3460


LOOPS                                  itr   itr1
                                       rrr   USA


MODEL STATISTICS

BLOCKS OF EQUATIONS          14     SINGLE EQUATIONS          152
BLOCKS OF VARIABLES          12     SINGLE VARIABLES          821
NON ZERO ELEMENTS         3,405


GENERATION TIME      =        0.000 SECONDS      7 MB  36.1.0 r2c0a44a WEX-WEI
               L O O P S                itr itr1
                                        rrr USA

GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 14
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE lpfeas Using LP From line 3460


               S O L V E      S U M M A R Y

     MODEL   lpfeas              OBJECTIVE  vz
     TYPE    LP                  DIRECTION  MINIMIZE
     SOLVER  CONOPT              FROM LINE  3460

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      1 Optimal
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.047       120.000
 ITERATION COUNT, LIMIT         7    2147483647

Reading parameter(s) from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"
>>  * -------------------------------------------------
>>  *   General Option file for CONOPT3
>>  * -------------------------------------------------
>>  * Maximum and minimum jacobian element
>>  rtmaxj = 1.00e+30
>>  rtmaxv = 1.00e+30
>>  * iteration log frequency
>>  lfilos =  1
>>  lfilog =  1
>>  lsismp = t
>>  lspost = false
>>  rtpiva = 1.E-15
>>  *rtnwmi = 4.E-11
>>  *rtnwma = 5.E-7
>>  Lmmxsf = 1
Finished reading from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"

 
 
    C O N O P T 3   version 3.17K
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
 ** Warning **  The value of LFITER is out of range.
                LFITER is decreased from 2147483647 to 1000000000.
 
                   Pre-triangular equations:   0
                   Post-triangular equations:  0
 
 
 ** Optimal solution. Reduced gradient less than tolerance.
 
 
 CONOPT time Total                            0.031 seconds
   of which: Function evaluations             0.000 =  0.0%
             1st Derivative evaluations       0.000 =  0.0%
 


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             1  PROJECTED
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 15
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


**** EXECERROR AT LINE 3461 CLEARED (EXECERROR=0)
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 16
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE calib Using NLP From line 3474


LOOPS                                  itr   itr1
                                       rrr   USA


MODEL STATISTICS

BLOCKS OF EQUATIONS          15     SINGLE EQUATIONS          153
BLOCKS OF VARIABLES          13     SINGLE VARIABLES          822
NON ZERO ELEMENTS         4,093     NON LINEAR N-Z            686
CODE LENGTH               3,421     CONSTANT POOL           1,365


GENERATION TIME      =        0.031 SECONDS      7 MB  36.1.0 r2c0a44a WEX-WEI
               L O O P S                itr itr1
                                        rrr USA

GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 17
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE calib Using NLP From line 3474


               S O L V E      S U M M A R Y

     MODEL   calib               OBJECTIVE  obj
     TYPE    NLP                 DIRECTION  MINIMIZE
     SOLVER  CONOPT              FROM LINE  3474

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      2 Locally Optimal
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.078       120.000
 ITERATION COUNT, LIMIT        14    2147483647
 EVALUATION ERRORS              0          1000

Reading parameter(s) from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"
>>  * -------------------------------------------------
>>  *   General Option file for CONOPT3
>>  * -------------------------------------------------
>>  * Maximum and minimum jacobian element
>>  rtmaxj = 1.00e+30
>>  rtmaxv = 1.00e+30
>>  * iteration log frequency
>>  lfilos =  1
>>  lfilog =  1
>>  lsismp = t
>>  lspost = false
>>  rtpiva = 1.E-15
>>  *rtnwmi = 4.E-11
>>  *rtnwma = 5.E-7
>>  Lmmxsf = 1
Finished reading from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"

 
 
    C O N O P T 3   version 3.17K
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
    The model has 822 variables and 153 constraints
    with 4093 Jacobian elements, 686 of which are nonlinear.
    The Hessian of the Lagrangian has 686 elements on the diagonal,
    0 elements below the diagonal, and 686 nonlinear variables.
 
 ** Warning **  The value of LFITER is out of range.
                LFITER is decreased from 2147483647 to 1000000000.
 
                   Pre-triangular equations:   0
                   Post-triangular equations:  0
 
 
 ** Optimal solution. Reduced gradient less than tolerance.
 
 
 CONOPT time Total                            0.063 seconds
   of which: Function evaluations             0.016 = 25.4%
             1st Derivative evaluations       0.000 =  0.0%
             2nd Derivative evaluations       0.000 =  0.0%
             Directional 2nd Derivative       0.000 =  0.0%
 


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 18
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE lpfeas Using LP From line 3460


LOOPS                                  itr   itr1
                                       rrr   RUS


MODEL STATISTICS

BLOCKS OF EQUATIONS          14     SINGLE EQUATIONS          152
BLOCKS OF VARIABLES          12     SINGLE VARIABLES          819
NON ZERO ELEMENTS         3,367


GENERATION TIME      =        0.015 SECONDS      7 MB  36.1.0 r2c0a44a WEX-WEI
               L O O P S                itr itr1
                                        rrr RUS

GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 19
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE lpfeas Using LP From line 3460


               S O L V E      S U M M A R Y

     MODEL   lpfeas              OBJECTIVE  vz
     TYPE    LP                  DIRECTION  MINIMIZE
     SOLVER  CONOPT              FROM LINE  3460

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      1 Optimal
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.078       120.000
 ITERATION COUNT, LIMIT         5    2147483647

Reading parameter(s) from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"
>>  * -------------------------------------------------
>>  *   General Option file for CONOPT3
>>  * -------------------------------------------------
>>  * Maximum and minimum jacobian element
>>  rtmaxj = 1.00e+30
>>  rtmaxv = 1.00e+30
>>  * iteration log frequency
>>  lfilos =  1
>>  lfilog =  1
>>  lsismp = t
>>  lspost = false
>>  rtpiva = 1.E-15
>>  *rtnwmi = 4.E-11
>>  *rtnwma = 5.E-7
>>  Lmmxsf = 1
Finished reading from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"

 
 
    C O N O P T 3   version 3.17K
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
 ** Warning **  The value of LFITER is out of range.
                LFITER is decreased from 2147483647 to 1000000000.
 
                   Pre-triangular equations:   0
                   Post-triangular equations:  0
 
 
 ** Optimal solution. Reduced gradient less than tolerance.
 
 
 CONOPT time Total                            0.033 seconds
   of which: Function evaluations             0.000 =  0.0%
             1st Derivative evaluations       0.000 =  0.0%
 


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 20
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


**** EXECERROR AT LINE 3461 CLEARED (EXECERROR=0)
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 21
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE calib Using NLP From line 3474


LOOPS                                  itr   itr1
                                       rrr   RUS


MODEL STATISTICS

BLOCKS OF EQUATIONS          15     SINGLE EQUATIONS          153
BLOCKS OF VARIABLES          13     SINGLE VARIABLES          820
NON ZERO ELEMENTS         4,083     NON LINEAR N-Z            714
CODE LENGTH               3,561     CONSTANT POOL           1,421


GENERATION TIME      =        0.000 SECONDS      7 MB  36.1.0 r2c0a44a WEX-WEI
               L O O P S                itr itr1
                                        rrr RUS

GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 22
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE calib Using NLP From line 3474


               S O L V E      S U M M A R Y

     MODEL   calib               OBJECTIVE  obj
     TYPE    NLP                 DIRECTION  MINIMIZE
     SOLVER  CONOPT              FROM LINE  3474

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      2 Locally Optimal
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.094       120.000
 ITERATION COUNT, LIMIT        17    2147483647
 EVALUATION ERRORS              0          1000

Reading parameter(s) from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"
>>  * -------------------------------------------------
>>  *   General Option file for CONOPT3
>>  * -------------------------------------------------
>>  * Maximum and minimum jacobian element
>>  rtmaxj = 1.00e+30
>>  rtmaxv = 1.00e+30
>>  * iteration log frequency
>>  lfilos =  1
>>  lfilog =  1
>>  lsismp = t
>>  lspost = false
>>  rtpiva = 1.E-15
>>  *rtnwmi = 4.E-11
>>  *rtnwma = 5.E-7
>>  Lmmxsf = 1
Finished reading from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"

 
 
    C O N O P T 3   version 3.17K
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
    The model has 820 variables and 153 constraints
    with 4083 Jacobian elements, 714 of which are nonlinear.
    The Hessian of the Lagrangian has 714 elements on the diagonal,
    0 elements below the diagonal, and 714 nonlinear variables.
 
 ** Warning **  The value of LFITER is out of range.
                LFITER is decreased from 2147483647 to 1000000000.
 
                   Pre-triangular equations:   0
                   Post-triangular equations:  0
 
 
 ** Optimal solution. Reduced gradient less than tolerance.
 
 
 CONOPT time Total                            0.063 seconds
   of which: Function evaluations             0.016 = 25.4%
             1st Derivative evaluations       0.015 = 23.8%
             2nd Derivative evaluations       0.000 =  0.0%
             Directional 2nd Derivative       0.000 =  0.0%
 


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 23
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE lpfeas Using LP From line 3460


LOOPS                                  itr   itr1
                                       rrr   EUR


MODEL STATISTICS

BLOCKS OF EQUATIONS          14     SINGLE EQUATIONS          152
BLOCKS OF VARIABLES          12     SINGLE VARIABLES          835
NON ZERO ELEMENTS         3,374


GENERATION TIME      =        0.000 SECONDS      7 MB  36.1.0 r2c0a44a WEX-WEI
               L O O P S                itr itr1
                                        rrr EUR

GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 24
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE lpfeas Using LP From line 3460


               S O L V E      S U M M A R Y

     MODEL   lpfeas              OBJECTIVE  vz
     TYPE    LP                  DIRECTION  MINIMIZE
     SOLVER  CONOPT              FROM LINE  3460

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      1 Optimal
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.063       120.000
 ITERATION COUNT, LIMIT         5    2147483647

Reading parameter(s) from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"
>>  * -------------------------------------------------
>>  *   General Option file for CONOPT3
>>  * -------------------------------------------------
>>  * Maximum and minimum jacobian element
>>  rtmaxj = 1.00e+30
>>  rtmaxv = 1.00e+30
>>  * iteration log frequency
>>  lfilos =  1
>>  lfilog =  1
>>  lsismp = t
>>  lspost = false
>>  rtpiva = 1.E-15
>>  *rtnwmi = 4.E-11
>>  *rtnwma = 5.E-7
>>  Lmmxsf = 1
Finished reading from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"

 
 
    C O N O P T 3   version 3.17K
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
 ** Warning **  The value of LFITER is out of range.
                LFITER is decreased from 2147483647 to 1000000000.
 
                   Pre-triangular equations:   0
                   Post-triangular equations:  0
 
 
 ** Optimal solution. Reduced gradient less than tolerance.
 
 
 CONOPT time Total                            0.032 seconds
   of which: Function evaluations             0.000 =  0.0%
             1st Derivative evaluations       0.000 =  0.0%
 


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 25
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


**** EXECERROR AT LINE 3461 CLEARED (EXECERROR=0)
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 26
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE calib Using NLP From line 3474


LOOPS                                  itr   itr1
                                       rrr   EUR


MODEL STATISTICS

BLOCKS OF EQUATIONS          15     SINGLE EQUATIONS          153
BLOCKS OF VARIABLES          13     SINGLE VARIABLES          836
NON ZERO ELEMENTS         4,163     NON LINEAR N-Z            787
CODE LENGTH               3,926     CONSTANT POOL           1,567


GENERATION TIME      =        0.031 SECONDS      7 MB  36.1.0 r2c0a44a WEX-WEI
               L O O P S                itr itr1
                                        rrr EUR

GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 27
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE calib Using NLP From line 3474


               S O L V E      S U M M A R Y

     MODEL   calib               OBJECTIVE  obj
     TYPE    NLP                 DIRECTION  MINIMIZE
     SOLVER  CONOPT              FROM LINE  3474

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      2 Locally Optimal
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.063       120.000
 ITERATION COUNT, LIMIT        13    2147483647
 EVALUATION ERRORS              0          1000

Reading parameter(s) from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"
>>  * -------------------------------------------------
>>  *   General Option file for CONOPT3
>>  * -------------------------------------------------
>>  * Maximum and minimum jacobian element
>>  rtmaxj = 1.00e+30
>>  rtmaxv = 1.00e+30
>>  * iteration log frequency
>>  lfilos =  1
>>  lfilog =  1
>>  lsismp = t
>>  lspost = false
>>  rtpiva = 1.E-15
>>  *rtnwmi = 4.E-11
>>  *rtnwma = 5.E-7
>>  Lmmxsf = 1
Finished reading from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"

 
 
    C O N O P T 3   version 3.17K
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
    The model has 836 variables and 153 constraints
    with 4163 Jacobian elements, 787 of which are nonlinear.
    The Hessian of the Lagrangian has 787 elements on the diagonal,
    0 elements below the diagonal, and 787 nonlinear variables.
 
 ** Warning **  The value of LFITER is out of range.
                LFITER is decreased from 2147483647 to 1000000000.
 
                   Pre-triangular equations:   0
                   Post-triangular equations:  0
 
 
 ** Optimal solution. Reduced gradient less than tolerance.
 
 
 CONOPT time Total                            0.047 seconds
   of which: Function evaluations             0.000 =  0.0%
             1st Derivative evaluations       0.000 =  0.0%
             2nd Derivative evaluations       0.000 =  0.0%
             Directional 2nd Derivative       0.000 =  0.0%
 


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 28
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE lpfeas Using LP From line 3460


LOOPS                                  itr   itr1
                                       rrr   XOE


MODEL STATISTICS

BLOCKS OF EQUATIONS          14     SINGLE EQUATIONS          152
BLOCKS OF VARIABLES          12     SINGLE VARIABLES          821
NON ZERO ELEMENTS         3,389


GENERATION TIME      =        0.016 SECONDS      7 MB  36.1.0 r2c0a44a WEX-WEI
               L O O P S                itr itr1
                                        rrr XOE

GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 29
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE lpfeas Using LP From line 3460


               S O L V E      S U M M A R Y

     MODEL   lpfeas              OBJECTIVE  vz
     TYPE    LP                  DIRECTION  MINIMIZE
     SOLVER  CONOPT              FROM LINE  3460

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      1 Optimal
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.062       120.000
 ITERATION COUNT, LIMIT         5    2147483647

Reading parameter(s) from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"
>>  * -------------------------------------------------
>>  *   General Option file for CONOPT3
>>  * -------------------------------------------------
>>  * Maximum and minimum jacobian element
>>  rtmaxj = 1.00e+30
>>  rtmaxv = 1.00e+30
>>  * iteration log frequency
>>  lfilos =  1
>>  lfilog =  1
>>  lsismp = t
>>  lspost = false
>>  rtpiva = 1.E-15
>>  *rtnwmi = 4.E-11
>>  *rtnwma = 5.E-7
>>  Lmmxsf = 1
Finished reading from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"

 
 
    C O N O P T 3   version 3.17K
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
 ** Warning **  The value of LFITER is out of range.
                LFITER is decreased from 2147483647 to 1000000000.
 
                   Pre-triangular equations:   0
                   Post-triangular equations:  0
 
 
 ** Optimal solution. Reduced gradient less than tolerance.
 
 
 CONOPT time Total                            0.047 seconds
   of which: Function evaluations             0.000 =  0.0%
             1st Derivative evaluations       0.000 =  0.0%
 


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             1  PROJECTED
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 30
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


**** EXECERROR AT LINE 3461 CLEARED (EXECERROR=0)
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 31
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE calib Using NLP From line 3474


LOOPS                                  itr   itr1
                                       rrr   XOE


MODEL STATISTICS

BLOCKS OF EQUATIONS          15     SINGLE EQUATIONS          153
BLOCKS OF VARIABLES          13     SINGLE VARIABLES          822
NON ZERO ELEMENTS         4,093     NON LINEAR N-Z            702
CODE LENGTH               3,501     CONSTANT POOL           1,397


GENERATION TIME      =        0.016 SECONDS      7 MB  36.1.0 r2c0a44a WEX-WEI
               L O O P S                itr itr1
                                        rrr XOE

GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 32
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE calib Using NLP From line 3474


               S O L V E      S U M M A R Y

     MODEL   calib               OBJECTIVE  obj
     TYPE    NLP                 DIRECTION  MINIMIZE
     SOLVER  CONOPT              FROM LINE  3474

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      2 Locally Optimal
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.078       120.000
 ITERATION COUNT, LIMIT        14    2147483647
 EVALUATION ERRORS              0          1000

Reading parameter(s) from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"
>>  * -------------------------------------------------
>>  *   General Option file for CONOPT3
>>  * -------------------------------------------------
>>  * Maximum and minimum jacobian element
>>  rtmaxj = 1.00e+30
>>  rtmaxv = 1.00e+30
>>  * iteration log frequency
>>  lfilos =  1
>>  lfilog =  1
>>  lsismp = t
>>  lspost = false
>>  rtpiva = 1.E-15
>>  *rtnwmi = 4.E-11
>>  *rtnwma = 5.E-7
>>  Lmmxsf = 1
Finished reading from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"

 
 
    C O N O P T 3   version 3.17K
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
    The model has 822 variables and 153 constraints
    with 4093 Jacobian elements, 702 of which are nonlinear.
    The Hessian of the Lagrangian has 702 elements on the diagonal,
    0 elements below the diagonal, and 702 nonlinear variables.
 
 ** Warning **  The value of LFITER is out of range.
                LFITER is decreased from 2147483647 to 1000000000.
 
                   Pre-triangular equations:   0
                   Post-triangular equations:  0
 
 
 ** Optimal solution. Reduced gradient less than tolerance.
 
 
 CONOPT time Total                            0.046 seconds
   of which: Function evaluations             0.000 =  0.0%
             1st Derivative evaluations       0.000 =  0.0%
             2nd Derivative evaluations       0.000 =  0.0%
             Directional 2nd Derivative       0.000 =  0.0%
 


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 33
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE lpfeas Using LP From line 3460


LOOPS                                  itr   itr1
                                       rrr   OPC


MODEL STATISTICS

BLOCKS OF EQUATIONS          14     SINGLE EQUATIONS          152
BLOCKS OF VARIABLES          12     SINGLE VARIABLES          827
NON ZERO ELEMENTS         3,409


GENERATION TIME      =        0.000 SECONDS      7 MB  36.1.0 r2c0a44a WEX-WEI
               L O O P S                itr itr1
                                        rrr OPC

GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 34
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE lpfeas Using LP From line 3460


               S O L V E      S U M M A R Y

     MODEL   lpfeas              OBJECTIVE  vz
     TYPE    LP                  DIRECTION  MINIMIZE
     SOLVER  CONOPT              FROM LINE  3460

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      1 Optimal
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.062       120.000
 ITERATION COUNT, LIMIT         5    2147483647

Reading parameter(s) from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"
>>  * -------------------------------------------------
>>  *   General Option file for CONOPT3
>>  * -------------------------------------------------
>>  * Maximum and minimum jacobian element
>>  rtmaxj = 1.00e+30
>>  rtmaxv = 1.00e+30
>>  * iteration log frequency
>>  lfilos =  1
>>  lfilog =  1
>>  lsismp = t
>>  lspost = false
>>  rtpiva = 1.E-15
>>  *rtnwmi = 4.E-11
>>  *rtnwma = 5.E-7
>>  Lmmxsf = 1
Finished reading from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"

 
 
    C O N O P T 3   version 3.17K
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
 ** Warning **  The value of LFITER is out of range.
                LFITER is decreased from 2147483647 to 1000000000.
 
                   Pre-triangular equations:   0
                   Post-triangular equations:  0
 
 
 ** Optimal solution. Reduced gradient less than tolerance.
 
 
 CONOPT time Total                            0.031 seconds
   of which: Function evaluations             0.000 =  0.0%
             1st Derivative evaluations       0.000 =  0.0%
 


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             1  PROJECTED
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 35
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


**** EXECERROR AT LINE 3461 CLEARED (EXECERROR=0)
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 36
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE calib Using NLP From line 3474


LOOPS                                  itr   itr1
                                       rrr   OPC


MODEL STATISTICS

BLOCKS OF EQUATIONS          15     SINGLE EQUATIONS          153
BLOCKS OF VARIABLES          13     SINGLE VARIABLES          828
NON ZERO ELEMENTS         4,123     NON LINEAR N-Z            712
CODE LENGTH               3,551     CONSTANT POOL           1,417


GENERATION TIME      =        0.016 SECONDS      7 MB  36.1.0 r2c0a44a WEX-WEI
               L O O P S                itr itr1
                                        rrr OPC

GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 37
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE calib Using NLP From line 3474


               S O L V E      S U M M A R Y

     MODEL   calib               OBJECTIVE  obj
     TYPE    NLP                 DIRECTION  MINIMIZE
     SOLVER  CONOPT              FROM LINE  3474

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      2 Locally Optimal
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.047       120.000
 ITERATION COUNT, LIMIT        13    2147483647
 EVALUATION ERRORS              0          1000

Reading parameter(s) from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"
>>  * -------------------------------------------------
>>  *   General Option file for CONOPT3
>>  * -------------------------------------------------
>>  * Maximum and minimum jacobian element
>>  rtmaxj = 1.00e+30
>>  rtmaxv = 1.00e+30
>>  * iteration log frequency
>>  lfilos =  1
>>  lfilog =  1
>>  lsismp = t
>>  lspost = false
>>  rtpiva = 1.E-15
>>  *rtnwmi = 4.E-11
>>  *rtnwma = 5.E-7
>>  Lmmxsf = 1
Finished reading from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"

 
 
    C O N O P T 3   version 3.17K
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
    The model has 828 variables and 153 constraints
    with 4123 Jacobian elements, 712 of which are nonlinear.
    The Hessian of the Lagrangian has 712 elements on the diagonal,
    0 elements below the diagonal, and 712 nonlinear variables.
 
 ** Warning **  The value of LFITER is out of range.
                LFITER is decreased from 2147483647 to 1000000000.
 
                   Pre-triangular equations:   0
                   Post-triangular equations:  0
 
 
 ** Optimal solution. Reduced gradient less than tolerance.
 
 
 CONOPT time Total                            0.047 seconds
   of which: Function evaluations             0.000 =  0.0%
             1st Derivative evaluations       0.000 =  0.0%
             2nd Derivative evaluations       0.016 = 34.0%
             Directional 2nd Derivative       0.000 =  0.0%
 


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 38
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE lpfeas Using LP From line 3460


LOOPS                                  itr   itr1
                                       rrr   SAS


MODEL STATISTICS

BLOCKS OF EQUATIONS          14     SINGLE EQUATIONS          152
BLOCKS OF VARIABLES          12     SINGLE VARIABLES          829
NON ZERO ELEMENTS         3,405


GENERATION TIME      =        0.016 SECONDS      7 MB  36.1.0 r2c0a44a WEX-WEI
               L O O P S                itr itr1
                                        rrr SAS

GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 39
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE lpfeas Using LP From line 3460


               S O L V E      S U M M A R Y

     MODEL   lpfeas              OBJECTIVE  vz
     TYPE    LP                  DIRECTION  MINIMIZE
     SOLVER  CONOPT              FROM LINE  3460

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      1 Optimal
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.032       120.000
 ITERATION COUNT, LIMIT         5    2147483647

Reading parameter(s) from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"
>>  * -------------------------------------------------
>>  *   General Option file for CONOPT3
>>  * -------------------------------------------------
>>  * Maximum and minimum jacobian element
>>  rtmaxj = 1.00e+30
>>  rtmaxv = 1.00e+30
>>  * iteration log frequency
>>  lfilos =  1
>>  lfilog =  1
>>  lsismp = t
>>  lspost = false
>>  rtpiva = 1.E-15
>>  *rtnwmi = 4.E-11
>>  *rtnwma = 5.E-7
>>  Lmmxsf = 1
Finished reading from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"

 
 
    C O N O P T 3   version 3.17K
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
 ** Warning **  The value of LFITER is out of range.
                LFITER is decreased from 2147483647 to 1000000000.
 
                   Pre-triangular equations:   0
                   Post-triangular equations:  0
 
 
 ** Optimal solution. Reduced gradient less than tolerance.
 
 
 CONOPT time Total                            0.015 seconds
   of which: Function evaluations             0.000 =  0.0%
             1st Derivative evaluations       0.000 =  0.0%
 


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             1  PROJECTED
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 40
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


**** EXECERROR AT LINE 3461 CLEARED (EXECERROR=0)
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 41
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE calib Using NLP From line 3474


LOOPS                                  itr   itr1
                                       rrr   SAS


MODEL STATISTICS

BLOCKS OF EQUATIONS          15     SINGLE EQUATIONS          153
BLOCKS OF VARIABLES          13     SINGLE VARIABLES          830
NON ZERO ELEMENTS         4,133     NON LINEAR N-Z            726
CODE LENGTH               3,621     CONSTANT POOL           1,445


GENERATION TIME      =        0.016 SECONDS      7 MB  36.1.0 r2c0a44a WEX-WEI
               L O O P S                itr itr1
                                        rrr SAS

GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 42
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE calib Using NLP From line 3474


               S O L V E      S U M M A R Y

     MODEL   calib               OBJECTIVE  obj
     TYPE    NLP                 DIRECTION  MINIMIZE
     SOLVER  CONOPT              FROM LINE  3474

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      2 Locally Optimal
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.078       120.000
 ITERATION COUNT, LIMIT        14    2147483647
 EVALUATION ERRORS              0          1000

Reading parameter(s) from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"
>>  * -------------------------------------------------
>>  *   General Option file for CONOPT3
>>  * -------------------------------------------------
>>  * Maximum and minimum jacobian element
>>  rtmaxj = 1.00e+30
>>  rtmaxv = 1.00e+30
>>  * iteration log frequency
>>  lfilos =  1
>>  lfilog =  1
>>  lsismp = t
>>  lspost = false
>>  rtpiva = 1.E-15
>>  *rtnwmi = 4.E-11
>>  *rtnwma = 5.E-7
>>  Lmmxsf = 1
Finished reading from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"

 
 
    C O N O P T 3   version 3.17K
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
    The model has 830 variables and 153 constraints
    with 4133 Jacobian elements, 726 of which are nonlinear.
    The Hessian of the Lagrangian has 726 elements on the diagonal,
    0 elements below the diagonal, and 726 nonlinear variables.
 
 ** Warning **  The value of LFITER is out of range.
                LFITER is decreased from 2147483647 to 1000000000.
 
                   Pre-triangular equations:   0
                   Post-triangular equations:  0
 
 
 ** Optimal solution. Reduced gradient less than tolerance.
 
 
 CONOPT time Total                            0.047 seconds
   of which: Function evaluations             0.000 =  0.0%
             1st Derivative evaluations       0.000 =  0.0%
             2nd Derivative evaluations       0.000 =  0.0%
             Directional 2nd Derivative       0.000 =  0.0%
 


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 43
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE lpfeas Using LP From line 3460


LOOPS                                  itr   itr1
                                       rrr   XLC


MODEL STATISTICS

BLOCKS OF EQUATIONS          14     SINGLE EQUATIONS          152
BLOCKS OF VARIABLES          12     SINGLE VARIABLES          835
NON ZERO ELEMENTS         3,439


GENERATION TIME      =        0.031 SECONDS      7 MB  36.1.0 r2c0a44a WEX-WEI
               L O O P S                itr itr1
                                        rrr XLC

GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 44
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE lpfeas Using LP From line 3460


               S O L V E      S U M M A R Y

     MODEL   lpfeas              OBJECTIVE  vz
     TYPE    LP                  DIRECTION  MINIMIZE
     SOLVER  CONOPT              FROM LINE  3460

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      1 Optimal
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.047       120.000
 ITERATION COUNT, LIMIT         5    2147483647

Reading parameter(s) from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"
>>  * -------------------------------------------------
>>  *   General Option file for CONOPT3
>>  * -------------------------------------------------
>>  * Maximum and minimum jacobian element
>>  rtmaxj = 1.00e+30
>>  rtmaxv = 1.00e+30
>>  * iteration log frequency
>>  lfilos =  1
>>  lfilog =  1
>>  lsismp = t
>>  lspost = false
>>  rtpiva = 1.E-15
>>  *rtnwmi = 4.E-11
>>  *rtnwma = 5.E-7
>>  Lmmxsf = 1
Finished reading from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"

 
 
    C O N O P T 3   version 3.17K
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
 ** Warning **  The value of LFITER is out of range.
                LFITER is decreased from 2147483647 to 1000000000.
 
                   Pre-triangular equations:   0
                   Post-triangular equations:  0
 
 
 ** Optimal solution. Reduced gradient less than tolerance.
 
 
 CONOPT time Total                            0.032 seconds
   of which: Function evaluations             0.000 =  0.0%
             1st Derivative evaluations       0.000 =  0.0%
 


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             1  PROJECTED
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 45
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


**** EXECERROR AT LINE 3461 CLEARED (EXECERROR=0)
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 46
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE calib Using NLP From line 3474


LOOPS                                  itr   itr1
                                       rrr   XLC


MODEL STATISTICS

BLOCKS OF EQUATIONS          15     SINGLE EQUATIONS          153
BLOCKS OF VARIABLES          13     SINGLE VARIABLES          836
NON ZERO ELEMENTS         4,163     NON LINEAR N-Z            722
CODE LENGTH               3,601     CONSTANT POOL           1,437


GENERATION TIME      =        0.016 SECONDS      7 MB  36.1.0 r2c0a44a WEX-WEI
               L O O P S                itr itr1
                                        rrr XLC

GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 47
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE calib Using NLP From line 3474


               S O L V E      S U M M A R Y

     MODEL   calib               OBJECTIVE  obj
     TYPE    NLP                 DIRECTION  MINIMIZE
     SOLVER  CONOPT              FROM LINE  3474

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      2 Locally Optimal
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.078       120.000
 ITERATION COUNT, LIMIT        14    2147483647
 EVALUATION ERRORS              0          1000

Reading parameter(s) from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"
>>  * -------------------------------------------------
>>  *   General Option file for CONOPT3
>>  * -------------------------------------------------
>>  * Maximum and minimum jacobian element
>>  rtmaxj = 1.00e+30
>>  rtmaxv = 1.00e+30
>>  * iteration log frequency
>>  lfilos =  1
>>  lfilog =  1
>>  lsismp = t
>>  lspost = false
>>  rtpiva = 1.E-15
>>  *rtnwmi = 4.E-11
>>  *rtnwma = 5.E-7
>>  Lmmxsf = 1
Finished reading from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"

 
 
    C O N O P T 3   version 3.17K
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
    The model has 836 variables and 153 constraints
    with 4163 Jacobian elements, 722 of which are nonlinear.
    The Hessian of the Lagrangian has 722 elements on the diagonal,
    0 elements below the diagonal, and 722 nonlinear variables.
 
 ** Warning **  The value of LFITER is out of range.
                LFITER is decreased from 2147483647 to 1000000000.
 
                   Pre-triangular equations:   0
                   Post-triangular equations:  0
 
 
 ** Optimal solution. Reduced gradient less than tolerance.
 
 
 CONOPT time Total                            0.063 seconds
   of which: Function evaluations             0.000 =  0.0%
             1st Derivative evaluations       0.000 =  0.0%
             2nd Derivative evaluations       0.000 =  0.0%
             Directional 2nd Derivative       0.000 =  0.0%
 


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 48
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE lpfeas Using LP From line 3460


LOOPS                                  itr   itr1
                                       rrr   ROW


MODEL STATISTICS

BLOCKS OF EQUATIONS          14     SINGLE EQUATIONS          152
BLOCKS OF VARIABLES          12     SINGLE VARIABLES          843
NON ZERO ELEMENTS         3,415


GENERATION TIME      =        0.016 SECONDS      7 MB  36.1.0 r2c0a44a WEX-WEI
               L O O P S                itr itr1
                                        rrr ROW

GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 49
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE lpfeas Using LP From line 3460


               S O L V E      S U M M A R Y

     MODEL   lpfeas              OBJECTIVE  vz
     TYPE    LP                  DIRECTION  MINIMIZE
     SOLVER  CONOPT              FROM LINE  3460

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      1 Optimal
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.047       120.000
 ITERATION COUNT, LIMIT         5    2147483647

Reading parameter(s) from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"
>>  * -------------------------------------------------
>>  *   General Option file for CONOPT3
>>  * -------------------------------------------------
>>  * Maximum and minimum jacobian element
>>  rtmaxj = 1.00e+30
>>  rtmaxv = 1.00e+30
>>  * iteration log frequency
>>  lfilos =  1
>>  lfilog =  1
>>  lsismp = t
>>  lspost = false
>>  rtpiva = 1.E-15
>>  *rtnwmi = 4.E-11
>>  *rtnwma = 5.E-7
>>  Lmmxsf = 1
Finished reading from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"

 
 
    C O N O P T 3   version 3.17K
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
 ** Warning **  The value of LFITER is out of range.
                LFITER is decreased from 2147483647 to 1000000000.
 
                   Pre-triangular equations:   0
                   Post-triangular equations:  0
 
 
 ** Optimal solution. Reduced gradient less than tolerance.
 
 
 CONOPT time Total                            0.016 seconds
   of which: Function evaluations             0.000 =  0.0%
             1st Derivative evaluations       0.000 =  0.0%
 


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 50
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


**** EXECERROR AT LINE 3461 CLEARED (EXECERROR=0)
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 51
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE calib Using NLP From line 3474


LOOPS                                  itr   itr1
                                       rrr   ROW


MODEL STATISTICS

BLOCKS OF EQUATIONS          15     SINGLE EQUATIONS          153
BLOCKS OF VARIABLES          13     SINGLE VARIABLES          844
NON ZERO ELEMENTS         4,203     NON LINEAR N-Z            786
CODE LENGTH               3,921     CONSTANT POOL           1,565


GENERATION TIME      =        0.031 SECONDS      8 MB  36.1.0 r2c0a44a WEX-WEI
               L O O P S                itr itr1
                                        rrr ROW

GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 52
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE calib Using NLP From line 3474


               S O L V E      S U M M A R Y

     MODEL   calib               OBJECTIVE  obj
     TYPE    NLP                 DIRECTION  MINIMIZE
     SOLVER  CONOPT              FROM LINE  3474

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      2 Locally Optimal
**** OBJECTIVE VALUE                0.0000

 RESOURCE USAGE, LIMIT          0.078       120.000
 ITERATION COUNT, LIMIT        13    2147483647
 EVALUATION ERRORS              0          1000

Reading parameter(s) from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"
>>  * -------------------------------------------------
>>  *   General Option file for CONOPT3
>>  * -------------------------------------------------
>>  * Maximum and minimum jacobian element
>>  rtmaxj = 1.00e+30
>>  rtmaxv = 1.00e+30
>>  * iteration log frequency
>>  lfilos =  1
>>  lfilog =  1
>>  lsismp = t
>>  lspost = false
>>  rtpiva = 1.E-15
>>  *rtnwmi = 4.E-11
>>  *rtnwma = 5.E-7
>>  Lmmxsf = 1
Finished reading from "F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\conopt.opt"

 
 
    C O N O P T 3   version 3.17K
    Copyright (C)   ARKI Consulting and Development A/S
                    Bagsvaerdvej 246 A
                    DK-2880 Bagsvaerd, Denmark
 
 
    The model has 844 variables and 153 constraints
    with 4203 Jacobian elements, 786 of which are nonlinear.
    The Hessian of the Lagrangian has 786 elements on the diagonal,
    0 elements below the diagonal, and 786 nonlinear variables.
 
 ** Warning **  The value of LFITER is out of range.
                LFITER is decreased from 2147483647 to 1000000000.
 
                   Pre-triangular equations:   0
                   Post-triangular equations:  0
 
 
 ** Optimal solution. Reduced gradient less than tolerance.
 
 
 CONOPT time Total                            0.047 seconds
   of which: Function evaluations             0.015 = 31.9%
             1st Derivative evaluations       0.000 =  0.0%
             2nd Derivative evaluations       0.000 =  0.0%
             Directional 2nd Derivative       0.000 =  0.0%
 


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
GAMS 36.1.0  r2c0a44a Released Aug  2, 2021 WEX-WEI x86 64bit/MS Windows - 11/19/21 11:43:21 Page 53
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----   3842 PARAMETER checkDim  

               before       after       delta     % delta

CHN.vdib  4046305.317 4046305.317
CHN.vmib   318027.544  318027.544
CHN.vdep  1631747.375 1631752.448       5.073 3.109207E-4
CHN.vkb   4.079368E+7 4.079381E+7     126.836 3.109207E-4
CHN.fdepr       0.040       0.040 6.93889E-18 1.73472E-14
CHN.save  3379357.500 3379374.702      17.202 5.090331E-4
CHN.fsav  -446085.985 -446085.874       0.111 -2.49345E-5
CHN.xft   4200350.653 4200355.503       4.850 1.154616E-4
XEA.vdib   743911.267  743911.267
XEA.vmib   249430.219  249430.219
XEA.vdep   429374.551  429374.510      -0.042 -9.74275E-6
XEA.vkb   1.073436E+7 1.073436E+7      -1.046 -9.74275E-6
XEA.fdepr       0.040       0.040 6.93889E-18 1.73472E-14
XEA.save   685809.353  685809.170      -0.182 -2.65717E-5
XEA.fsav  -103886.460 -103886.493      -0.033 3.176662E-5
XEA.xft   1666801.317 1666801.006      -0.311 -1.86736E-5
USA.vdib  3019695.415 3019695.415
USA.vmib   359774.584  359774.584
USA.vdep  2153940.000 2108532.439  -45407.561      -2.108
USA.vkb   5.384850E+7 5.384850E+7      -3.270 -6.07242E-6
USA.fdepr       0.040       0.039 -8.43244E-4      -2.108
USA.save   635141.000  680546.122   45405.122       7.149
USA.fsav   613651.996  613652.049       0.053 8.712086E-6
USA.xft   4322604.289 4322604.193      -0.096 -2.22143E-6
RUS.vdib   311237.658  311237.658
RUS.vmib    98043.089   98043.089
RUS.vdep   173038.641  173038.663       0.023 1.310689E-5
RUS.vkb   4325966.000 4325966.567       0.567 1.310689E-5
RUS.fdepr       0.040       0.040 -6.9389E-18 -1.7347E-14
RUS.save   400391.250  400390.843      -0.407 -1.01692E-4
RUS.fsav  -143787.421 -143787.412       0.008 -5.77788E-6
RUS.xft    874768.945  874769.191       0.246 2.810555E-5
EUR.vdib  3006467.324 3006467.324
EUR.vmib   680511.159  680511.159
EUR.vdep  2669523.615 2669523.085      -0.530 -1.98573E-5
EUR.vkb   6.673809E+7 6.673808E+7     -13.252 -1.98573E-5
EUR.fdepr       0.040       0.040 -6.9389E-18 -1.7347E-14
EUR.save  1392356.547 1392357.985       1.438 1.032935E-4
EUR.fsav  -130558.802 -130558.866      -0.064 4.906158E-5
EUR.xft   7968493.376 7968488.498      -4.878 -6.12139E-5
XOE.vdib  1895485.364 1895485.364
XOE.vmib   291649.245  291649.245
XOE.vdep  1422774.107 1422774.463       0.355 2.498453E-5
XOE.vkb   3.556935E+7 3.556936E+7       8.887 2.498453E-5
XOE.fdepr       0.040       0.040
XOE.save   863567.625  863567.983       0.358 4.142813E-5
XOE.fsav   -18983.420  -18983.461      -0.041 2.160886E-4
XOE.xft   3904824.181 3904825.003       0.823 2.107248E-5
OPC.vdib  1266623.586 1266623.586
OPC.vmib   202165.460  202165.460
OPC.vdep   700307.705  700307.461      -0.244 -3.48168E-5
OPC.vkb   1.750769E+7 1.750769E+7      -6.096 -3.48168E-5
OPC.fdepr       0.040       0.040
OPC.save  1096972.367 1096972.320      -0.047 -4.30027E-6
OPC.fsav  -281178.318 -281178.333      -0.014 5.142570E-6
OPC.xft   3018626.577 3018624.367      -2.211 -7.32302E-5
SAS.vdib   663011.243  663011.243
SAS.vmib    86917.630   86917.630
SAS.vdep   299237.601  299237.605       0.004 1.345078E-6
SAS.vkb   7480940.148 7480940.249       0.101 1.345078E-6
SAS.fdepr       0.040       0.040
SAS.save   331842.572  331843.072       0.500 1.507101E-4
SAS.fsav   148490.906  148490.925       0.020 1.315243E-5
SAS.xft   1097376.461 1097376.551       0.091 8.251198E-6
XLC.vdib   543687.903  543687.903
XLC.vmib   185958.892  185958.892
XLC.vdep   414556.778  414556.884       0.106 2.545947E-5
XLC.vkb   1.036392E+7 1.036392E+7       2.639 2.545947E-5
XLC.fdepr       0.040       0.040
XLC.save   235357.144  235357.145 7.561613E-4 3.212825E-7
XLC.fsav    92599.139   92599.104      -0.034 -3.72235E-5
XLC.xft   1677254.196 1677255.035       0.840 5.005522E-5
ROW.vdib   597695.539  597695.539
ROW.vmib   171355.853  171355.853
ROW.vdep   360938.118  360938.058      -0.060 -1.67226E-5
ROW.vkb   9023453.248 9023451.739      -1.509 -1.67226E-5
ROW.fdepr       0.040       0.040
ROW.save   171909.213  171908.830      -0.383 -2.22889E-4
ROW.fsav   269738.363  269738.358      -0.005 -1.97147E-6
ROW.xft   1552173.733 1552173.185      -0.548 -3.53116E-5


----   3882 PARAMETER check  

              before       after       delta           %

CHN.evfp 8716663.126 8716671.004       7.878 9.037881E-5
CHN.ftrv  182335.853  182335.860       0.007 3.566938E-6
CHN.fbep             2.33997E-10 2.33997E-10
CHN.osep   32608.827   32608.575      -0.253 -7.74735E-4
CHN.evos 8034429.914 8034437.287       7.373 9.176459E-5
XEA.evfp 3259386.644 3259386.208      -0.436 -1.33710E-5
XEA.ftrv  114388.522  114388.472      -0.050 -4.38139E-5
XEA.fbep             -7.6420E-11 -7.6420E-11
XEA.osep  -21761.759  -21761.586       0.173 -7.96636E-4
XEA.evos 2885062.997 2885062.640      -0.356 -1.23518E-5
USA.evfp 1.610704E+7 1.610704E+7      -0.543 -3.37120E-6
USA.ftrv 1521752.727 1521752.683      -0.045 -2.92449E-6
USA.fbep             -9.0658E-11 -9.0658E-11
USA.osep -720058.460 -720057.696       0.764 -1.06098E-4
USA.evos 1.264832E+7 1.264832E+7      -0.429 -3.38783E-6
RUS.evfp 1637917.608 1637918.004       0.396 2.419146E-5
RUS.ftrv  142589.774  142589.853       0.080 5.594999E-5
RUS.fbep             -1.0474E-11 -1.0474E-11
RUS.osep     325.702     325.693      -0.009      -0.003
RUS.evos 1346614.121 1346614.409       0.288 2.135537E-5
EUR.evfp 1.693439E+7 1.693438E+7      -9.467 -5.59045E-5
EUR.ftrv 2997242.598 2997240.609      -1.989 -6.63501E-5
EUR.fbep             -1.09143E-9 -1.09143E-9
EUR.osep -226145.524 -226145.550      -0.026 1.155201E-5
EUR.evos 1.163317E+7 1.163317E+7      -6.369 -5.47514E-5
XOE.evfp 8503074.880 8503075.728       0.848 9.975685E-6
XOE.ftrv 1001381.843 1001382.452       0.609 6.080952E-5
XOE.fbep             -6.9118E-11 -6.9118E-11
XOE.osep -390564.196 -390566.159      -1.963 5.025382E-4
XOE.evos 6509125.634 6509125.920       0.286 4.396137E-6
OPC.evfp 6033540.221 6033537.077      -3.144 -5.21088E-5
OPC.ftrv  390161.203  390161.020      -0.183 -4.69659E-5
OPC.fbep             1.50185E-10 1.50185E-10
OPC.osep  -48458.505  -48458.483       0.022 -4.48041E-5
OPC.evos 5185542.554 5185539.834      -2.720 -5.24603E-5
SAS.evfp 2409905.148 2409905.308       0.160 6.622247E-6
SAS.ftrv    2927.363    2927.364 4.296880E-4 1.467833E-5
SAS.fbep             1.85028E-11 1.85028E-11
SAS.osep   -2866.675   -2866.677      -0.002 8.121737E-5
SAS.evos 2283048.260 2283048.410       0.151 6.602790E-6
XLC.evfp 3123232.309 3123233.321       1.012 3.239480E-5
XLC.ftrv  152902.019  152901.881      -0.138 -9.00997E-5
XLC.fbep             2.61703E-11 2.61703E-11
XLC.osep -112926.412 -112925.013       1.399      -0.001
XLC.evos 2746063.281 2746064.349       1.068 3.887533E-5
ROW.evfp 3087098.210 3087097.407      -0.803 -2.59956E-5
ROW.ftrv  210890.368  210890.319      -0.049 -2.33764E-5
ROW.fbep             -1.0453E-10 -1.0453E-10
ROW.osep  -25258.245  -25258.078       0.167 -6.59823E-4
ROW.evos 2622531.770 2622531.077      -0.693 -2.64289E-5


----   3882 VARIABLE keepCor.L  Difference between factor income plus BOP before and after

                 CHN         XEA         USA         RUS         EUR         XOE         OPC         SAS         XLC         ROW

nsk      8.574228E-5 -9.07412E-6 -2.13424E-6 1.196467E-5 -3.45488E-5 7.788966E-6 -3.82942E-5 8.610604E-6 1.929380E-5 -1.76193E-5
skl      2.638285E-5 -6.43568E-6 -5.05164E-6 1.475137E-5 -4.94080E-5 9.301340E-6 -2.76923E-5 2.317141E-6 1.681613E-5 -1.49065E-5
cap      1.131732E-4 -1.89436E-5 -2.30384E-6 3.455071E-5 -6.98501E-5 1.173796E-5 -7.36347E-5 8.245418E-6 4.486710E-5 -3.61574E-5
lnd      3.852391E-6 -6.92298E-7 -3.01352E-8 3.579439E-7 -9.59704E-8 6.170120E-8 -1.54230E-6 9.004555E-7 1.189604E-6 -8.89547E-7
nrs      1.710779E-7 -9.77680E-7 -3.65666E-7 4.113372E-6 -9.64816E-7 -2.37061E-6 -9.05443E-6 1.614075E-8 3.849418E-7 -1.98214E-6
factyBop 9.837446E-5 -1.51674E-5 -3.04051E-6 2.372234E-5 -5.55923E-5 1.910193E-6 -5.56372E-5 6.690098E-6 3.624766E-5 -2.46714E-5
evfb     9.037881E-5 -1.33710E-5 -3.37120E-6 2.419146E-5 -5.59045E-5 9.975685E-6 -5.21088E-5 6.622247E-6 3.239480E-5 -2.59956E-5
GDP      -1.52819E-5 6.285593E-7 6.471100E-7 -1.18833E-6 1.776024E-6 -1.67645E-6 2.365687E-6 -1.28119E-7 -1.65805E-6 1.186654E-6
yg       1.616650E-4 -2.63977E-7 -7.05700E-6 -1.56259E-6 2.193647E-5 2.403026E-5 3.331260E-6 -2.22376E-6 2.521604E-7 1.466871E-6
yp       4.210551E-4 2.816902E-6 -2.70909E-5 -4.69710E-6 6.055654E-5 7.754704E-5 1.393052E-5 -1.24461E-5 3.492309E-6 3.480144E-6
yi       5.063803E-4 -8.11894E-7 -9.92341E-6 -1.89176E-6 2.149929E-5 2.889658E-5 3.596618E-6 -5.56104E-6 8.637213E-7 1.866333E-6
int      2.148925E-5 -1.58968E-6 -8.28137E-6 5.131171E-6 -9.72005E-6 -1.31111E-5 -9.27086E-6 -1.77630E-6 -1.14147E-7 -2.93114E-6


**** REPORT FILE SUMMARY

logfile F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\ANX1Flt.log
csv F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\ANX1/flt/ANX1Flt.csv


EXECUTION TIME       =        2.453 SECONDS      8 MB  36.1.0 r2c0a44a WEX-WEI


USER: Development Economics                          G210129/0001CA-WIN
      The World Bank                                             DC5364


**** FILE SUMMARY

Input      F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter.gms
Output     F:\Andre\ENVISAGE-Training-2021-11\EnvisageNOV2021\Data\filter.lst
